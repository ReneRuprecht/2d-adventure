{"version":3,"sources":["../src/kaboom.ts","../src/math.ts","../src/utils.ts","../src/gfx.ts","../src/app.ts","../src/audio.ts","../src/assets.ts","../src/logger.ts","../src/plugins/kaboom.ts","config/game.js","config/kaboom.js","kaboom.js","helper/sprite-loader.js","helper/storage.js","config/sound.js","helper/music.js","components/listeners/enemy-listener.js","config/keybinds.js","config/level/level-1-conf.js","config/level/level-2-conf.js","config/level/level-3-conf.js","config/level/level-4-conf.js","config/level/level-5-conf.js","config/level/level-6-conf.js","config/level-cfgs.js","config/scenes.js","components/listeners/level-change-listener.js","components/listeners/weapon-listener.js","config/weapons/hammer.js","config/weapons/sword.js","config/weapons.js","objects/weapon.js","components/listeners/player-listener.js","config/text-content.js","components/ui.js","components/listeners/ui-listeners.js","components/init-listeners.js","helper/background.js","config/sprites.js","helper/map-loader.js","objects/enemy.js","config/player.js","objects/player.js","config/enemies/masked-orc.js","config/enemies/skelet.js","config/enemies/zombie.js","config/enemies.js","helper/spawner.js","helper/generate-level.js","scenes/main.js","scenes/end.js","scenes/intro.js","index.js"],"names":["GAME_SETTINGS","scaling","inspect","showLog","KABOOM_SETTINGS","fullscreen","scale","k","tileset","require","loadGameSprites","loadSpriteAtlas","knight","x","y","width","height","sliceX","anims","idle","from","to","loop","speed","run","hit","skelet","zombie","masked_orc","sword","hammer","wall_top_left","wall_top_mid","wall_top_right","wall_right","wall_side_top_left","wall_side_mid_left","wall_side_front_left","wall_side_top_right","wall_side_mid_right","wall_side_front_right","wall_mid","wall_left","storage","level","player","player_weapon","health","score","backgroundMusicPlayer","hitmarkerMusicPlayer","swooshMusicPlayer","playerTakesDamageMusicPlayer","resetStorage","tempStorage","resetTempStorage","hp","restartLevelStorage","tempstorage","soundOptions","backgroundVolume","hitmarkerVolume","takedmgVolume","swooshVolume","ambient","hitmarker","takedmg","swoosh","loadMusic","promises","loadSound","Promise","all","getBackgroundMusic","sound","play","volume","pause","getHitmarker","getTakeDmg","getSwoosh","initEnemyListener","debug","log","on","enemy","destroy","isAttackable","solid","opacity","damageCooldown","onUpdate","moveTo","pos","facing","isTouching","i","damage","hurt","onCollide","KEYBINDS","left","right","up","down","use","attack","LEVEL1_CFG","map","background","rect","color","z","origin","player_pos","weapons","type","LEVEL2_CFG","enemies","LEVEL3_CFG","LEVEL4_CFG","LEVEL5_CFG","LEVEL6_CFG","LEVEL_CFGS","SCENES","menu","main","end","initMapChangeListener","nextLeveLObjects","get","nextLevelId","keyIsDown","length","go","e","touchedWeapon","initWeaponListener","weapon","enemys","enemyId","isAttacking","knockback","hammerOptions","cooldown","swordOptions","weaponOptions","createWeaponForPlayer","options","weaponForPlayer","add","sprite","name","area","rotate","tag","canAttack","updatePosition","flipX","angle","Math","abs","weaponCooldown","seconds","setTimeout","createWeaponAtPosition","getWeapon","attackWeapon","resetWeaponAngle","flip","initPlayerControlListener","updateWeaponPosition","movement","isKeyDown","currentAnimation","move","weaponPickUp","isKeyPressed","camPos","space","stop","MENU_CONTENT","description_heading","description_text","keybind_text_heading","keybind_text","startButtonText","END_SCREEN_CONTENT","winning_text","score_text","health_text","points_text","restartButtonText","newGameButtonText","UI_CONTENT","room","initUi","layer","text","size","font","updatePlayerHealthbar","updateScoreText","scoreLabel","updateRoomText","heart","roomLabel","playerHearth","initUpdateUiListener","initListener","setBackground","backgroundCfg","follow","SPRITES","Cfg","loadMap","camScale","addLevel","createEnemyAtPosition","XFlipped","isBoss","PLAYER","createPlayerAtPosition","getPlayer","maskedOrcOptions","skeletOptions","zombieOptions","enemyOptions","spawnPlayer","playerPosCfg","spawnWeapons","spawnEnemies","generateLevel","mainScene","layers","endScreen","result","rgb","outline","YELLOW","onClick","startScreen","scene","then"],"mappings":";AAgJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,OAAA,eAAA,EAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,EAAA,OAAA,sBAAA,EAAA,OAAA,UAAA,eAAA,EAAA,OAAA,UAAA,qBAAA,EAAA,CAAA,EAAA,EAAA,IAAA,KAAA,EAAA,EAAA,EAAA,EAAA,CAAA,YAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,EAAA,KAAA,IAAA,IAAA,KAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,OAAA,CAAA,MAAA,EAAA,cAAA,IAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA,IAAA,IAAA,QAAA,CAAA,EAAA,KAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,KAAA,EAAA,IAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,QAAA,QAAA,EAAA,OAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,IAAA,UAAA,EAAA,MAAA,IAAA,IAAA,EAAA,IAAA,WAAA,KAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,IAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,IAAA,WAAA,GAAA,GAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,EAAA,WAAA,MAAA,EAAA,EAAA,EAAA,WAAA,MAAA,EAAA,EAAA,EAAA,WAAA,MAAA,EAAA,EAAA,EAAA,WAAA,MAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,OAAA,IAAA,GChIA,SAAA,EAAiB,GACT,OAAA,EAAM,KAAK,GAAK,IAGxB,SAAA,EAAiB,GACT,OAAM,IAAN,EAAY,KAAK,GAGzB,SAAA,EACC,EACA,EACA,GAEI,OAAA,EAAM,EACF,EAAM,EAAK,EAAK,GAEjB,KAAK,IAAI,KAAK,IAAI,EAAK,GAAM,GAGrC,SAAA,EACC,EACA,EACA,GAEO,OAAA,GAAK,EAAI,GAAK,EAGtB,SAAA,EACC,EACA,EACA,EACA,EACA,GAEO,OAAA,GAAM,EAAI,IAAO,EAAK,IAAO,EAAK,GAG1C,SAAA,EACC,EACA,EACA,EACA,EACA,GAEO,OAAA,EAAM,EAAI,EAAG,EAAI,EAAI,EAAI,GAAK,EAAI,GAG1C,SAAA,KAAiB,GAEZ,GAAgB,IAAhB,EAAK,OACR,OAAO,EAAK,EAAG,GAGZ,GAAgB,IAAhB,EAAK,OAAc,CAClB,GAAmB,iBAAZ,EAAK,GACf,OAAO,EAAK,EAAK,GAAI,EAAK,IAChB,GAAA,EAAO,EAAK,IACtB,OAAO,EAAK,EAAK,GAAG,EAAG,EAAK,GAAG,GACrB,GAAA,MAAM,QAAQ,EAAK,KAA0B,IAAnB,EAAK,GAAG,OAC5C,OAAO,EAAK,MAAM,KAAM,EAAK,IAIxB,MAAA,CACN,EAAG,EAAK,GACR,EAAG,EAAK,GACR,QACQ,OAAA,EAAK,KAAK,EAAG,KAAK,IAE1B,OAAO,GACA,IAAA,EAAK,KAAQ,GACZ,OAAA,EAAK,KAAK,EAAI,EAAG,EAAG,KAAK,EAAI,EAAG,IAExC,OAAO,GACA,IAAA,EAAK,KAAQ,GACZ,OAAA,EAAK,KAAK,EAAI,EAAG,EAAG,KAAK,EAAI,EAAG,IAExC,SAAS,GACF,IAAA,EAAI,KAAQ,GACX,OAAA,EAAK,KAAK,EAAI,EAAE,EAAG,KAAK,EAAI,EAAE,IAEtC,QAAQ,GACD,IAAA,EAAK,KAAQ,GACZ,OAAA,KAAK,MACV,KAAK,EAAI,EAAG,IAAM,KAAK,EAAI,EAAG,IAC5B,KAAK,EAAI,EAAG,IAAM,KAAK,EAAI,EAAG,KAGnC,MACQ,OAAA,KAAK,KAAK,EAAK,EAAG,KAE1B,OACQ,OAAA,KAAK,MAAM,EAAI,KAAK,QAE5B,SACQ,OAAA,EAAK,KAAK,GAAI,KAAK,IAE3B,IAAI,GACI,OAAA,KAAK,EAAI,EAAG,EAAI,KAAK,EAAI,EAAG,GAEpC,SAAS,GACF,IAAA,EAAK,KAAQ,GACZ,OAAA,EAAQ,KAAK,MAAM,KAAK,EAAI,EAAG,EAAG,KAAK,EAAI,EAAG,KAEtD,KAAK,EAAU,GACP,OAAA,EAAK,EAAK,KAAK,EAAG,EAAG,EAAG,GAAI,EAAK,KAAK,EAAG,EAAG,EAAG,KAEvD,QAAQ,GACA,OAAA,EAAK,KAAK,EAAE,QAAQ,GAAI,KAAK,EAAE,QAAQ,KAE/C,GAAG,GACK,OAAA,KAAK,IAAM,EAAM,GAAK,KAAK,IAAM,EAAM,GAE/C,MACQ,UAAI,KAAK,EAAE,QAAQ,OAAO,KAAK,EAAE,QAAQ,QAKnD,SAAA,EAAa,GACN,IAAA,EAAQ,EAAQ,GACf,OAAA,EAAK,KAAK,IAAI,GAAQ,KAAK,IAAI,IAGvC,SAAA,EAAc,EAAW,EAAW,GAC5B,MAAA,CACN,EAAG,EACH,EAAG,EACH,EAAG,EACH,KACQ,OAAA,EAAK,KAAK,EAAG,KAAK,KAK5B,SAAA,EAAgB,GACR,YAAM,IAAN,QACK,IAAR,EAAE,QACM,IAAR,EAAE,EAIP,SAAA,EAAgB,GACR,YAAM,IAAN,QACK,IAAR,EAAE,QACM,IAAR,EAAE,QACM,IAAR,EAAE,EAIP,SAAA,EAAiB,GACT,YAAM,IAAN,QACK,IAAR,EAAE,QACM,IAAR,EAAE,QACM,IAAR,EAAE,EAIP,SAAA,EAAgB,GAEd,QAAM,IAAN,GACG,MAAM,QAAQ,EAAE,IACD,KAAf,EAAE,EAAE,OAEP,OAAO,EAIT,SAAA,KAAgB,GAEX,GAAgB,IAAhB,EAAK,OACR,OAAO,EAAI,IAAK,IAAK,KACX,GAAgB,IAAhB,EAAK,OAAc,CACzB,GAAA,EAAQ,EAAK,IAChB,OAAO,EAAI,EAAK,GAAG,EAAG,EAAK,GAAG,EAAG,EAAK,GAAG,GAC/B,GAAA,MAAM,QAAQ,EAAK,KAA0B,IAAnB,EAAK,GAAG,OAC5C,OAAO,EAAI,MAAM,KAAM,EAAK,IAIvB,MAAA,CACN,EAAG,IAAQ,EAAK,GAAI,EAAG,KACvB,EAAG,IAAQ,EAAK,GAAI,EAAG,KACvB,EAAG,IAAQ,EAAK,GAAI,EAAG,KACvB,QACQ,OAAA,EAAI,KAAK,EAAG,KAAK,EAAG,KAAK,IAEjC,QAAQ,GACA,OAAA,EAAI,KAAK,EAAI,EAAG,KAAK,EAAI,EAAG,KAAK,EAAI,IAE7C,OAAO,GACC,OAAA,KAAK,SAAS,IAEtB,SACQ,OAAA,EAAI,IAAM,KAAK,EAAG,IAAM,KAAK,EAAG,IAAM,KAAK,IAEnD,KAAK,GACG,OAAA,EACN,KAAK,EAAI,EAAM,EAAI,IACnB,KAAK,EAAI,EAAM,EAAI,IACnB,KAAK,EAAI,EAAM,EAAI,MAGrB,GAAG,GACK,OAAA,KAAK,IAAM,EAAM,GACpB,KAAK,IAAM,EAAM,GACjB,KAAK,IAAM,EAAM,GAGtB,MACQ,UAAI,KAAK,MAAM,KAAK,MAAM,KAAK,OAMzC,SAAA,EAAiB,EAAW,EAAW,GAElC,GAAK,GAAL,EACH,OAAO,EAAI,IAAM,EAAG,IAAM,EAAG,IAAM,GAG9B,IAAA,EAAU,EAAA,CAAC,EAAG,EAAG,KAClB,EAAI,IAAG,GAAK,GACZ,EAAI,IAAG,GAAK,GACZ,EAAI,EAAI,EAAU,EAAc,GAAT,EAAI,GAAS,EACpC,EAAI,GAAc,EAClB,EAAI,EAAI,EAAU,GAAK,EAAI,IAAM,EAAE,EAAI,GAAK,EACzC,GANQ,WASV,EAAI,EAAI,GAAM,GAAK,EAAI,GAAK,EAAI,EAAI,EAAI,EACxC,EAAI,EAAI,EAAI,EACZ,EAAI,EAAQ,EAAG,EAAG,EAAI,EAAI,GAC1B,EAAI,EAAQ,EAAG,EAAG,GAClB,EAAI,EAAQ,EAAG,EAAG,EAAI,EAAI,GAEzB,OAAA,EAAI,KAAK,MAAU,IAAJ,GAAU,KAAK,MAAU,IAAJ,GAAU,KAAK,MAAU,IAAJ,IAIjE,SAAA,EAAc,EAAW,EAAW,EAAW,GACvC,MAAA,CACN,EAAG,MAAA,EAAA,EAAK,EACR,EAAG,MAAA,EAAA,EAAK,EACR,EAAG,MAAA,EAAA,EAAK,EACR,EAAG,MAAA,EAAA,EAAK,EACR,MAAM,GACE,OAAA,EACN,KAAK,EAAI,KAAK,EAAI,EAAM,EACxB,KAAK,EAAI,KAAK,EAAI,EAAM,EACxB,KAAK,EAAI,EAAM,EACf,KAAK,EAAI,EAAM,IAGjB,QACQ,OAAA,EAAK,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,IAE1C,GAAG,GACK,OAAA,KAAK,IAAM,EAAM,GACpB,KAAK,IAAM,EAAM,GACjB,KAAK,IAAM,EAAM,GACjB,KAAK,IAAM,EAAM,IAKxB,SAAA,EAAc,GAEN,MAAA,CAEN,EAAG,EAAI,IAAI,GAAK,CACf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAGV,QACQ,OAAA,EAAK,KAAK,IAGlB,KAAK,GAEE,IAAA,EAAM,GAEZ,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,EAAQ,EAAJ,EAAQ,GACX,KAAK,EAAE,EAAQ,GAAK,EAAM,EAAM,EAAJ,EAAQ,GACpC,KAAK,EAAE,EAAQ,GAAK,EAAM,EAAM,EAAJ,EAAQ,GACpC,KAAK,EAAE,EAAQ,GAAK,EAAM,EAAM,EAAJ,EAAQ,GACpC,KAAK,EAAE,GAAQ,GAAK,EAAM,EAAM,EAAJ,EAAQ,GAIhC,OAAA,EAAK,IAIb,SAAS,GACD,MAAA,CACN,EAAG,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,IACtE,EAAG,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,IACtE,EAAG,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,IAAM,EAAE,EAAI,KAAK,EAAE,IACvE,EAAG,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,IAAM,EAAE,EAAI,KAAK,EAAE,MAIzE,SAAS,GACF,IAAA,EAAK,KAAK,SAAS,CACxB,EAAG,EAAE,EACL,EAAG,EAAE,EACL,EAAG,EAAE,EACL,EAAG,IAEG,OAAA,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAG5B,SAAS,GACD,OAAA,EACN,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,EAAE,IAC/D,EAAE,EAAI,KAAK,EAAE,GAAK,EAAE,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,EAAE,GAAK,EAAI,KAAK,EAAE,MAIjE,UAAU,GACF,OAAA,KAAK,KAAK,EAAK,CACrB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAE,EAAG,EAAE,EAAG,EAAG,MAIf,MAAM,GACE,OAAA,KAAK,KAAK,EAAK,CACrB,EAAE,EAAG,EAAG,EAAG,EACX,EAAG,EAAE,EAAG,EAAG,EACX,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,MAIX,QAAQ,GACP,OAAA,EAAI,GAAS,GACN,KAAK,KAAK,EAAK,CACrB,EAAG,EAAG,EAAG,EACT,EAAG,KAAK,IAAI,IAAK,KAAK,IAAI,GAAI,EAC9B,EAAG,KAAK,IAAI,GAAI,KAAK,IAAI,GAAI,EAC7B,EAAG,EAAG,EAAG,MAIX,QAAQ,GACP,OAAA,EAAI,GAAS,GACN,KAAK,KAAK,EAAK,CACrB,KAAK,IAAI,GAAI,EAAG,KAAK,IAAI,GAAI,EAC7B,EAAG,EAAG,EAAG,GACR,KAAK,IAAI,GAAI,EAAG,KAAK,IAAI,GAAI,EAC9B,EAAG,EAAG,EAAG,MAIX,QAAQ,GACP,OAAA,EAAI,GAAS,GACN,KAAK,KAAK,EAAK,CACrB,KAAK,IAAI,IAAK,KAAK,IAAI,GAAI,EAAG,EAC9B,KAAK,IAAI,GAAI,KAAK,IAAI,GAAI,EAAG,EAC7B,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,MAIX,SAEO,IAAA,EAAM,GAEN,EAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IACpD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,IACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,IAAM,KAAK,EAAE,GACnD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,GAAK,KAAK,EAAE,GAClD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,GAAK,KAAK,EAAE,GAClD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,GAAK,KAAK,EAAE,GAClD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,IAAM,KAAK,EAAE,GAAK,KAAK,EAAE,GAClD,EAAM,KAAK,EAAE,GAAK,KAAK,EAAE,GAAK,KAAK,EAAE,GAAK,KAAK,EAAE,GAEvD,EAAI,GAAK,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EACzD,EAAI,KAAO,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC3D,EAAI,GAAK,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EACzD,EAAI,MAAQ,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAE5D,EAAI,KAAO,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC3D,EAAI,GAAK,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EACzD,EAAI,KAAO,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC3D,EAAI,IAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAE1D,EAAI,GAAK,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EACzD,EAAI,KAAO,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC3D,EAAI,IAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAC1D,EAAI,MAAQ,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAE5D,EAAI,KAAO,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC3D,EAAI,GAAK,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EACzD,EAAI,MAAQ,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,GAC5D,EAAI,IAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAAM,KAAK,EAAE,GAAK,EAEpD,IAAA,EACL,KAAK,EAAE,GAAK,EAAI,GAChB,KAAK,EAAE,GAAK,EAAI,GAChB,KAAK,EAAE,GAAK,EAAI,GAChB,KAAK,EAAE,GAAK,EAAI,IAEjB,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,EAAQ,EAAJ,EAAQ,IAAO,EAAM,EAIpB,OAAA,EAAK,KAQf,SAAA,EAAc,EAAY,EAAY,EAAW,EAAI,KAAK,KAClD,OAAA,GAAM,EAAE,GAAK,GAAK,GAAK,EAAK,GAvb3B,EAAA,EAAA,WAIA,EAAA,EAAA,WAIA,EAAA,EAAA,SAWA,EAAA,EAAA,QAQA,EAAA,EAAA,OAUA,EAAA,EAAA,QAUA,EAAA,EAAA,QAwEA,EAAA,EAAA,OAKA,EAAA,EAAA,QAWA,EAAA,EAAA,UAOA,EAAA,EAAA,UAQA,EAAA,EAAA,WAQA,EAAA,EAAA,UAUA,EAAA,EAAA,OAgDA,EAAA,EAAA,WAyBA,EAAA,EAAA,QA0BA,EAAA,EAAA,QA2KA,EAAA,EAAA,QAKT,IAAM,EAAI,WACJ,EAAI,MACJ,EAAI,WAEJ,EAAS,EAAI,KAAK,OAExB,SAAA,EAAa,GACL,MAAA,CACN,KAAM,EACN,OAAO,GACF,GAAgB,IAAhB,EAAK,OACR,OAAA,KAAK,MAAQ,EAAI,KAAK,KAAO,GAAK,EAC3B,KAAK,KAAO,EACT,GAAgB,IAAhB,EAAK,OAAc,CACzB,GAAmB,iBAAZ,EAAK,GACf,OAAO,KAAK,IAAI,EAAG,EAAK,IACd,GAAA,EAAO,EAAK,IACtB,OAAO,KAAK,IAAI,EAAK,EAAG,GAAI,EAAK,IACvB,GAAA,EAAQ,EAAK,IACvB,OAAO,KAAK,IAAI,EAAI,EAAG,EAAG,GAAI,EAAK,SAAA,GAEV,IAAhB,EAAK,OAAc,CACzB,GAAmB,iBAAZ,EAAK,IAAsC,iBAAZ,EAAK,GAC9C,OAAQ,KAAK,OAAS,EAAK,GAAK,EAAK,IAAO,EAAK,GACvC,GAAA,EAAO,EAAK,KAAO,EAAO,EAAK,IACzC,OAAO,EACN,KAAK,IAAI,EAAK,GAAG,EAAG,EAAK,GAAG,GAC5B,KAAK,IAAI,EAAK,GAAG,EAAG,EAAK,GAAG,IAEnB,GAAA,EAAQ,EAAK,KAAO,EAAQ,EAAK,IAC3C,OAAO,EACN,KAAK,IAAI,EAAK,GAAG,EAAG,EAAK,GAAG,GAC5B,KAAK,IAAI,EAAK,GAAG,EAAG,EAAK,GAAG,GAC5B,KAAK,IAAI,EAAK,GAAG,EAAG,EAAK,GAAG,OAQlC,SAAA,EAAkB,GACb,OAAQ,MAAR,IACH,EAAO,KAAO,GAER,EAAO,KAGf,SAAA,KAAiB,GAET,OAAA,EAAO,OAAO,GAItB,SAAA,KAAkB,GACV,OAAA,KAAK,MAAM,KAAQ,IAG3B,SAAA,EAAgB,GACR,OAAA,KAAU,EAGlB,SAAA,EAAmB,GACX,OAAA,EAAK,EAAM,EAAK,SAIxB,SAAA,EAAuB,EAAU,GACzB,OAAA,EAAG,GAAG,GAAK,EAAG,GAAG,GACpB,EAAG,GAAG,GAAK,EAAG,GAAG,GACjB,EAAG,GAAG,GAAK,EAAG,GAAG,GACjB,EAAG,GAAG,GAAK,EAAG,GAAG,EAGtB,SAAA,EAAsB,EAAU,GACxB,OAAA,EAAG,GAAG,EAAI,EAAG,GAAG,GACnB,EAAG,GAAG,EAAI,EAAG,GAAG,GAChB,EAAG,GAAG,EAAI,EAAG,GAAG,GAChB,EAAG,GAAG,EAAI,EAAG,GAAG,EAIrB,SAAA,EAAuB,EAAU,GAE3B,GAAA,EAAG,GAAG,IAAM,EAAG,GAAG,GAAK,EAAG,GAAG,IAAM,EAAG,GAAG,GAAO,EAAG,GAAG,IAAM,EAAG,GAAG,GAAK,EAAG,GAAG,IAAM,EAAG,GAAG,EAC7F,OAAO,KAGF,IAAA,GAAU,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,GAG9F,GAAU,IAAV,EACH,OAAO,KAGF,IAAA,IAAO,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAC/F,IAAO,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAAG,GAAG,EAAI,EAAG,GAAG,IAAM,EAGjG,OAAA,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC/B,KAGD,EAIR,SAAA,EAAsB,EAAU,GACzB,IAAA,EAAI,EAAc,EAAI,GACvB,OAAA,EACE,EACN,EAAG,GAAG,EAAI,GAAK,EAAG,GAAG,EAAI,EAAG,GAAG,GAC/B,EAAG,GAAG,EAAI,GAAK,EAAG,GAAG,EAAI,EAAG,GAAG,IAHjB,KAOhB,SAAA,EAAsB,EAAS,GAC1B,SAAA,EAAc,EAAG,EAAE,MAAO,EAAc,EAAG,EAAE,SAGxC,EAAa,EAAG,GAAS,EAAE,GAAI,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,MACpD,EAAa,EAAG,GAAS,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,GAAI,EAAE,MACjD,EAAa,EAAG,GAAS,EAAE,GAAI,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,MACjD,EAAa,EAAG,GAAS,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,GAAI,EAAE,MAOxD,SAAA,EAAuB,EAAS,GACxB,OAAA,EAAG,EAAI,EAAE,GAAG,GAAK,EAAG,EAAI,EAAE,GAAG,GAAK,EAAG,EAAI,EAAE,GAAG,GAAK,EAAG,EAAI,EAAE,GAAG,EAIvE,SAAA,EAAwB,EAAS,GACzB,OAAA,EAGR,SAAA,EAAyB,EAAS,GAC1B,OAAA,GAAmB,EAAG,CAC5B,EAAE,GACF,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,GAClB,EAAE,GACF,EAAK,EAAE,GAAG,EAAG,EAAE,GAAG,KAKpB,SAAA,EAAuB,EAAS,GACxB,OAAA,EAIR,SAAA,EAAwB,EAAS,GACzB,OAAA,EAGR,SAAA,EAAyB,EAAS,GAG7B,GAAA,GAAiB,EAAG,EAAE,KAAO,GAAiB,EAAG,EAAE,IACtD,OAAO,EAIR,IAAA,IAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,CAG9B,GAAA,EAAa,EAAG,CAAE,GAFX,EAAE,GAEa,GADf,GAAG,EAAI,GAAK,EAAE,UAExB,OAAO,EAIF,OAAA,EAIR,SAAA,EAAyB,EAAW,GAC5B,OAAA,EAAE,OAAO,KAAK,GAAK,EAAE,OAG7B,SAAA,EAA0B,EAAY,GAC9B,OAAA,EAAG,OAAO,KAAK,EAAG,QAAU,EAAG,OAAS,EAAG,OAInD,SAAA,GAA2B,EAAW,GAC9B,OAAA,EAGR,SAAA,GAA4B,EAAa,GACxC,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAK/B,GAAA,EAJM,CACT,GAAI,EAAG,GACP,GAAI,GAAI,EAAI,GAAK,EAAG,SAEE,GACtB,OAAO,EAGF,OAAA,EAGR,SAAA,GAA0B,EAAY,GAEjC,IAAA,GAAM,EAEV,IAAA,IAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,CAE5B,IAAA,EAAK,EAAE,GACP,EAAK,GAAG,EAAI,GAAK,EAAE,SAEzB,EACM,EAAI,EAAG,GAAK,EAAG,EAAI,EAAG,GAAO,EAAG,EAAI,EAAG,GAAK,EAAG,EAAI,EAAG,IACvD,EAAG,GAAK,EAAG,EAAI,EAAG,IAAM,EAAG,EAAI,EAAG,IAAM,EAAG,EAAI,EAAG,GAAK,EAAG,IAE9D,GAAO,GAKF,OAAA,EAIR,SAAA,GAAwB,EAAW,GAC3B,OAAA,EAAG,GAAG,GAGd,SAAA,GAAsB,EAAS,GACtB,OAAA,EAAE,OACJ,IAAA,OAAe,OAAA,EAAa,EAAG,GAC/B,IAAA,OAAe,OAAA,EAAa,EAAG,GAC/B,IAAA,SAAiB,OAAA,EAAe,EAAG,GACnC,IAAA,UAAkB,OAAA,EAAgB,EAAG,EAAE,KACvC,IAAA,QAAgB,OAAA,EAAc,EAAG,EAAE,IAEnC,MAAA,IAAI,6BAA8B,EAAW,SAGpD,SAAA,GAAsB,EAAS,GACtB,OAAA,EAAE,OACJ,IAAA,OAAe,OAAA,EAAa,EAAG,GAC/B,IAAA,OAAe,OAAA,QAAQ,EAAa,EAAG,IACvC,IAAA,SAAiB,OAAA,EAAe,EAAG,GACnC,IAAA,UAAkB,OAAA,EAAgB,EAAG,EAAE,KACvC,IAAA,QAAgB,OAAA,EAAc,EAAG,EAAE,IAEnC,MAAA,IAAI,6BAA8B,EAAW,SAGpD,SAAA,GAAwB,EAAS,GACxB,OAAA,EAAE,OACJ,IAAA,OAAe,OAAA,EAAe,EAAG,GACjC,IAAA,OAAe,OAAA,EAAe,EAAG,GACjC,IAAA,SAAiB,OAAA,EAAiB,EAAG,GACrC,IAAA,UAAkB,OAAA,GAAkB,EAAG,EAAE,KACzC,IAAA,QAAgB,OAAA,EAAgB,EAAG,EAAE,IAErC,MAAA,IAAI,6BAA8B,EAAW,SAGpD,SAAA,GAAyB,EAAS,GACzB,OAAA,EAAE,OACJ,IAAA,OAAe,OAAA,EAAgB,EAAG,GAClC,IAAA,OAAe,OAAA,EAAgB,EAAG,GAClC,IAAA,SAAiB,OAAA,GAAkB,EAAG,GACtC,IAAA,UAAkB,OAAA,GAAmB,EAAG,EAAE,KAC1C,IAAA,QAAgB,OAAA,GAAiB,EAAG,EAAE,IAEtC,MAAA,IAAI,6BAA8B,EAAW,SAGpD,SAAA,GAAuB,EAAS,GACvB,OAAA,EAAE,OACJ,IAAA,OAAe,OAAA,EAAc,EAAG,GAChC,IAAA,OAAe,OAAA,EAAc,EAAG,GAChC,IAAA,SAAiB,OAAA,EAAgB,EAAG,GACpC,IAAA,UAAkB,OAAA,GAAiB,EAAE,IAAK,GAC1C,IAAA,QAAgB,OAAA,GAAe,EAAE,GAAI,GAErC,MAAA,IAAI,6BAA8B,EAAW,SAGpD,SAAA,GAAsB,EAAU,GACvB,OAAA,EAAG,OACL,IAAA,OAAe,OAAA,GAAa,EAAI,GAChC,IAAA,OAAe,OAAA,GAAa,EAAI,GAChC,IAAA,SAAiB,OAAA,GAAe,EAAI,GACpC,IAAA,UAAkB,OAAA,GAAgB,EAAI,EAAG,KACzC,IAAA,QAAgB,OAAA,GAAc,EAAI,EAAG,IAErC,MAAA,IAAI,6BAA8B,EAAY,SAGrD,SAAA,GAAkB,EAAU,GACpB,MAAA,CACN,GAAI,EAAK,EAAG,GAAG,EAAI,EAAG,GAAG,EAAG,EAAG,GAAG,EAAI,EAAG,GAAG,GAC5C,GAAI,EAAK,EAAG,GAAG,EAAI,EAAG,GAAG,EAAG,EAAG,GAAG,EAAI,EAAG,GAAG,IAI9C,SAAA,GAAkB,EAAU,GACpB,MAAA,CACN,GAAI,EAAG,QACP,GAAI,EAAG,SA5SA,EAAA,EAAA,OAmCA,EAAA,EAAA,YAOA,EAAA,EAAA,QAMA,EAAA,EAAA,SAIA,EAAA,EAAA,UAIA,EAAA,EAAA,UAKA,EAAA,EAAA,iBAOA,EAAA,EAAA,gBAQA,EAAA,EAAA,iBAyBA,EAAA,EAAA,gBASA,EAAA,EAAA,gBAcA,EAAA,EAAA,iBAKA,EAAA,EAAA,kBAIA,EAAA,EAAA,mBAUA,EAAA,EAAA,iBAKA,EAAA,EAAA,kBAIA,EAAA,EAAA,mBAoBA,EAAA,EAAA,mBAIA,EAAA,EAAA,oBAKA,EAAA,GAAA,qBAIA,EAAA,GAAA,sBAaA,EAAA,GAAA,oBAsBA,EAAA,GAAA,kBAIA,EAAA,GAAA,gBAWA,EAAA,GAAA,gBAWA,EAAA,GAAA,kBAWA,EAAA,GAAA,mBAWA,EAAA,GAAA,iBAWA,EAAA,GAAA,gBAWA,EAAA,GAAA,YAOA,EAAA,GAAA,YC1vBT,IAAA,GAAA,cAAwB,IAEvB,eAAe,GACR,SAAG,GAFV,EAAA,KAAA,WAGM,KAAA,QAAU,EAEhB,KAAK,GACE,IAAA,EAAK,KAAK,QAChB,OAAA,KAAK,IAAI,EAAI,GACb,KAAK,UACE,EAER,MAAM,GACC,IAAA,EAAK,KAAK,KAAK,GACd,MAAA,IAAM,KAAK,OAAO,KAI3B,SAAA,GAAgB,EAAS,GAClB,IAAA,SAAY,EACZ,SAAY,EACd,GAAA,IAAO,EACV,OAAO,EAEJ,GAAO,WAAP,GAA0B,WAAP,EAAiB,CACjC,IAAA,EAAK,OAAO,KAAK,GACjB,EAAK,OAAO,KAAK,GACnB,GAAA,EAAG,SAAW,EAAG,OACpB,OAAO,EAER,IAAA,IAAW,KAAK,EAAI,CACb,IAAA,EAAK,EAAG,GACR,EAAK,EAAG,GACV,IAAgB,mBAAP,GAAmC,mBAAP,KACnC,GAAO,EAAI,GACf,OAAO,EAIH,OAAA,EAED,OAAA,IAAO,EAGf,SAAA,GAAqB,EAAa,GAC3B,IAAA,EAAI,SAAS,cAAc,KACjC,SAAS,KAAK,YAAY,GAC1B,EAAE,aAAa,QAAS,iBACxB,EAAE,KAAO,EACT,EAAE,SAAW,EACb,EAAE,QACF,SAAS,KAAK,YAAY,GAG3B,SAAA,GAAsB,EAAY,GAC3B,IAAA,EAAM,IAAI,gBAAgB,GAChC,GAAY,EAAK,GACjB,IAAI,gBAAgB,GAzDrB,EAAA,GAAA,UAkBS,EAAA,GAAA,UA0BA,EAAA,GAAA,eAUA,EAAA,GAAA,gBCyFT,IAAM,GAAa,UACb,GAAS,EACT,GAAc,MACd,GAAe,GAEf,GAAgB,yVAwBhB,GAAgB,yUAuBhB,GAAW,0EAMX,GAAW,yFAMjB,SAAA,GAAkB,GACT,OAAA,GACF,IAAA,UAAkB,OAAA,GAAK,GAAI,GAC3B,IAAA,MAAc,OAAA,EAAK,GAAG,GACtB,IAAA,WAAmB,OAAA,EAAK,GAAG,GAC3B,IAAA,OAAe,OAAA,GAAK,EAAI,GACxB,IAAA,SAAiB,OAAA,EAAK,EAAG,GACzB,IAAA,QAAgB,OAAA,EAAK,EAAG,GACxB,IAAA,UAAkB,OAAA,GAAK,EAAI,GAC3B,IAAA,MAAc,OAAA,EAAK,EAAG,GACtB,IAAA,WAAmB,OAAA,EAAK,EAAG,GAAA,QAChB,OAAA,GAIlB,SAAA,GAAiB,EAA2B,GAErC,IAAA,EAAe,MAhOtB,IAAA,EAkOQ,IAAA,EAAY,EAAW,GAAU,IACjC,EAAW,EAChB,IAAI,UAAU,IAAI,kBAAkB,CAAE,IAAK,IAAK,IAAK,MAAS,EAAG,IAG5D,EAAI,OAAA,EAAA,EAAK,YAAL,EAAmB,EAAI,EAAG,EAAG,GAEvC,EAAG,WAAW,EAAE,EAAI,IAAK,EAAE,EAAI,IAAK,EAAE,EAAI,IAAK,GAC/C,EAAG,OAAO,EAAG,OACb,EAAG,OAAO,EAAG,cACb,EAAG,kBAAkB,EAAG,UAAW,EAAG,oBAAqB,EAAG,IAAK,EAAG,qBAEhE,IAAA,EAAO,EAAG,eAEhB,EAAG,WAAW,EAAG,aAAc,GAC/B,EAAG,WAAW,EAAG,aAA4B,EAAd,GAAiB,EAAG,cACnD,EAAG,WAAW,EAAG,aAAc,MAEzB,IAAA,EAAO,EAAG,eAEhB,EAAG,WAAW,EAAG,qBAAsB,GACvC,EAAG,WAAW,EAAG,qBAAoC,EAAd,GAAiB,EAAG,cAC3D,EAAG,WAAW,EAAG,qBAAsB,MAGjC,IAAA,EAAQ,EACb,IAAI,UAAU,IAAI,kBAAkB,CACnC,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,MACZ,EAAG,GAAI,CACV,KAAM,SACN,OAAQ,YAIH,MAAA,CACN,UAAW,EACX,cAAe,EACf,UAAW,EACX,UAAW,EACX,OAAQ,EACR,OAAQ,EACR,WAAY,GACZ,KAAM,EACN,KAAM,EACN,OAAQ,GACR,OAAQ,GACR,UAAW,IACX,eAAgB,GAChB,WAAY,EACZ,MAAO,EACP,MAAO,EAAK,MACZ,OAAQ,EAAK,SAxDM,GAiErB,SAAA,EAAiB,EAAkB,EAAiB,IAE7C,IAAA,EAAK,EAAG,gBAEd,EAAG,YAAY,EAAG,WAAY,GAC9B,EAAG,WAAW,EAAG,WAAY,EAAG,EAAG,KAAM,EAAG,KAAM,EAAG,cAAe,GAE9D,IAAA,EAAU,MAxSlB,IAAA,EAySW,OAAA,OAAA,EAAA,EAAI,QAAJ,EAAc,EAAK,WACrB,IAAA,SAAiB,OAAA,EAAG,OACpB,IAAA,UAAqB,QACV,OAAA,EAAG,UAJL,GAQV,EAAQ,MACL,OAAA,EAAI,MACN,IAAA,SAAiB,OAAA,EAAG,OACpB,IAAA,cAAyB,QACd,OAAA,EAAG,gBAJP,GAQd,OAAA,EAAG,cAAc,EAAG,WAAY,EAAG,mBAAoB,GACvD,EAAG,cAAc,EAAG,WAAY,EAAG,mBAAoB,GACvD,EAAG,cAAc,EAAG,WAAY,EAAG,eAAgB,GACnD,EAAG,cAAc,EAAG,WAAY,EAAG,eAAgB,GACnD,EAAG,YAAY,EAAG,WAAY,MAEvB,CACN,MAAO,EAAK,MACZ,OAAQ,EAAK,OACb,OACC,EAAG,YAAY,EAAG,WAAY,IAE/B,SACC,EAAG,YAAY,EAAG,WAAY,QAMjC,SAAA,EACC,EAAyB,GACzB,EAAyB,IAGrB,IAAA,EACE,EAAQ,GAAc,QAAQ,WAAY,MAAA,EAAA,EAAW,IACrD,EAAQ,GAAc,QAAQ,WAAY,MAAA,EAAA,EAAW,IACrD,EAAa,EAAG,aAAa,EAAG,eAChC,EAAa,EAAG,aAAa,EAAG,iBAEtC,GAAA,EAAG,aAAa,EAAY,GAC5B,EAAG,aAAa,EAAY,GAC5B,EAAG,cAAc,GACjB,EAAG,cAAc,GAEZ,EAAM,EAAG,iBAAiB,GAC9B,MAAM,IAAI,MAAM,GAGZ,GAAA,EAAM,EAAG,iBAAiB,GAC9B,MAAM,IAAI,MAAM,GAGX,IAAA,EAAK,EAAG,gBAEd,GAAA,EAAG,aAAa,EAAI,GACpB,EAAG,aAAa,EAAI,GAEpB,EAAG,mBAAmB,EAAI,EAAG,SAC7B,EAAG,mBAAmB,EAAI,EAAG,QAC7B,EAAG,mBAAmB,EAAI,EAAG,WAE7B,EAAG,YAAY,IAEV,EAAM,EAAG,kBAAkB,KAEnB,OAAR,EACH,MAAM,IAAI,MAAM,GAIX,MAAA,CAEN,OACC,EAAG,WAAW,IAGf,SACC,EAAG,WAAW,OAGf,cACC,EAAG,oBAAoB,EAAG,EAAG,EAAG,OAAO,EAAgB,EAAT,GAAY,GAC1D,EAAG,wBAAwB,GAC3B,EAAG,oBAAoB,EAAG,EAAG,EAAG,OAAO,EAAgB,EAAT,GAAY,IAC1D,EAAG,wBAAwB,GAC3B,EAAG,oBAAoB,EAAG,EAAG,EAAG,OAAO,EAAgB,EAAT,GAAY,IAC1D,EAAG,wBAAwB,IAG5B,KAAK,GACC,KAAA,OACL,IAAA,IAAW,KAAQ,EAAS,CACrB,IAAA,EAAM,EAAQ,GACd,EAAM,EAAG,mBAAmB,EAAI,GACnB,iBAAR,EACV,EAAG,UAAU,EAAK,GACZ,EAAW,GAEjB,EAAG,iBAAiB,GAAK,EAAO,IAAI,aAAa,EAAI,IAC/C,EAAY,GAElB,EAAG,UAAU,EAAK,EAAI,EAAG,EAAI,EAAG,EAAI,EAAG,EAAI,GACrC,EAAW,GAEjB,EAAG,UAAU,EAAK,EAAI,EAAG,EAAI,EAAG,EAAI,GAC1B,EAAO,IAEjB,EAAG,UAAU,EAAK,EAAI,EAAG,EAAI,GAG1B,KAAA,WAOR,SAAA,EACC,EACA,EACA,EACA,GAGM,IAAA,EAAO,EAAI,MAAQ,EAEnB,EAAK,EAAM,EACX,EAAK,GAFE,EAAI,OAAS,GAGpB,EAA4B,GAC5B,EAAU,EAAM,MAAM,IAAI,UAEhC,IAAA,IAAY,EAAG,KAAO,EACrB,EAAI,GAAM,EACR,EAAI,EAAQ,EACb,KAAK,MAAM,EAAI,GAAQ,GAIlB,MAAA,CACN,IAAK,EACL,IAAK,EACL,GAAI,EACJ,GAAI,GAMN,SAAA,EACC,EACA,EACA,EAAkB,EAAI,OACtB,EAAoB,EAAI,UACxB,EAAmB,IAGnB,EAAM,MAAA,EAAA,EAAO,EAAI,OACjB,EAAS,MAAA,EAAA,EAAU,EAAI,WAItB,IAAQ,EAAI,QACT,IAAW,EAAI,YACd,GAAO,EAAI,WAAY,IACxB,EAAI,OAAO,OAAS,EAAM,OAAS,GAAS,IAC5C,EAAI,OAAO,OAAS,EAAQ,OAAS,KAExC,IAGD,EAAI,OAAS,EACb,EAAI,UAAY,EAChB,EAAI,WAAa,EAEjB,EAAQ,QAAQ,IACf,EAAI,OAAO,KAAK,EAAI,EAAI,OAAO,OAAS,MAGzC,EAAM,QAAQ,IACP,IAAA,EAAK,EAAM,EAAI,UAAU,SAAS,EAAE,IAAI,OAC9C,EAAI,OAAO,KACV,EAAG,EAAG,EAAG,EAAG,EAAE,IAAI,EAClB,EAAE,GAAG,EAAG,EAAE,GAAG,EACb,EAAE,MAAM,EAAI,IAAK,EAAE,MAAM,EAAI,IAAK,EAAE,MAAM,EAAI,IAAK,EAAE,WAMxD,SAAA,KAGG,EAAI,SACD,EAAI,WACiB,IAAtB,EAAI,OAAO,QACW,IAAtB,EAAI,OAAO,SAKf,EAAI,UAAU,KAAK,EAAI,YAEvB,EAAG,WAAW,EAAG,aAAc,EAAI,MACnC,EAAG,cAAc,EAAG,aAAc,EAAG,IAAI,aAAa,EAAI,SAC1D,EAAG,WAAW,EAAG,qBAAsB,EAAI,MAC3C,EAAG,cAAc,EAAG,qBAAsB,EAAG,IAAI,YAAY,EAAI,SACjE,EAAI,UAAU,OACd,EAAI,UAAU,cACd,EAAI,OAAO,OACX,EAAG,aAAa,EAAG,UAAW,EAAI,OAAO,OAAQ,EAAG,eAAgB,GACpE,EAAI,OAAO,SACX,EAAI,UAAU,SACd,EAAG,WAAW,EAAG,aAAc,MAC/B,EAAG,WAAW,EAAG,qBAAsB,MAEvC,EAAI,OAAS,GACb,EAAI,OAAS,GAEb,EAAI,aAIL,SAAA,IAEC,EAAG,MAAM,EAAG,kBAEP,EAAK,YACT,EAAW,CACV,MAAO,IACP,OAAQ,IACR,KAAM,EACL,EACA,EACA,IAAU,IAAU,GACpB,IAAW,IAAU,IAEtB,IAAK,EAAI,QAIX,EAAI,UAAY,EAChB,EAAI,eAAiB,GACrB,EAAI,UAAY,IAIjB,SAAA,IACC,IACA,EAAI,cAAgB,EAAI,UAGzB,SAAA,IACQ,OAAA,EAAI,cAGZ,SAAA,EAAe,GACP,OAAA,EACN,EAAG,EAAI,IAAU,EAAI,GACpB,EAAG,EAAI,IAAW,EAAI,GAIzB,SAAA,EAAqB,GACpB,EAAI,UAAY,EAAE,QAGnB,SAAA,KAA0B,GACrB,QAAY,IAAZ,EAAK,GAAkB,OACrB,IAAA,EAAI,KAAQ,GACN,IAAZ,EAAM,GAAmB,IAAR,EAAE,IACnB,EAAI,UAAY,EAAI,UAAU,UAAU,IAGzC,SAAA,KAAsB,GACjB,QAAY,IAAZ,EAAK,GAAkB,OACrB,IAAA,EAAI,KAAQ,GACN,IAAZ,EAAM,GAAmB,IAAR,EAAE,IACnB,EAAI,UAAY,EAAI,UAAU,MAAM,IAGrC,SAAA,EAAqB,IACf,IAGL,EAAI,UAAY,EAAI,UAAU,QAAQ,IAGvC,SAAA,EAAqB,IACf,IAGL,EAAI,UAAY,EAAI,UAAU,QAAQ,IAGvC,SAAA,EAAqB,IACf,IAGL,EAAI,UAAY,EAAI,UAAU,QAAQ,IAGvC,SAAA,IACC,EAAI,eAAe,KAAK,EAAI,UAAU,SAGvC,SAAA,IACC,EAAQ,eAAe,OAAS,IAC/B,EAAI,UAAY,EAAI,eAAe,OAKrC,SAAA,EAAoB,GAvmBrB,IAAA,EAymBM,QAAc,IAAd,EAAI,YAAsC,IAAf,EAAI,OAClC,MAAM,IAAI,MAAM,wDAGb,GAAA,EAAI,OAAS,GAAK,EAAI,QAAU,EACnC,OAGK,IAAA,EAAI,EAAI,MACR,EAAI,EAAI,OAER,EADS,GAAS,EAAI,QAAU,IAChB,MAAM,EAAK,EAAG,GAAG,OAAM,KACvC,EAAI,EAAI,MAAQ,EAAK,EAAG,EAAG,EAAG,GAC9B,EAAQ,EAAI,OAAS,EAAI,IAAK,IAAK,KACnC,EAAU,OAAA,EAAA,EAAI,SAAJ,EAAe,EAE/B,IACA,EAAc,EAAI,KAClB,EAAY,EAAI,OAChB,EAAU,EAAI,OACd,EAAc,GAEd,EAAQ,CACP,CACC,IAAK,GAAM,EAAI,EAAG,EAAI,EAAG,GACzB,GAAI,EAAK,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAG,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,GAChE,MAAO,EACP,QAAS,GAEV,CACC,IAAK,GAAM,EAAI,GAAI,EAAI,EAAG,GAC1B,GAAI,EAAK,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAG,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,GAChE,MAAO,EACP,QAAS,GAEV,CACC,IAAK,EAAK,EAAI,GAAI,EAAI,EAAG,GACzB,GAAI,EAAK,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAG,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,GAChE,MAAO,EACP,QAAS,GAEV,CACC,IAAK,EAAK,EAAI,EAAG,EAAI,EAAG,GACxB,GAAI,EAAK,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,EAAG,EAAI,MAAQ,EAAE,EAAI,EAAE,EAAI,EAAE,GAChE,MAAO,EACP,QAAS,IAER,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,EAAI,OAAQ,EAAI,SAEhD,IAKD,SAAA,EACC,GAhqBF,IAAA,EAmqBM,IAAC,EAAI,IACR,MAAM,IAAI,MAAM,0CAGX,IAAA,EAAI,OAAA,EAAA,EAAI,MAAJ,EAAY,EAAK,EAAG,EAAG,EAAG,GAC9B,EAAI,EAAI,IAAI,MAAQ,EAAE,EACtB,EAAI,EAAI,IAAI,OAAS,EAAE,EACvB,EAAQ,EAAK,GAEf,GAAA,EAAI,MAAO,CAGR,IAAA,EAAO,KAAK,MAAM,EAAI,OAAS,GAAK,GACpC,EAAO,KAAK,MAAM,EAAI,QAAU,GAAK,GAErC,EADS,GAAS,EAAI,QAAU,IAAY,IAAI,EAAK,EAAG,IAAI,MAAM,IAClD,MAAM,EAAO,EAAG,EAAO,GAG7C,IAAA,IAAS,EAAI,EAAG,EAAI,EAAM,IACzB,IAAA,IAAS,EAAI,EAAG,EAAI,EAAM,IACzB,EAAW,EAAA,EAAA,GACP,GADO,CAEV,KAAM,EAAI,KAAO,EAAK,IAAI,IAAI,EAAK,EAAI,EAAG,EAAI,IAAI,IAAI,GAEtD,MAAO,EAAM,MAAM,EAAI,OAAS,EAAK,IACrC,IAAK,EAAI,IACT,KAAM,EACN,MAAO,EACP,OAAQ,EACR,OAAQ,kBAOX,EAAQ,OAAS,EAAI,QACpB,EAAM,EAAI,EAAI,MAAQ,EACtB,EAAM,EAAI,EAAI,OAAS,GACjB,EAAQ,OACd,EAAM,EAAI,EAAI,MAAQ,EACtB,EAAM,EAAI,EAAM,GACN,EAAI,SACd,EAAM,EAAI,EAAI,OAAS,EACvB,EAAM,EAAI,EAAM,GAGjB,EAAW,EAAA,EAAA,GACP,GADO,CAGV,MAAO,EAAM,MAAM,EAAI,OAAS,EAAK,IACrC,IAAK,EAAI,IACT,KAAM,EACN,MAAO,EACP,OAAQ,KAQX,SAAA,EACC,EACA,EACA,EACA,EACA,EACA,EAAc,GAId,EAAQ,EAAQ,EAAQ,MACxB,EAAM,EAAQ,EAAM,OACT,IAAO,GAAiB,EAAV,KAAK,IAIxB,IACA,GAAQ,EAAM,GADL,KAAK,KAAK,KAAK,IAAmC,EAA/B,KAAK,KAAK,EAAU,IAAgB,GAAO,GAAI,KAE3E,EAAM,GAGZ,IAAA,IAAS,EAAI,EAAO,EAAI,EAAK,GAAK,EACjC,EAAI,KAAK,EAAI,IAAI,EAAU,KAAK,IAAI,GAAI,EAAU,KAAK,IAAI,KAI5D,OAAA,EAAI,KAAK,EAAI,IAAI,EAAU,KAAK,IAAI,GAAM,EAAU,KAAK,IAAI,KAEtD,EAIR,SAAA,EAAkB,GAEb,QAAc,IAAd,EAAI,YAAsC,IAAf,EAAI,OAClC,MAAM,IAAI,MAAM,sDAGb,GAAA,EAAI,OAAS,GAAK,EAAI,QAAU,EACnC,OAGK,IAAA,EAAI,EAAI,MACR,EAAI,EAAI,OAER,EADS,GAAS,EAAI,QAAU,IAAY,IAAI,EAAG,GACnC,MAAM,EAAK,EAAG,GAAG,OAAM,KAEzC,EAAM,CACT,EAAK,EAAG,GACR,EAAK,EAAG,GACR,EAAK,EAAG,GACR,EAAK,EAAG,IAIL,GAAA,EAAI,OAAQ,CAGT,IAAA,EAAI,KAAK,IAAI,KAAK,IAAI,EAAG,GAAK,EAAG,EAAI,QAE3C,EAAM,CACL,EAAK,EAAG,GACR,EAAK,EAAI,EAAG,MACT,EAAU,EAAK,EAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KACxC,EAAK,EAAG,GACR,EAAK,EAAG,EAAI,MACT,EAAU,EAAK,EAAI,EAAG,EAAI,GAAI,EAAG,EAAG,EAAG,IAC1C,EAAK,EAAI,EAAG,GACZ,EAAK,EAAG,MACL,EAAU,EAAK,EAAG,EAAI,GAAI,EAAG,EAAG,GAAI,KACvC,EAAK,EAAG,EAAI,GACZ,EAAK,EAAG,MACL,EAAU,EAAK,EAAG,GAAI,EAAG,EAAG,IAAK,MAKtC,EAAY,EAAA,EAAA,GAAK,GAAL,CAAU,OAAA,EAAQ,IAAA,KAI/B,SAAA,EAAkB,GAEX,IAAE,GAAA,EAAI,GAAA,GAAO,EAEf,IAAC,IAAO,EACX,MAAM,IAAI,MAAM,iDAGX,IAAA,EAAI,EAAI,OAAS,EAGjB,EAAM,EAAG,IAAI,GAAI,OAAO,SAAS,MAAU,GAAJ,GAe7C,EAZc,CACb,EAAG,IAAI,GACP,EAAG,IAAI,GACP,EAAG,IAAI,GACP,EAAG,IAAI,IACN,IAAI,IAr0BR,IAAA,EAAA,EAq0BgB,MAAA,CACb,IAAK,EAAK,EAAE,EAAG,EAAE,EAAG,GACpB,GAAI,EAAK,GACT,MAAO,OAAA,EAAA,EAAI,OAAJ,EAAa,IACpB,QAAS,OAAA,EAAA,EAAI,SAAJ,EAAe,KAGV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAI,OAAQ,EAAI,OAAQ,EAAI,SAIhE,SAAA,EAAmB,GAEZ,IAAA,EAAM,EAAI,IAEZ,IAAC,EACJ,MAAM,IAAI,MAAM,wCAGb,KAAA,EAAI,OAAS,GAIjB,GAAI,EAAI,QAAU,EAAI,QAAU,EAAG,CAG9B,IAAA,EAAS,EAAI,GAAG,KAAK,EAAI,IAE7B,IAAA,IAAS,EAAI,EAAG,EAAI,EAAI,OAAS,EAAG,IACnC,EAAS,KAAK,IAAI,EAAI,GAAG,KAAK,EAAI,EAAI,IAAK,GAG7B,KAAK,IAAI,EAAI,OAAQ,EAAS,GAE7C,EAAS,EAAA,EAAA,GAAK,GAAL,CAAU,GAAI,EAAI,GAAI,GAAI,EAAI,MAEvC,IAAA,IAAS,EAAI,EAAG,EAAI,EAAI,OAAS,EAAG,IAAK,CAClC,IAAA,EAAK,EAAI,GACT,EAAK,EAAI,EAAI,GACnB,EAAS,EAAA,EAAA,GACL,GADK,CAER,GAAI,EACJ,GAAI,KAIN,EAAS,EAAA,EAAA,GAAK,GAAL,CAAU,GAAI,EAAI,EAAI,OAAS,GAAI,GAAI,EAAI,EAAI,OAAS,WAIjE,IAAA,IAAS,EAAI,EAAG,EAAI,EAAI,OAAS,EAAG,IACnC,EAAS,EAAA,EAAA,GACL,GADK,CAER,GAAI,EAAI,GACR,GAAI,EAAI,EAAI,MAQhB,SAAA,EAAsB,GACjB,IAAC,EAAI,KAAO,EAAI,KAAO,EAAI,GAC9B,MAAM,IAAI,MAAM,0DAEV,OAAA,EAAY,EAAA,EAAA,GACf,GADe,CAElB,IAAK,CAAC,EAAI,GAAI,EAAI,GAAI,EAAI,OAK5B,SAAA,EAAoB,GAEf,IAAC,EAAI,OACR,MAAM,IAAI,MAAM,4CAGE,IAAnB,EAAQ,QAIR,EAAY,EAAA,EAAA,GACR,GADQ,CAEX,QAAS,EAAI,OACb,QAAS,EAAI,OACb,MAAO,KAMT,SAAA,EAAqB,GAl6BtB,IAAA,EAAA,EAo6BM,QAAgB,IAAhB,EAAI,cAAyC,IAAhB,EAAI,QACpC,MAAM,IAAI,MAAM,8DAGG,IAApB,EAAQ,SAAiC,IAAhB,EAAI,SAI7B,EAAY,EAAA,EAAA,GACR,GADQ,CAEX,IAAK,EACJ,EAAK,GACL,EAAI,QACJ,EAAI,QACJ,OAAA,EAAA,EAAI,OAAJ,EAAa,EACb,OAAA,EAAA,EAAI,KAAJ,EAAW,IACX,EAAI,YAEL,OAAQ,KAKV,SAAA,EAAqB,GA37BtB,IAAA,EAAA,EA67BM,IAAC,EAAI,IACR,MAAM,IAAI,MAAM,0CAGX,IAAA,EAAO,EAAI,IAAI,OAEjB,KAAA,EAAO,GAUX,CANA,GAAA,IACA,EAAc,EAAI,KAClB,EAAU,EAAI,OACd,EAAY,EAAI,OAChB,EAAc,EAAI,SAED,IAAb,EAAI,KAAgB,CAEjB,IAAA,EAAQ,OAAA,EAAA,EAAI,OAAJ,EAAa,IAErB,EAAQ,EAAI,IAAI,IAAI,IAj9B7B,IAAA,EAi9BsC,MAAA,CAClC,IAAK,EAAK,EAAG,EAAG,EAAG,EAAG,GACtB,GAAI,EAAK,EAAG,GACZ,MAAO,EACP,QAAS,OAAA,EAAA,EAAI,SAAJ,EAAe,KAInB,EAAU,IAAI,MAAM,EAAO,GAAG,QAClC,IAAI,GAAO,CAAC,EAAG,EAAI,EAAG,EAAI,IAC1B,OAEF,EAAQ,EAAO,OAAA,EAAA,EAAI,SAAJ,EAAe,EAAS,EAAI,OAAQ,EAAI,OAAQ,EAAI,SAIpE,EAAQ,SACP,EAAU,CACT,IAAK,IAAK,EAAI,IAAK,EAAI,IAAI,IAC3B,OAAQ,EAAI,OACZ,MAAO,EAAI,QAAQ,MACnB,MAAO,EAAI,QAAQ,QAIrB,KAKD,SAAA,EAAiB,GAEZ,QAAa,IAAb,EAAI,KACP,MAAM,IAAI,MAAM,uCAGX,IAAA,EAAO,EAAI,KACX,GAAS,EAAI,KAAO,IAAI,MAAM,IAC9B,EAAK,EAAK,GAAK,EAAK,IAAI,MACxB,EAAK,EAAK,GAAK,EAAK,IAAI,OAExB,EAAQ,GADD,EAAI,MAAQ,GACC,GAAI,MAAM,EAAK,EAAI,OAAS,IAChD,EAAK,EAAM,EAAI,EACf,EAAK,EAAM,EAAI,EACjB,EAAO,EACP,EAAK,EACL,EAAK,EACH,EAAS,GACX,EAAU,GACV,EAAY,KACZ,EAAS,EAEN,KAAA,EAAS,EAAM,QAAQ,CAEzB,IAAA,EAAO,EAAM,GAGJ,OAAb,GAEC,GAAM,EACN,EAAO,EACP,EAAY,KACZ,EAAO,KAAK,GACZ,EAAU,MACC,EAAI,OAAS,EAAO,EAAK,EAAI,QAExC,GAAM,EACN,EAAO,EACU,MAAb,IAEH,EAAO,EADP,GAAU,EAAQ,OAAS,GAE3B,EAAU,EAAQ,MAAM,EAAG,IAE5B,EAAY,KACZ,EAAO,KAAK,GACZ,EAAU,IAIE,OAAT,IACH,EAAQ,KAAK,GACb,GAAQ,EACK,MAAT,IACH,EAAY,EAAQ,SAItB,EAAK,KAAK,IAAI,EAAI,GAClB,IAID,EAAO,KAAK,GAER,EAAI,QACP,EAAK,EAAI,OAIJ,IAAA,EAAS,GACT,EAAM,EAAK,EAAI,KAAO,GACtB,EAAS,GAAS,EAAI,QAAU,IAAY,MAAM,IAElD,GAAM,EAAO,EAAI,GAAM,EAAO,EAAI,KAAQ,EAAK,GAC/C,GAAM,EAAO,EAAI,GAAM,EAAO,EAAI,KAAQ,EAAK,GACjD,EAAM,EAEV,OAAA,EAAO,QAAQ,CAAC,EAAM,KAGf,IAAA,GAAO,EAAK,EAAK,OAAS,IAAO,EAAO,EAAI,IAElD,EAAK,QAAQ,CAAC,EAAM,KAjkCvB,IAAA,EAAA,EAkkCU,IAAA,EAAO,EAAK,IAAI,GAChB,EAAI,EAAK,EACT,EAAI,EAAK,EACf,GAAA,GAAO,EACH,EAAM,CACH,IAAA,EAAQ,CACb,IAAK,EAAK,IACV,KAAM,EAAK,EAAK,EAAG,EAAK,EAAG,EAAK,GAAI,EAAK,IACzC,GAAI,EACJ,IAAK,EAAK,EAAI,EAAI,EAAI,EAAK,EAAK,EAAI,EAAI,EAAI,GAC5C,QAAS,EAAI,QACb,MAAO,OAAA,EAAA,EAAI,OAAJ,EAAa,EAAI,IAAK,IAAK,KAClC,OAAQ,EAAI,OACZ,MAAO,EACP,MAAO,GAEJ,GAAA,EAAI,UAAW,CACZ,IAAA,EAAK,OAAA,EAAA,EAAI,UAAU,EAAK,IAAnB,EAA4B,GACvC,EAAO,MAAK,EAAM,IAAM,EAAM,IAAI,IAAI,EAAG,MACrC,EAAG,QAAO,EAAM,MAAQ,EAAM,MAAM,MAAM,EAAK,EAAG,SAClD,EAAG,QAAO,EAAM,OAAS,EAAG,OAC5B,EAAG,QAAO,EAAM,MAAQ,EAAM,MAAM,KAAK,EAAG,QAC5C,EAAG,UAAS,EAAM,SAAW,EAAG,SAErC,EAAO,KAAK,QAKR,CACN,MAAO,EACP,OAAQ,EACR,MAAO,GAKT,SAAA,EAAkB,GACjB,EAAY,EAAQ,IAIrB,SAAA,EAAqB,GACpB,IAAA,IAAW,KAAM,EAAM,MACtB,EAAW,CACV,IAAK,EAAG,IACR,MAAO,EAAG,IAAI,MAAQ,EAAG,KAAK,EAC9B,OAAQ,EAAG,IAAI,OAAS,EAAG,KAAK,EAChC,IAAK,EAAG,IACR,MAAO,EAAG,MACV,MAAO,EAAG,MACV,MAAO,EAAG,MACV,QAAS,EAAG,QACZ,KAAM,EAAG,KAET,OAAQ,WAOX,SAAA,IACK,GAAA,EAAK,OAAS,EAAK,QAAU,EAAK,QACjC,GAAA,EAAK,UAAW,CAEb,IAAA,EAAK,EAAG,mBAAqB,EAAG,oBAChC,EAAK,EAAK,MAAQ,EAAK,OACzB,GAAA,EAAK,EAAI,CACZ,EAAI,MAAQ,EAAK,OAAS,EAC1B,EAAI,OAAS,EAAK,OACZ,IAAA,EAAK,EAAG,oBAAsB,EAC9B,EAAK,EAAG,oBACR,GAAK,EAAG,mBAAqB,GAAM,EACzC,EAAG,QAAQ,EAAG,EAAG,EAAI,GACrB,EAAG,SAAS,EAAG,EAAG,EAAG,mBAAoB,EAAG,yBACtC,CACN,EAAI,MAAQ,EAAK,MACjB,EAAI,OAAS,EAAK,MAAQ,EACpB,IAAA,EAAK,EAAG,mBACR,EAAK,EAAG,mBAAqB,EAC7B,GAAK,EAAG,oBAAsB,GAAM,EAC1C,EAAG,QAAQ,EAAG,EAAG,oBAAsB,EAAK,EAAG,EAAI,GACnD,EAAG,SAAS,GAAI,EAAG,EAAG,mBAAoB,EAAG,2BAG9C,EAAI,MAAQ,EAAK,MACjB,EAAI,OAAS,EAAK,OAClB,EAAG,SAAS,EAAG,EAAG,EAAG,mBAAoB,EAAG,0BAG7C,EAAI,MAAQ,EAAG,mBAAqB,IACpC,EAAI,OAAS,EAAG,oBAAsB,IACtC,EAAG,SAAS,EAAG,EAAG,EAAG,mBAAoB,EAAG,qBAK9C,SAAA,IACQ,OAAA,EAAI,MAIZ,SAAA,IACQ,OAAA,EAAI,OAGZ,SAAA,IA7qCD,IAAA,EA8qCS,OAAA,OAAA,EAAA,EAAK,OAAL,EAAc,EAGtB,SAAA,IACQ,OAAA,EAAI,WAAW,QADd,OAp5BA,EAAT,SAAoB,GACX,OAAA,KAAK,IAAI,GAAK,KAAK,IAAI,GAAM,GAAM,GADnC,cAIA,EAAA,EAAA,WA0CA,EAAA,EAAA,cAyFA,EAAA,EAAA,YA+BA,EAAA,EAAA,WAyCA,EAAA,EAAA,SAiCA,EAAA,EAAA,cAwBA,EAAA,EAAA,YAKA,EAAA,EAAA,aAIA,EAAA,EAAA,SAOA,EAAA,EAAA,eAIA,EAAA,EAAA,iBAOA,EAAA,EAAA,aAOA,EAAA,EAAA,eAOA,EAAA,EAAA,eAOA,EAAA,EAAA,eAOA,EAAA,EAAA,iBAIA,EAAA,EAAA,gBAOA,EAAA,EAAA,cAwDA,EAAA,EAAA,eAkEA,EAAA,EAAA,aAgCA,EAAA,EAAA,YAiDA,EAAA,EAAA,YA8BA,EAAA,EAAA,aAmDA,EAAA,EAAA,gBAWA,EAAA,EAAA,cAoBA,EAAA,EAAA,eAyBA,EAAA,EAAA,eAoDA,EAAA,EAAA,WAwHA,EAAA,EAAA,YAKA,EAAA,EAAA,eAoBA,EAAA,EAAA,cAoCA,EAAA,EAAA,SAKA,EAAA,EAAA,UAIA,EAAA,EAAA,SAIA,EAAA,EAAA,cAIT,IACA,IACA,IAEO,CACN,MAAA,EACA,OAAA,EACA,MAAA,EACA,QAAA,EACA,WAAA,EACA,SAAA,EACA,YAAA,EACA,SAAA,EACA,YAAA,EACA,SAAA,EACA,SAAA,EACA,UAAA,EACA,aAAA,EACA,WAAA,EACA,YAAA,EACA,YAAA,EACA,WAAA,EACA,QAAA,EACA,WAAA,EACA,SAAA,EACA,cAAA,EACA,UAAA,EACA,YAAA,EACA,YAAA,EACA,YAAA,EACA,cAAA,EACA,aAAA,EACA,YAAA,EACA,UAAA,EACA,WAAA,GCpoCF,SAAA,GAAyB,GACpB,MAAM,YAAN,GAAyB,aAAN,EACf,OAEE,aAAN,EACI,KAED,EAGR,SAAA,GAAyB,GACxB,EAAO,kBAAmB,EAAG,oBAEpB,EAAG,yBAAyB,EAAG,0BAGzC,SAAA,KACC,SAAa,eAAgB,SAAS,iBAE7B,SAAS,sBAAsB,SAAS,uBAGlD,SAAA,KACQ,OAAA,SAAS,mBAEZ,SAAS,wBAId,SAAA,GAAiB,EAAe,IAhHhC,IAAA,EAAA,EAAA,EAkHU,IAAA,EAAO,OAAA,EAAA,EAAK,MAAL,EAAa,SAAS,KAEtC,IAAa,SAAS,OACrB,SAAS,KAAK,MAAM,MAAW,OAC/B,SAAS,KAAK,MAAM,OAAY,OAChC,SAAS,KAAK,MAAM,OAAY,MAChC,SAAS,gBAAgB,MAAM,MAAW,OAC1C,SAAS,gBAAgB,MAAM,OAAY,QAGtC,IAAA,EAAc,CACnB,OAAQ,OAAA,EAAA,EAAK,QAAL,EAAgB,MACjB,IAAA,EAAS,SAAS,cAAc,UACtC,OAAA,EAAK,YAAY,GACV,GAHgB,GAKxB,UAAW,GACX,aAAc,GACd,cAAc,EACd,cAAc,EACd,oBAAoB,EACpB,YAAa,GACb,SAAU,EAAK,EAAG,GAClB,cAAe,EAAK,EAAG,GACvB,KAAM,EACN,SAAU,EACV,UAAU,EACV,GAAI,EACJ,MAAO,OAAA,EAAA,EAAK,OAAL,EAAc,EACrB,SAAS,EACT,OAAQ,KACR,SAAS,EACT,IAAK,EACL,OAAQ,GACR,SAAU,GAGL,EAAS,CACd,UAAa,OACb,WAAc,QACd,QAAW,KACX,UAAa,OACR,IAAA,SAGA,EAAqB,CAC1B,QACA,OACA,QACA,KACA,OACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KAGD,EAAS,OAAS,EAAK,SAAW,EAAK,SACtC,EAAI,OAAO,MAAQ,EAAK,MAAQ,EAAI,MACpC,EAAI,OAAO,OAAS,EAAK,OAAS,EAAI,QAEtC,EAAI,OAAO,MAAQ,EAAI,OAAO,cAAc,YAC5C,EAAI,OAAO,OAAS,EAAI,OAAO,cAAc,cAGxC,IAAA,EAAS,CACd,gBACA,mBAGD,EAAS,QACR,EAAO,KAAK,8BACZ,EAAO,KAAK,iCAIb,EAAI,OAAO,MAAQ,EAAO,KAAK,KAC/B,EAAI,OAAO,aAAa,WAAY,KAE9B,IAAA,EAAK,EAAI,OACb,WAAW,QAAS,CACpB,WAAW,EACX,OAAO,EACP,SAAS,EACT,OAAO,EACP,uBAAuB,IAGzB,EAAI,QAAW,iBAAkB,QAAW,UAAU,eAAiB,EAEvE,EAAI,OAAO,iBAAiB,YAAa,IACxC,IAGC,EAAI,SAAW,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,OAIzD,EAAI,cAAgB,EAAK,EAAE,UAAW,EAAE,WAAW,MAAM,EAAI,EAAI,OACjE,EAAI,cAAe,IAId,IAAA,EAAe,CACpB,OACA,SACA,QACA,OACA,WAsGD,SAAA,IACQ,OAAA,EAAI,SAAS,QAGrB,SAAA,IACQ,OAAA,EAAI,cAAc,QAG1B,SAAA,EAAwB,EAAI,QACpB,MAAuB,YAAvB,EAAI,YAAY,GAGxB,SAAA,EAAqB,EAAI,QACjB,MAAuB,YAAvB,EAAI,YAAY,IAA2C,SAAvB,EAAI,YAAY,GAG5D,SAAA,EAAyB,EAAI,QACrB,MAAuB,aAAvB,EAAI,YAAY,GAGxB,SAAA,IACQ,OAAA,EAAI,aAGZ,SAAA,EAAsB,GACjB,YAAM,IAAN,EACI,EAAI,aAEiB,YAArB,EAAI,UAAU,GAIvB,SAAA,EAA4B,GACvB,YAAM,IAAN,EACI,EAAI,mBAEiB,YAArB,EAAI,UAAU,IAAyC,aAArB,EAAI,UAAU,GAIzD,SAAA,EAAmB,GACX,MAAqB,YAArB,EAAI,UAAU,IACI,aAArB,EAAI,UAAU,IACO,SAArB,EAAI,UAAU,GAGnB,SAAA,EAAuB,GACf,MAAqB,aAArB,EAAI,UAAU,GAGtB,SAAA,IACQ,MAAA,IAAI,EAAI,cAIhB,SAAA,IACQ,OAAA,EAAI,GAIZ,SAAA,IACQ,OAAA,EAAI,KAGZ,SAAA,IACQ,OAAA,EAAI,IAIZ,SAAA,IACQ,OAAA,EAAI,OAAO,YAInB,SAAA,EAAgB,GACX,OAAA,IACH,EAAI,OAAO,MAAM,OAAS,GAEpB,EAAI,OAAO,MAAM,OAGzB,SAAA,EAAoB,GAAa,GAChC,EACC,GAAgB,EAAI,QAEpB,KAIF,SAAA,IACQ,OAAA,QAAQ,MAGhB,SAAA,EAAa,GAEN,IAAA,EAAQ,EAAC,IAEV,GAA6B,YAA7B,SAAS,gBAEZ,YADA,EAAI,OAAS,sBAAsB,IAI9B,IAAA,EAAW,EAAI,IACf,EAAS,EAAW,EAAI,SAE9B,EAAI,SAAW,EAEV,EAAI,WACR,EAAI,GAAK,EACT,EAAI,MAAQ,EAAI,GAChB,EAAI,OAAO,KAAK,EAAI,EAAI,IACxB,EAAI,UAAY,EAAI,GAChB,EAAI,UAAY,IACnB,EAAI,SAAW,EACf,EAAI,IAAM,KAAK,MAAM,EAAI,OAAO,OAAO,CAAC,EAAG,IAAM,EAAI,GAAK,EAAI,OAAO,QACrE,EAAI,OAAS,KAIf,EAAI,UAAW,EAEf,IAEA,IAAA,IAAW,KAAK,EAAI,UACnB,EAAI,UAAU,GAAK,GAAgB,EAAI,UAAU,IAGlD,IAAA,IAAW,KAAK,EAAI,YACnB,EAAI,YAAY,GAAK,GAAgB,EAAI,YAAY,IAGtD,EAAI,aAAe,GACnB,EAAI,cAAe,EACnB,EAAI,cAAe,EACnB,EAAI,oBAAqB,EACzB,EAAI,OAAS,sBAAsB,IAxCtB,SA4Cd,EAAI,SAAU,EACd,EAAI,OAAS,sBAAsB,GAIpC,SAAA,IACC,qBAAqB,EAAI,QACzB,EAAI,SAAU,EAFN,OAnPT,EAAI,OAAO,iBAAiB,YAAa,IAClC,IAAA,EAAI,EAAa,EAAE,QACzB,IACC,EAAI,YAAY,GAAK,aAIvB,EAAI,OAAO,iBAAiB,UAAW,IAChC,IAAA,EAAI,EAAa,EAAE,QACzB,IACC,EAAI,YAAY,GAAK,cAIvB,EAAI,OAAO,iBAAiB,UAAW,IAEhC,IAAA,EAAI,EAAO,EAAE,MAAQ,EAAE,IAAI,cAEjC,EAAuB,SAAS,IAC/B,EAAE,iBAGc,IAAb,EAAE,QACL,EAAI,aAAa,KAAK,EAAE,KAGf,UAAN,GACH,EAAI,aAAa,KAAK,KAGvB,EAAM,QACL,EAAI,oBAAqB,EACzB,EAAI,UAAU,GAAK,aAEnB,EAAI,cAAe,EACnB,EAAI,UAAU,GAAK,aAKrB,EAAI,OAAO,iBAAiB,QAAS,IAC9B,IAAA,EAAI,EAAO,EAAE,MAAQ,EAAE,IAAI,cACjC,EAAI,UAAU,GAAK,aAGpB,EAAI,OAAO,iBAAiB,aAAc,IACrC,IAAC,EAAK,aAAc,OAExB,EAAE,iBACI,IAAA,EAAI,EAAE,QAAQ,GACpB,EAAI,SAAW,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,OACxD,EAAI,YAAY,KAAU,YAG3B,EAAI,OAAO,iBAAiB,YAAa,IACpC,IAAC,EAAK,aAAc,OAExB,EAAE,iBACI,IAAA,EAAI,EAAE,QAAQ,GACpB,EAAI,SAAW,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,OACxD,EAAI,cAAe,IAGpB,EAAI,OAAO,iBAAiB,WAAY,KAClC,EAAK,eACV,EAAI,YAAY,KAAU,cAG3B,EAAI,OAAO,iBAAiB,cAAe,KACrC,EAAK,eACV,EAAI,YAAY,KAAU,cAG3B,EAAI,OAAO,iBAAiB,cAAe,SAAU,GACpD,EAAE,mBAGH,SAAS,iBAAiB,mBAAoB,KAvT/C,IAAA,EAAA,EAwTU,OAAA,SAAS,iBACX,IAAA,UAEJ,EAAI,UAAW,EAEf,OAAA,EAAA,EAAK,WAAL,EAAe,SACf,MACI,IAAA,SACJ,OAAA,EAAA,EAAK,WAAL,EAAe,aAaT,EAAA,EAAA,YAIA,EAAA,EAAA,iBAIA,EAAA,EAAA,kBAIA,EAAA,EAAA,eAIA,EAAA,EAAA,mBAIA,EAAA,EAAA,gBAIA,EAAA,EAAA,gBAQA,EAAA,EAAA,sBAQA,EAAA,EAAA,aAMA,EAAA,EAAA,iBAIA,EAAA,EAAA,gBAKA,EAAA,EAAA,MAKA,EAAA,EAAA,QAIA,EAAA,EAAA,OAKA,EAAA,EAAA,cAKA,EAAA,EAAA,UAOA,EAAA,EAAA,cAQA,EAAA,EAAA,gBAIA,EAAA,EAAA,OAmDA,EAAA,EAAA,QAKF,CACN,GAAA,EACA,SAAA,EACA,cAAA,EACA,UAAA,EACA,aAAA,EACA,mBAAA,EACA,cAAA,EACA,YAAA,EACA,eAAA,EACA,gBAAA,EACA,aAAA,EACA,aAAA,EACA,OAAA,EACA,GAAA,EACA,KAAA,EACA,IAAA,EACA,WAAA,EACA,IAAA,EACA,KAAA,EACA,UAAW,IAAM,SAAS,gBAAkB,EAAI,OAChD,MAAO,IAAM,EAAI,OAAO,QACxB,OAAQ,EAAI,OACZ,QAAS,EAAI,QACb,MAAO,EAAI,MACX,WAAA,EACA,aAAA,GD7SO,EAAA,GAAA,YAeA,EAAA,GAAA,WC3IA,EAAA,GAAA,mBAUA,EAAA,GAAA,mBAMA,EAAA,GAAA,kBAMA,EAAA,GAAA,wBAOA,EAAA,GAAA,WAAA,IAAA,GAAA,EAAA,ooUC5FH,GAAW,EACX,GAAW,EACX,GAAY,EACZ,GAAY,EACZ,IAAa,KACb,GAAa,KAKnB,SAAA,KAEO,IAAA,EAAM,IAAK,OAAO,cAAiB,OAAe,oBAClD,EAAa,EAAI,aACvB,EAAW,QAAQ,EAAI,aAGjB,IAAA,EAAU,CACf,IAAK,IAAI,YAAY,CACpB,OAAQ,EACR,iBAAkB,EAClB,WAAY,SAWd,SAAA,EAAgB,GACX,YAAM,IAAN,IACH,EAAW,KAAK,MAAQ,EAAM,EAAG,GAAU,KAErC,EAAW,KAAK,MAIxB,SAAA,EACC,EACA,EAAoB,CACnB,MAAM,EACN,OAAQ,EACR,MAAO,EACP,OAAQ,EACR,KAAM,IAnET,IAAA,EAuEM,IAAA,GAAU,EACV,EAAU,EAAI,qBAElB,EAAQ,OAAS,EAAI,IACrB,EAAQ,OAAO,EAAI,KAEb,IAAA,EAAW,EAAI,aAErB,EAAQ,QAAQ,GAChB,EAAS,QAAQ,GAEX,IAAA,EAAM,OAAA,EAAA,EAAI,MAAJ,EAAY,EAExB,EAAQ,MAAM,EAAG,GAEb,IAAA,EAAY,EAAI,YAAc,EAC9B,EAA0B,KAExB,EAAS,CAEd,OACC,IAGA,KAAK,QACL,EAAY,EAAI,cAGjB,KAAK,GAEA,IAAC,EACJ,OAGK,IAAA,EAAU,GAEhB,EAAU,EAAI,sBACN,OAAS,EAAQ,OACzB,EAAQ,KAAO,EAAQ,KACvB,EAAQ,aAAa,MAAQ,EAAQ,aAAa,MAE9C,EAAQ,SACX,EAAQ,OAAO,MAAQ,EAAQ,OAAO,OAGvC,EAAQ,QAAQ,GAEV,IAAA,EAAM,MAAA,EAAA,EAAQ,KAAK,OAEzB,EAAQ,MAAM,EAAG,GACjB,EAAY,EAAI,YAAc,EAC9B,GAAU,EACV,EAAW,MAIZ,QACC,IAGA,EAAQ,OACR,GAAU,EACV,EAAW,EAAI,cAGhB,SAAA,IACQ,EAGR,SACQ,OAAA,KAAK,YAGb,UAAA,IACQ,EAGR,UACQ,OAAA,KAAK,aAIb,MAAM,SACO,IAAR,IACH,EAAQ,aAAa,MAAQ,EAAM,EAAK,GAAW,KAE7C,EAAQ,aAAa,OAG7B,OAAO,GACD,EAAQ,aAGD,IAAR,IACH,EAAQ,OAAO,MAAQ,EAAM,EAAK,GAAY,KAExC,EAAQ,OAAO,OALd,EAQT,OAAO,SACM,IAAR,IACH,EAAS,KAAK,MAAQ,EAAM,EAAK,GAAU,KAErC,EAAS,KAAK,OAGtB,OACC,EAAQ,MAAO,GAGhB,SACC,EAAQ,MAAO,GAGhB,SAAA,IACQ,EAAI,IAAI,SAGhB,KAAA,IACK,EACI,EAAW,EAEX,EAAI,YAAc,GAM5B,OAAA,EAAO,MAAM,EAAI,OACjB,EAAO,OAAO,EAAI,QAClB,EAAO,OAAO,EAAI,QAEX,EAIR,SAAA,EAAc,GACN,OAAA,EAAK,EAAS,GADb,OAlKT,EAAI,gBAAgB,GAAU,OAAO,MAAM,GAAI,IAC9C,EAAQ,IAAM,GACZ,KACI,MAAA,IAAI,MAAM,yBAIR,EAAA,EAAA,UAQA,EAAA,EAAA,QAmJA,EAAA,EAAA,QAIF,CACN,IAAA,EACA,WAAA,EACA,OAAA,EACA,KAAA,EACA,KAAA,GA1LO,EAAA,GAAA,aAAA,IAAA,GAAA,y06CAAA,GAAA,60iFAAA,GAAA,ikHAAA,GAAA,6oFAAA,GAAA,yvGCuEH,GAAc,oGACd,GAAc,oQAEpB,SAAA,GAAiB,GACV,IAAA,EAAM,IAAI,MAChB,OAAA,EAAI,IAAM,EACV,EAAI,YAAc,YACX,IAAI,QAA0B,CAAC,EAAS,KAC9C,EAAI,OAAS,MACZ,EAAQ,KAET,EAAI,QAAU,MACb,oBAAyB,SAK5B,SAAA,GAAmB,GACX,OAAA,EAAI,WAAW,SAGvB,SAAA,GAAoB,EAAU,EAAc,EAAkB,IAEvD,IAAA,EAAoB,CACzB,aAAc,EACd,SAAU,GACV,QAAS,GACT,QAAS,GACT,OAAQ,GACR,MAAO,GACP,QAAS,IAGV,SAAA,EAAiB,GAtIlB,IAAA,EAuIQ,IAAA,EAAK,EAAO,aAClB,OAAA,EAAO,QAAQ,IAAM,EACrB,EAAO,eACA,EACL,MAAM,OAAA,EAAA,EAAK,YAAL,EAAmB,QAAQ,OACjC,QAAQ,IAAM,EAAO,QAAQ,IAAM,GAItC,SAAA,IAEK,IAAA,EAAQ,EACR,EAAS,EAEb,IAAA,IAAW,KAAM,EAAO,QACvB,GAAS,EACL,EAAO,QAAQ,KAClB,GAAU,GAIL,OAAA,EAAS,EAKjB,SAAA,EAAkB,GACb,YAAS,IAAT,IACH,EAAO,SAAW,GAEZ,EAAO,SAIf,SAAA,EACC,EACA,EACA,EACA,EACA,EAAmB,IAEZ,OAAA,EAAK,IAAI,QAAkB,CAAC,EAAS,KAE3C,GADa,GAAU,GAAO,EAAM,EAAO,SAAW,GAEpD,KAAK,IAnLV,IAAA,EAoLW,IAAA,EAAO,EAAI,SAAS,EAAI,QAAQ,EAAK,GAAM,EAAI,EAAI,OAAA,EAAA,EAAI,OAAJ,EAAa,IACtE,IACC,EAAO,MAAM,GAAQ,GAEtB,EAAQ,KAER,MAAM,MAoBV,SAAA,EAAe,EAAI,EAAG,EAAI,EAAG,EAAK,EAAG,EAAK,EAAG,EAAI,EAAG,EAAI,GACjD,IAAA,EAAS,GACT,EAAK,EAAI,EACT,EAAK,EAAI,EACf,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IACtB,EAAO,KAAK,EACX,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EACA,IAII,OAAA,EAGR,SAAA,EACC,EACA,GAEI,OAAA,EAAgB,iBAAT,EAEE,MAAM,IAAa,GAC7B,KAAK,GAAS,EAAI,QAClB,KAAK,GAAW,EAAgB,EAAK,IAE5B,EAAW,KAAM,GAAK,KAAK,IAChC,IAAA,EAAM,GACN,EAAI,EAAM,IAAI,MACd,EAAI,EAAM,IAAI,OACpB,IAAA,IAAW,KAAQ,EAAM,CAClB,IAAA,EAAO,EAAK,GACZ,EAAM,CACX,IAAK,EAAM,IACX,OAAQ,EAAM,EAAK,OAAQ,EAAK,OAAQ,EAAK,EAAI,EAAG,EAAK,EAAI,EAAG,EAAK,MAAQ,EAAG,EAAK,OAAS,GAC9F,MAAO,EAAK,OAEb,EAAO,QAAQ,GAAQ,EACvB,EAAI,GAAQ,EAEN,OAAA,KAKT,SAAA,EACC,EACA,EACA,EAAqB,CACpB,OAAQ,EACR,OAAQ,EACR,MAAO,KAKR,SAAA,EACC,EACA,EACA,EAAqB,CACpB,OAAQ,EACR,OAAQ,EACR,MAAO,KAIF,IAGA,EAAS,CACd,IAJW,EAAI,QAAQ,EAAK,GAK5B,OAJc,EAAM,EAAI,QAAU,EAAG,EAAI,QAAU,GAKnD,MAAO,EAAI,OAAS,IAGjB,OAAA,IACH,EAAO,QAAQ,GAAQ,GAGjB,EAvBC,OAAA,EAAA,EAAA,iBA2BF,EAAK,IAAI,QAAoB,CAAC,EAAS,KAEzC,IAAC,EACJ,OAAO,8BAAmC,MAIvC,GAAgB,iBAAT,EAAmB,CAE7B,GADa,GAAU,GAAO,EAAM,EAAO,SAAW,GAEpD,KAAK,GAAS,EAAQ,EAAc,EAAM,EAAK,KAC/C,MAAM,QAER,EAAQ,EAAc,EAAM,EAAK,OAQpC,SAAA,EAAmB,EAAc,GAEzB,OAAA,EAAK,IAAI,QAAoB,CAAC,EAAS,KAE7C,MAAM,IAAa,GACjB,KAAK,GAAS,EAAI,QAClB,KAAK,GAAgB,EAAA,KAAA,KAAA,YAEf,IAAA,QAAe,QAAQ,IAAI,EAAK,OAAO,IAAI,KAC3C,EAAS,SAAS,cAAc,UACtC,EAAO,MAAQ,EAAK,MACpB,EAAO,OAAS,EAAK,OAAS,EAAK,OAAO,OAEpC,IAAA,EAAM,EAAO,WAAW,MAE9B,OAAA,EAAO,QAAQ,CAAC,EAAuB,KACtC,EAAI,UAAU,EAAK,EAAG,EAAI,EAAK,UAGzB,EAAW,EAAM,EAAQ,CAC/B,OAAQ,EAAK,OAAO,OACpB,MAAO,EAAK,WAGb,KAAK,GACL,MAAM,MAQV,SAAA,EACC,EACA,EACA,GAGO,OAAA,EAAK,IAAI,QAAoB,CAAC,EAAS,KAEvC,IAAA,EAAW,IAAa,EAE9B,EAAW,EAAM,GACf,KAAK,IACL,MAAM,GACJ,KAAK,GAAS,EAAI,QAClB,KAAK,IACC,IAAA,EAAO,EAAK,KAAK,KACvB,EAAO,OAAS,EAAK,OAAO,IAAI,GACxB,EACN,EAAE,MAAM,EAAI,EAAK,EACjB,EAAE,MAAM,EAAI,EAAK,EACjB,EAAE,MAAM,EAAI,EAAK,EACjB,EAAE,MAAM,EAAI,EAAK,IAGnB,IAAA,IAAW,KAAQ,EAAK,KAAK,UAC5B,EAAS,OAAS,EAAK,GACtB,EAAO,MAAM,EAAK,MAAQ,EAAK,KAE/B,EAAO,MAAM,EAAK,MAAQ,CACzB,KAAM,EAAK,KACX,GAAI,EAAK,GAET,MAAO,GACP,MAAM,GAIT,EAAQ,KAER,MAAM,KAGR,MAAM,MAMV,SAAA,EACC,EACA,EACA,EACA,GAAiB,GAGjB,SAAA,EACC,EACA,EACA,GAEM,IAAA,EAAS,EAAI,WAAW,EAAM,GAChC,OAAA,IACH,EAAO,QAAQ,GAAQ,GAEjB,EATC,OAAA,EAAA,EAAA,iBAYF,EAAK,IAAI,QAAoB,CAAC,EAAS,KAEzC,IAAC,IAAS,EACb,OAAO,EAAO,aAGf,SAAA,EAAoB,GACZ,OAAA,EACN,MAAM,EAAO,SAAW,GACtB,KAAK,IACD,GAAA,EAAE,GACL,OAAO,EAAE,OAEH,MAAA,IAAI,wBAAwB,OAGnC,MAAM,GACN,IAAI,QAAQ,GAAO,EAAE,OAXhB,GAAA,EAAA,EAAA,cAcL,EACH,QAAQ,IAAI,CAAC,EAAW,GAAO,EAAW,KACxC,KAAK,EAAE,EAAO,MACd,EAAQ,EAAc,EAAM,EAAO,MAEnC,MAAM,QAER,IACC,EAAQ,EAAc,EAAM,EAAM,IAAA,MAC1B,GACR,EAAO,OAUX,SAAA,EACC,EACA,GAGM,IAAA,EAAM,EAAO,SAAW,EAEvB,OAAA,EAAK,IAAI,QAAmB,CAAC,EAAS,KAExC,IAAC,EACJ,OAAO,6BAAkC,MAItB,iBAAT,GACV,MAAM,GACJ,KAAK,IACD,GAAA,EAAI,GACP,OAAO,EAAI,cAEL,MAAA,IAAI,wBAAwB,OAGnC,KAAK,GACE,IAAI,QAAQ,CAAC,EAAU,KAC7B,EAAM,IAAI,gBAAgB,EAAM,EAAU,MAG3C,KAAK,IACC,IAAA,EAAM,CACX,IAAK,GAEN,IACC,EAAO,OAAO,GAAQ,GAEvB,EAAQ,KAER,MAAM,MAOX,SAAA,EAAkB,EAAe,QACzB,OAAA,EAAW,EAAM,IADhB,OAzWA,EAAA,EAAA,QAUA,EAAA,EAAA,gBAiBA,EAAA,EAAA,YAQA,EAAA,EAAA,YAqBA,EAAT,SAAmB,GA9LpB,IAAA,EA+LS,OAAA,OAAA,EAAA,EAAO,QAAQ,IAAf,EAAwB,MADvB,aAIA,EAAT,SAAkB,GAlMnB,IAAA,EAmMS,OAAA,OAAA,EAAA,EAAO,OAAO,IAAd,EAAuB,MADtB,YAIA,EAAT,SAAiB,GAtMlB,IAAA,EAuMS,OAAA,OAAA,EAAA,EAAO,MAAM,IAAb,EAAsB,MADrB,WAIA,EAAT,SAAmB,GA1MpB,IAAA,EA2MS,OAAA,OAAA,EAAA,EAAO,QAAQ,IAAf,EAAwB,MADvB,aAIA,EAAA,EAAA,SAiBA,EAAA,EAAA,mBA6BA,EAAA,EAAA,cA2DA,EAAA,EAAA,aAiCA,EAAA,EAAA,gBAgDA,EAAA,EAAA,cA2DA,EAAA,EAAA,aA4CA,EAAA,EAAA,YAIT,EACC,SACA,GACA,GACA,IAGD,EACC,UACA,GACA,GACA,IAGD,EACC,OACA,GACA,EACA,EACA,CACC,MAAO,uRAIT,EACC,QACA,GACA,EACA,IAGM,CACN,SAAA,EACA,WAAA,EACA,gBAAA,EACA,UAAA,EACA,aAAA,EACA,SAAA,EACA,UAAA,EACA,SAAA,EACA,WAAA,EACA,aAAA,EACA,KAAA,EACA,QAAS,EAAO,QAChB,MAAO,EAAO,MACd,OAAQ,EAAO,OACf,QAAS,EAAO,SAzbT,EAAA,GAAA,WAcA,EAAA,GAAA,aAIA,EAAA,GAAA,cC3FT,IAAM,GAAW,GAEjB,SAAA,GAAoB,EAAU,EAAgB,EAAiB,IAjC/D,IAAA,EAmCK,IAAA,EAAc,GACZ,EAAM,OAAA,EAAA,EAAI,KAAJ,EAAW,EAGvB,SAAA,IAEC,EAAS,OAAS,IACjB,EAAO,EAAK,MAAM,EAAG,IAGhB,IAAA,EAAM,EAAK,EAAG,EAAI,UAExB,EAAK,QAAQ,CAAC,EAAK,KAEZ,IAAA,EAAW,EAAI,EAAG,EAAG,EAAK,EAAG,IAC7B,EAAU,EAAI,EAAG,EAAG,EAAK,GAAK,IAE9B,EAAO,MACJ,OAAA,EAAI,MACN,IAAA,OAAe,OAAA,EAAI,IAAK,IAAK,KAC7B,IAAA,QAAgB,OAAA,EAAI,IAAK,EAAG,OAHtB,GAOP,EAAQ,EAAI,QAAQ,CACzB,KAAM,EAAI,IACV,KAAM,EAAO,MAAM,KACnB,IAAK,EACL,OAAQ,UACR,MAAO,EACP,KAAM,GAAW,EAAI,QACrB,MAAO,EAAI,QACX,QAAS,IAGV,EAAI,SAAS,CACZ,IAAK,EACL,MAAO,EAAM,MACb,OAAQ,EAAM,OACd,OAAQ,UACR,MAAO,EAAI,EAAG,EAAG,GACjB,QAAS,IAGV,EAAI,YAAY,GAChB,EAAI,GAAK,EAAM,SAMjB,SAAA,EAAe,GACd,EAAK,QAAQ,CACZ,KAAM,QACN,IAAK,IAIP,SAAA,EAAc,GACb,EAAK,QAAQ,CACZ,KAAM,OACN,IAAK,IAIP,SAAA,IACC,EAAO,GADC,OA7DA,EAAA,EAAA,QA+CA,EAAA,EAAA,SAOA,EAAA,EAAA,QAOA,EAAA,EAAA,SAIF,CACN,KAAA,EACA,MAAA,EACA,KAAA,EACA,MAAA,GA3EO,EAAA,GAAA,cAAA,IAAA,GAAA,q/KAAA,GAAA,yiJCcF,GAAQ,EAAC,IAEf,SAAA,EAAiB,EAAgB,EAAG,EAAe,GAC9C,IAAA,EAAO,EACJ,MAAA,CACN,GAAI,UACJ,QAAS,CAAE,SACX,SACO,IAAA,EAAI,KAAK,IAAI,EAAO,GAAS,EACnC,EAAQ,GACP,EAAE,QAAQ,MAEX,KAAK,MAAQ,EAAE,KAAK,GACpB,GAAQ,EAAE,OAXJ,EAAA,EAAA,WAgBL,IAAA,EAAW,KACX,EAAa,KAKjB,SAAA,EAAmB,EAAW,EAAe,IAvE9C,IAAA,EAAA,EAyEQ,IAAA,EAA2B,GAAlB,EAAI,OAAS,GACtB,EAAQ,EAAI,OAAS,EAErB,EAAO,EAAE,IAAI,CAClB,EAAE,IAAI,GACN,EAAE,OAAO,GACT,EAAE,MAAM,GACR,EAAE,OACF,EAAE,OAAO,UACT,EAAQ,EAAO,OACX,OAAA,EAAA,EAAI,WAAJ,EAAkB,IAAM,QAGvB,EAAK,EAAE,IAAI,CAChB,EAAE,IAAI,GACN,EAAE,OAAO,GACT,EAAE,MAAM,GACR,EAAE,OACF,EAAE,OAAO,UACT,EAAE,MAAM,GAAM,EAAO,IAAM,EAAG,IAAI,EAAQ,EAAO,SAC7C,OAAA,EAAA,EAAI,SAAJ,EAAgB,IAAM,QAGpB,MAAA,CACN,UACC,EAAE,QAAQ,GACV,EAAE,QAAQ,KA5BJ,OAHT,EAAE,WAAW,KAAM,IAAO,KAAK,GAAS,EAAW,GACnD,EAAE,WAAW,KAAM,IAAS,KAAK,GAAS,EAAa,GAE9C,EAAA,EAAA,aAkCF,CACN,UAAA,IA3Da,WRiGR,GAAQ,EAAA,CAAC,EAAkB,MAhJlC,IAAA,EAkJM,IAAA,EAAQ,KAER,EAAM,GAAQ,CACnB,MAAO,EAAK,MACZ,OAAQ,EAAK,OACb,MAAO,EAAK,MACZ,MAAO,EAAK,MACZ,OAAQ,EAAK,OACb,KAAM,EAAK,KACX,QAAS,EAAK,QACd,aAAc,OAAA,EAAA,EAAK,eAAL,EACd,SAAU,EAAM,MAGX,EAAM,GAAQ,EAAI,GAAI,CAC3B,WAAY,EAAK,WAAa,EAAI,EAAK,iBAAc,EACrD,MAAO,EAAK,MACZ,OAAQ,EAAK,OACb,MAAO,EAAK,MACZ,UAAW,EAAK,UAChB,QAAS,EAAK,QACd,UAAW,EAAK,aAIhB,MAAA,EACA,OAAA,GACG,EAEE,EAAS,GAAW,EAAK,EAAO,CACrC,WAAY,IACX,EAAO,MAAM,MAIT,EAAS,GAAW,EAAK,EAAQ,CACtC,IAAK,EAAK,SAGL,EAAW,UACX,EAAW,OAEjB,SAAA,IACQ,OAAA,EAAI,KAAO,GAAM,UAIzB,SAAA,EAAc,EAAY,EAAoB,IACvC,IAAA,EAAK,EAAM,KAAK,CACrB,IAAK,IAAI,YAAY,CACpB,OAAQ,EACR,iBAAkB,EAClB,WAAY,UAGd,OAAA,GAAO,KACA,IAAA,EAAM,EAAO,OAAO,GACtB,IAAC,EACJ,MAAM,IAAI,2BAA2B,MAEhC,IAAA,EAAM,EAAM,KAAK,EAAK,GAC5B,IAAA,IAAW,KAAK,EACf,EAAG,GAAK,EAAI,KAGP,EAGR,SAAA,IACQ,OAAA,EAAI,WAGZ,SAAA,IACQ,OAAA,EAAK,YAIb,SAAA,EAAoB,GA/NpB,IAAA,EAAA,EAgOK,IAAC,EAAI,OACR,MAAM,IAAI,MAAM,2CAEX,IAAA,EAAO,KACc,iBAAf,EAAI,OACP,EAAO,QAAQ,EAAI,QAEnB,EAAI,OAJA,GAOT,IAAC,EACJ,MAAM,IAAI,4BAA4B,EAAI,WAErC,IAAA,EAAI,EAAI,OAAO,OAAA,EAAA,EAAI,OAAJ,EAAa,GAC9B,IAAC,EACJ,MAAM,IAAI,0BAA0B,OAAA,EAAA,EAAI,OAAJ,EAAa,KAElD,EAAI,YAAY,EAAA,EAAA,GACZ,GADY,CAEf,IAAK,EAAI,IACT,KAAM,EAAE,MAAM,EAAI,MAAQ,EAAK,EAAG,EAAG,EAAG,OAK1C,SAAA,EAAkB,GAzPlB,IAAA,EA2PO,IAAA,EAAM,OAAA,EAAA,EAAI,MAAJ,EAAY,EAClB,EAAO,EAAO,MAAM,GACtB,IAAC,EACJ,MAAM,IAAI,yBAAyB,KAEpC,EAAI,SAAS,EAAA,EAAA,GACT,GADS,CAEZ,KAAM,KAtEC,EAAA,EAAA,MAKA,EAAA,EAAA,QAqBA,EAAA,EAAA,YAIA,EAAA,EAAA,iBAKA,EAAA,EAAA,cA0BA,EAAA,EAAA,YAaH,IAAA,EAAc,KACd,EAAa,UAkDb,EAAa,CAElB,QAAQ,EAGR,OAAQ,GACR,UAAW,GAGX,KAAM,IAAI,GACV,OAAQ,IAAI,GAGZ,IAAK,CACJ,IAAK,KACL,MAAO,EAAK,GACZ,MAAO,EACP,MAAO,GAGR,YAAa,EAAI,WACjB,UAAW,IAGX,OAAQ,GACR,SAAU,KACV,QAAS,EAET,GAAM,EAAY,GACZ,OAAA,KAAK,OAAO,KAChB,KAAK,OAAO,GAAM,IAAI,IAEhB,KAAK,OAAO,GAAI,MAAM,IAG9B,QAAQ,KAAe,GACb,KAAA,OAAO,IACf,KAAK,OAAO,GAAI,QAAQ,GAAQ,KAAM,KAIxC,OAAQ,GACR,QAAQ,GAIT,SAAA,EAAgB,EAAgB,GAE/B,EAAK,QAAQ,CAAC,EAAM,KACnB,EAAK,OAAO,GAAQ,EAAM,IAGvB,IACH,EAAK,SAAW,GAKlB,SAAA,KAAmB,GACd,OAAA,EAAI,OAAS,IAChB,EAAK,IAAI,IAAM,KAAQ,IAEjB,EAAK,IAAI,IAAI,QAGrB,SAAA,MAAqB,GAChB,OAAA,EAAM,OAAS,IAClB,EAAK,IAAI,MAAQ,KAAQ,IAEnB,EAAK,IAAI,MAAM,QAGvB,SAAA,GAAgB,GACX,YAAU,IAAV,IACH,EAAK,IAAI,MAAQ,GAEX,EAAK,IAAI,MAGjB,SAAA,GAAe,EAAoB,IAClC,EAAK,IAAI,MAAQ,EAGlB,SAAA,GAAkB,GACV,OAAA,EAAK,UAAU,SAAS,GAGhC,SAAA,GAAiB,GACT,OAAA,EAAK,UAAU,SAAS,SAAS,GA1ChC,EAAA,EAAA,UAYA,EAAA,EAAA,UAOA,EAAA,GAAA,YAOA,EAAA,GAAA,UAOA,EAAA,GAAA,SAIA,EAAA,GAAA,YAIA,EAAA,GAAA,WAIH,IAAA,GAAY,IAAI,IAAI,CACzB,KACA,YAGK,GAAc,IAAI,IAAI,CAC3B,MACA,OACA,SACA,OACA,UACA,YAGD,SAAA,GAAiB,GAEV,IAAA,EAAa,IAAI,IACjB,EAAc,GACd,EAAS,GAET,EAAM,CAEX,IAAK,KACL,QAAQ,EACR,QAAQ,EAGR,IAAI,GAEC,IAAC,EACJ,OAIG,GAAgB,iBAAT,EACV,OAAO,KAAK,IAAI,CACf,GAAI,IAKN,EAAS,KACR,KAAK,MAAM,EAAK,IAChB,EAAW,IAAI,EAAK,GAAI,KAInB,IAAA,EAAQ,EAAK,GAAK,EAAW,IAAI,EAAK,IAAM,EAElD,EAAM,SAAW,GAEjB,IAAA,IAAW,KAAK,EAEf,IAAI,GAAU,IAAI,GAKlB,CAAI,GAAmB,mBAAZ,EAAK,GAAmB,CAC5B,IAAA,EAAO,EAAK,GAAG,KAAK,MACtB,GAAA,GAAY,IAAI,GAAI,CACvB,EAAM,SAAS,KAAK,KAAK,GAAG,EAAG,IAC/B,EAAM,GAAK,EACX,SAEA,EAAM,GAAK,OAGZ,EAAM,GAAK,EAAK,QAGD,IAAP,KAAA,IAER,OAAO,eAAe,KAAM,EAAG,CAC9B,IAAK,IAAM,EAAM,GACjB,IAAK,GAAS,EAAM,GAAK,EACzB,cAAc,EACd,YAAY,IAMT,IAAA,EAAY,EAAA,KACb,GAAC,EAAK,QAGV,IAAA,IAAW,KAAO,EAAK,QACtB,IAAK,KAAK,EAAE,GACX,MAAM,IAAI,eAAe,EAAK,sBAAsB,OANrC,aAYT,KAAA,UACJ,EAAK,KACR,EAAK,IAAI,KAAK,MAEX,EAAK,MACR,GAAO,IAAM,EAAK,KAAK,KAAK,OAE7B,KAEI,EAAK,SACR,EAAM,SAAS,KAAK,KAAK,GAAG,MAAO,KAClC,QAOJ,MAAM,GACD,GAAA,EAAW,IAAI,GAAK,CACjB,IAAA,EAAO,EAAW,IAAI,GAC5B,EAAK,SAAS,QAAQ,GAAO,KAC7B,IAAA,IAAW,KAAK,SACR,EAAK,GAGd,EAAW,OAAO,IAGnB,EAAE,GACM,EAAW,IAAI,GAGvB,SACQ,OAAa,OAAb,KAAK,KAGb,GAAG,GACE,GAAQ,MAAR,EACH,OAAO,EAEJ,GAAA,MAAM,QAAQ,GAAM,CACvB,IAAA,IAAW,KAAK,EACf,IAAK,KAAK,EAAE,GACX,OAAO,EAGF,OAAA,EAEP,OAAsB,MAAf,KAAK,EAAE,IAIhB,GAAA,CAAG,EAAY,KACT,EAAO,KACX,EAAO,GAAM,IAAI,IAEX,EAAO,GAAI,MAAM,IAGzB,UAAU,GACF,OAAA,KAAK,YAAY,IAGzB,QAAQ,KAAe,GAEtB,EAAW,IACV,EAAO,GAAI,QAAQ,GAAQ,EAAG,KAAK,QAAS,IAGvC,IAAA,EAAU,EAAK,UAAU,GAE/B,GACC,EAAQ,QAAQ,IACN,KAAA,GAAG,EAAE,MACb,EAAE,GAAG,QAAS,MAOlB,WAEM,KAAK,WAIV,KAAK,QAAQ,WACb,EAAK,KAAK,OAAO,KAAK,KACtB,KAAK,IAAM,OAIZ,UACO,IAAA,EAAO,GACb,IAAA,IAAY,EAAK,KAAS,EACzB,EAAK,GAAO,EAAK,QAAU,EAAK,UAAY,KAEtC,OAAA,GAGR,SAAS,GACD,OAAA,KAAK,GAAG,SAAU,IAG1B,OAAO,GACC,OAAA,KAAK,GAAG,OAAQ,IAGxB,UAAU,GACF,OAAA,KAAK,GAAG,UAAW,KAK5B,IAAA,IAAW,KAAQ,EAClB,EAAI,IAAI,GAGF,OAAA,EAIR,SAAA,GAAgB,GACT,IAAA,EAAM,GAAK,GACjB,OAAA,EAAI,IAAM,EAAK,KAAK,KAAK,GACzB,EAAI,QAAQ,OACZ,GAAO,IAAM,EAAI,QAAQ,SAClB,EAGR,SAAA,GAAe,GACV,GAAC,EAAI,SAGT,OAAA,EAAK,KAAK,OAAO,EAAI,KACrB,EAAI,IAAM,EAAK,KAAK,KAAK,GAClB,EAIR,SAAA,GAAY,EAAe,EAAU,GAC/B,OAAA,EAAK,UAAU,KACnB,EAAK,UAAU,GAAS,IAAI,IAEtB,EAAK,UAAU,GAAO,MAAM,CAClC,IAAK,EACL,GAAI,IAMN,SAAA,GAAkB,EAAyB,GACtC,GAAe,mBAAR,QAA6B,IAAP,EAAkB,CAC5C,IAAA,EAAM,GAAI,CAAC,CAAE,OAAQ,KACpB,MAAA,IAAM,GAAQ,GAAA,GACI,iBAAR,EACjB,OAAO,GAAG,SAAU,EAAK,GAK3B,SAAA,GAAgB,EAAyB,GACpC,GAAe,mBAAR,QAA6B,IAAP,EAAkB,CAC5C,IAAA,EAAM,GAAI,CAAC,CAAE,KAAM,KAClB,MAAA,IAAM,GAAQ,GAAA,GACI,iBAAR,EACjB,OAAO,GAAG,OAAQ,EAAK,GAKzB,SAAA,GACC,EACA,EACA,GAEM,IAAA,EAAK,GAAG,UAAW,EAAI,CAAC,EAAG,EAAG,IAAQ,EAAE,GAAG,IAAO,EAAE,EAAG,EAAG,IAC1D,EAAK,GAAG,UAAW,EAAI,CAAC,EAAG,EAAG,IAAQ,EAAE,GAAG,IAAO,EAAE,EAAG,EAAG,IAC1D,EAAK,GAAS,EAAI,IACnB,IAAC,EAAG,KACP,MAAM,IAAI,MAAM,4DAEjB,EAAG,iBAAiB,EAAI,IACvB,EAAE,EAAI,OAGD,MAAA,IAAM,CAAC,EAAI,EAAI,GAAI,QAAQ,GAAO,KAI1C,SAAA,GAAiB,EAAyB,GACrC,MAAe,mBAAR,EACH,GAAa,GAEb,GAAS,EAAK,IAChB,IAAC,EAAE,KAAM,MAAM,IAAI,MAAM,0DAC7B,EAAM,aACL,EAAG,KAOP,SAAA,GAAiB,EAAW,EAAiC,GACrD,OAAA,GAAS,EAAG,IACd,IAAC,EAAE,KAAM,MAAM,IAAI,MAAM,0DAC7B,EAAM,aACL,EAAQ,GAEJ,GACH,EAAW,KAOf,SAAA,GAAc,EAAW,GACjB,OAAA,IAAI,QAAQ,IAClB,EAAK,OAAO,KAAK,CAChB,KAAM,EACN,OAAQ,KACP,GACC,IAED,SAOJ,SAAA,GAAc,EAAW,GAEpB,IAAA,GAAU,EAER,EAAO,EAAA,KACZ,IAGA,IACA,GAAK,EAAG,KALI,QAQb,OAAA,IAEO,IAAM,GAAU,EAKxB,SAAA,GAAmB,EAAgB,GAC9B,GAAA,MAAM,QAAQ,GAAI,CACf,IAAA,EAAa,EAAE,IAAI,GAAS,GAAU,EAAK,IAC1C,MAAA,IAAM,EAAW,QAAQ,GAAQ,KAEjC,OAAA,EAAK,GAAG,QAAS,IAAM,EAAI,UAAU,IAAM,KAIpD,SAAA,GAAoB,EAA+B,GAC9C,GAAA,MAAM,QAAQ,GAAI,CACf,IAAA,EAAa,EAAE,IAAI,GAAS,GAAW,EAAK,IAC3C,MAAA,IAAM,EAAW,QAAQ,GAAQ,KAClC,MAAiB,mBAAN,EACV,EAAK,GAAG,QAAS,IAAM,EAAI,gBAAkB,KAE7C,EAAK,GAAG,QAAS,IAAM,EAAI,aAAa,IAAM,KAIvD,SAAA,GAA0B,EAA+B,GACpD,GAAA,MAAM,QAAQ,GAAI,CACf,IAAA,EAAa,EAAE,IAAI,GAAS,GAAiB,EAAK,IACjD,MAAA,IAAM,EAAW,QAAQ,GAAQ,KAClC,MAAiB,mBAAN,EACV,EAAK,GAAG,QAAS,IAAM,EAAI,gBAAkB,KAE7C,EAAK,GAAG,QAAS,IAAM,EAAI,mBAAmB,IAAM,KAI7D,SAAA,GAAsB,EAA+B,GAChD,GAAA,MAAM,QAAQ,GAAI,CACf,IAAA,EAAa,EAAE,IAAI,GAAS,GAAa,EAAK,IAC7C,MAAA,IAAM,EAAW,QAAQ,GAAQ,KAClC,MAAiB,mBAAN,EACV,EAAK,GAAG,QAAS,IAAM,EAAI,iBAAmB,KAE9C,EAAK,GAAG,QAAS,IAAM,EAAI,cAAc,IAAM,KAIxD,SAAA,GACC,EACA,GAEI,MAAa,mBAAN,EACH,EAAK,GAAG,QAAS,IAAM,EAAI,eAAiB,EAAE,MAE9C,EAAK,GAAG,QAAS,IAAM,EAAI,YAAY,IAAM,EAAO,MAI7D,SAAA,GACC,EACA,GAEI,MAAa,mBAAN,EACH,EAAK,GAAG,QAAS,IAAM,EAAI,kBAAoB,EAAE,MAEjD,EAAK,GAAG,QAAS,IAAM,EAAI,eAAe,IAAM,EAAO,MAIhE,SAAA,GACC,EACA,GAEI,MAAa,mBAAN,EACH,EAAK,GAAG,QAAS,IAAM,EAAI,mBAAqB,EAAE,MAElD,EAAK,GAAG,QAAS,IAAM,EAAI,gBAAgB,IAAM,EAAO,MAIjE,SAAA,GAAqB,GACb,OAAA,EAAK,GAAG,QAAS,IAAM,EAAI,gBAAkB,EAAE,IAAY,EAAI,kBAGvE,SAAA,GAAqB,GACb,OAAA,EAAK,GAAG,QAAS,IAAM,EAAI,eAAe,QAAQ,GAAQ,EAAE,KAsBpE,SAAA,GAAsB,GACd,OAAA,EAAK,GAAG,eAAgB,GAGhC,SAAA,GAAqB,GACb,OAAA,EAAK,GAAG,cAAe,GAG/B,SAAA,GAAoB,GACZ,OAAA,EAAK,GAAG,aAAc,GAG9B,SAAA,KAEC,GAAW,KAAM,KAChB,GAAM,SAAW,GAAM,UAGxB,GAAW,KAAM,KAChB,GAAM,aAGP,GAAW,KAAM,KAChB,GAAM,QAAU,GAAM,SAGvB,GAAW,KAAM,KAChB,GAAM,UAAY,GAAQ,EAAM,GAAM,UAAY,GAAK,EAAG,GAAI,KAG/D,GAAW,KAAM,KAChB,GAAM,UAAY,GAAQ,EAAM,GAAM,UAAY,GAAK,EAAG,GAAI,KAG/D,GAAW,MAAO,KACjB,GAAM,cAGP,GAAW,KAAM,KAChB,GAAY,EAAI,aAAc,gBAG/B,GAAW,KAAM,KAChB,GAAU,cACT,GAAM,aAAa,WACnB,GAAM,aAAe,MAErB,GAAM,aAAe,OAMxB,SAAA,KACC,GAAW,IAAK,EAAM,MAKvB,SAAA,GAAa,GAEN,IAAA,EAAO,IAAI,EAAK,KAAK,UAAU,KAAK,CAAC,EAAI,KAr5BhD,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAu5BQ,IAAA,EAAK,OAAA,EAAA,EAAK,OAAO,OAAA,EAAA,EAAG,OAAH,EAAY,EAAK,WAA7B,EAA0C,EAC/C,EAAK,OAAA,EAAA,EAAK,OAAO,OAAA,EAAA,EAAG,OAAH,EAAY,EAAK,WAA7B,EAA0C,EAGjD,OAAA,GAAM,GACD,OAAA,EAAA,EAAG,GAAH,EAAQ,IAAM,OAAA,EAAA,EAAG,GAAH,EAAQ,GAEvB,EAAK,IAKT,OAAA,EAGG,EAAK,OAAO,GAAO,EAAI,GAAG,IAF1B,EAQT,SAAA,GAAkB,EAAwC,GACrD,MAAa,mBAAN,QAA0B,IAAN,EACvB,KAAM,QAAQ,GAAS,EAAI,UAAY,EAAE,IACzB,iBAAN,GAAkB,MAAM,QAAQ,GAC1C,GAAI,GAAG,QAAQ,GAAS,EAAI,UAAY,EAAE,SADvC,EAMZ,SAAA,GAAmB,EAAwC,GACtD,MAAa,mBAAN,QAA0B,IAAN,EACvB,KAAM,UAAU,QAAQ,GAAS,EAAI,UAAY,EAAE,IACnC,iBAAN,GAAkB,MAAM,QAAQ,GAC1C,GAAI,GAAG,UAAU,QAAQ,GAAS,EAAI,UAAY,EAAE,SADjD,EAMZ,SAAA,GAAiB,GAChB,EAAI,UAIL,SAAA,GAAoB,GACnB,GAAM,EAAG,IAIV,SAAA,GAAiB,GACZ,YAAM,IAAN,IACH,EAAK,QAAU,GAET,EAAK,QAGb,SAAA,GAAmB,EAAW,IAI9B,SAAA,GAAuB,EAAsB,GACrC,MAAA,CACN,OAAQ,EACR,aAAc,EACd,MAAO,IAAM,EAAI,EAAI,EACrB,SAAU,IAAM,EAAI,EAAI,EACxB,OAAQ,IAAM,EAAI,EAAI,EACtB,QAAS,IAAM,EAAI,EAAI,GAKzB,SAAA,MAAgB,GAER,MAAA,CAEN,GAAI,MACJ,IAAK,KAAQ,GAGb,UAAU,GAv+BZ,IAAA,EAy+BS,IAAA,EAAI,KAAQ,GACd,EAAK,EAAE,EACP,EAAK,EAAE,EACP,EAAM,KAEN,GAAA,KAAK,OAA8B,UAArB,OAAA,EAAA,KAAK,WAAL,EAAA,EAAW,OAAkB,CAE1C,IAAA,EAAK,KAAK,YAGd,GAAM,IAn/BV,IAAA,EAw/BM,IAAC,KAAK,UACH,IAAU,OACT,EAAM,OACe,UAAtB,OAAA,EAAA,EAAM,WAAN,EAAA,EAAY,OAEf,OAGK,IAAA,EAAK,EAAM,YACb,EAAK,GAAS,EAAI,GAGlB,GAAA,EAAc,EAAI,EAAK,IAAK,CAE3B,IAAA,EAAO,KAAK,IACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,IAGV,EAAO,MACJ,OAAA,GACF,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,EAAM,GACrC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,GAAM,EAAM,GACtC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,EAAG,GAClC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,GAAI,KAL7B,GASR,KAAA,IAAM,KAAK,IAAI,IAAI,GAGxB,EAAK,KAAK,YACV,EAAK,GAAS,EAAI,GAIb,IAAA,EAAM,CAAE,GAAI,EAAK,GAAI,GAAI,EAAK,EAAI,IACpC,EAAO,EACL,EAAK,EAAG,GACR,EAAK,EAAK,EAAG,GAAG,EAAG,EAAG,GAAG,GACzB,EAAK,EAAG,GACR,EAAK,EAAK,EAAG,GAAG,EAAG,EAAG,GAAG,GAC3B,EAAU,EACR,EAAQ,CACb,MAAS,CAAE,GAAI,EAAI,GAAI,GACvB,IAAO,CAAE,GAAI,EAAI,GAAI,GACrB,KAAQ,CAAE,GAAI,EAAI,GAAI,GACtB,OAAU,CAAE,GAAI,EAAI,GAAI,IAGzB,IAAA,IAAW,KAAK,EAAO,CAChB,IAAA,EAAO,EAAM,GAGjB,GAAO,IAAP,GAA0B,IAAd,EAAK,GAAG,GAAyB,IAAd,EAAK,GAAG,GAEhC,IAAP,GAA0B,IAAd,EAAK,GAAG,GAAyB,IAAd,EAAK,GAAG,EACvC,CACD,EAAO,EACP,MAEK,IAAA,EAAI,EAAc,EAAK,GACpB,MAAT,IACC,IACI,EAAI,IACP,EAAO,IAOT,GAAA,EAAO,IACO,IAAT,GAAyB,GAAX,GAAiB,EAAc,EAAI,EAAK,EAAI,KAC9D,CACK,IAAA,EAAM,GAAM,GAAM,EAAI,IAAQ,GAAM,EAAI,IAC9C,GAAM,EACN,GAAM,EACN,EAAM,GAAc,EAAO,MAO9B,OAAA,KAAK,IAAI,GAAK,EACd,KAAK,IAAI,GAAK,EAEV,IACH,KAAK,QAAQ,UAAW,EAAI,OAAQ,GACpC,EAAI,OAAO,QAAQ,UAAW,KAAM,GAAc,KAAM,EAAI,aAAa,OAAM,MAGzE,GAKR,QAAQ,GACA,OAAA,KAAK,OAAO,KAAQ,GAAM,MAAM,OAIxC,UAAU,GACL,GAAmB,iBAAZ,EAAK,IAAsC,iBAAZ,EAAK,GAC9C,OAAO,KAAK,OAAO,EAAK,EAAK,GAAI,EAAK,IAAK,EAAK,IAE3C,IAAA,EAAO,EAAK,GACZ,EAAQ,EAAK,GACf,QAAU,IAAV,EAEH,YADK,KAAA,IAAM,EAAK,IAGX,IAAA,EAAO,EAAK,IAAI,KAAK,KACvB,EAAK,OAAS,EAAQ,IACpB,KAAA,IAAM,EAAK,GAGZ,KAAA,KAAK,EAAK,OAAO,MAAM,KAI7B,YACK,OAAA,KAAK,MACD,KAAK,IAEL,GAAS,KAAK,MAIvB,UACQ,UAAI,KAAK,MAAM,KAAK,IAAI,OAAO,KAAK,MAAM,KAAK,IAAI,QAQ7D,SAAA,MAAkB,GACb,OAAgB,IAAhB,EAAK,OACD,GAAM,GAEP,CACN,GAAI,QACJ,MAAO,KAAQ,GACf,WAAW,GACL,KAAA,MAAQ,KAAQ,IAEtB,UACK,MAAsB,iBAAf,KAAK,SACL,GAAQ,KAAK,MAAO,SAEnB,GAAQ,KAAK,MAAM,EAAG,OAAO,GAAQ,KAAK,MAAM,EAAG,QAMlE,SAAA,GAAgB,GACR,MAAA,CACN,GAAI,SACJ,MAAO,MAAA,EAAA,EAAK,EACZ,UACQ,SAAG,KAAK,MAAM,KAAK,WAK7B,SAAA,MAAkB,GACV,MAAA,CACN,GAAI,QACJ,MAAO,KAAO,GACd,UACQ,OAAA,KAAK,MAAM,QAKrB,SAAA,GAAiB,EAAW,GACpB,OAAA,OAAO,EAAE,QAAQ,IAGzB,SAAA,GAAiB,GACT,MAAA,CACN,GAAI,UACJ,QAAS,MAAA,EAAA,EAAK,EACd,UACQ,SAAG,GAAQ,KAAK,QAAS,OAKnC,SAAA,GAAgB,GACX,IAAC,EACJ,MAAM,IAAI,MAAM,2BAEV,MAAA,CACN,GAAI,SACJ,OAAQ,EACR,UACK,MAAuB,iBAAhB,KAAK,OACR,KAAK,OAEL,KAAK,OAAO,QAMvB,SAAA,GAAe,GACP,MAAA,CACN,GAAI,QACJ,MAAO,EACP,UAhtCF,IAAA,EAitCU,OAAA,OAAA,EAAA,KAAK,OAAL,EAAc,EAAK,WAK7B,SAAA,GAAW,GACH,MAAA,CACN,GAAI,IACJ,EAAG,EACH,UACQ,SAAG,KAAK,MAKlB,SAAA,GAAgB,EAAc,GACtB,MAAA,CACN,GAAI,SACJ,QAAS,CAAE,OACX,OAAQ,CACP,IAAK,EACL,OAAQ,MAAA,EAAA,EAAU,EAAK,IAExB,MACC,EAAQ,WACP,KAAK,IAAM,KAAK,OAAO,IAAI,IAAI,IAAI,KAAK,OAAO,UAGjD,SACC,EAAQ,WACP,KAAK,IAAM,KAAK,OAAO,IAAI,IAAI,IAAI,KAAK,OAAO,WAMnD,SAAA,GAAc,EAA0B,GACjC,IAAA,EAAyB,iBAAd,EAAyB,EAAI,GAAa,EAAU,OAC9D,MAAA,CACN,GAAI,OACJ,QAAS,CAAE,OACX,SACM,KAAA,KAAK,EAAE,MAAM,MAKrB,SAAA,GAAiB,EAAe,GAC3B,IAAA,EAAQ,EACL,MAAA,CACN,GAAI,UACJ,QAAS,CAAE,MAAO,QAClB,SACO,IAAA,EAAa,CAClB,GAAI,EAAK,EAAG,GACZ,GAAI,EAAK,IAAS,MAEnB,GAAiB,KAAK,aAAc,GACnC,EAAQ,GAER,GAAS,MACI,GACZ,KAAK,YAOV,SAAA,GAAc,EAAmB,IAtxCjC,IAAA,EAAA,EAwxCO,IAAA,EAAY,GAEX,MAAA,CAEN,GAAI,OAEJ,MACU,KAAA,KAAK,QACb,KAAK,OAAO,KACX,EAAI,OAAO,KAAK,KAAK,WAKxB,KAAM,CACL,MAAO,OACP,OAAQ,OAAA,EAAA,EAAI,QAAJ,EAAc,EAAK,GAC3B,MAAO,EAAI,MACX,OAAQ,EAAI,OACZ,MAAO,OAAA,EAAA,EAAI,OAAJ,EAAa,EAAK,GACzB,OAAQ,EAAI,QAGb,YACQ,OAAA,EAAI,kBAAoB,KAAK,cAGrC,aACO,IAAA,EAAO,KAAK,MAAQ,IAAa,IAChC,OAAA,KAAK,SAAS,IAGtB,YAAY,GACP,IAAC,EAAM,OAAS,EAAM,SACzB,OAAO,EAID,OAAA,GAFI,KAAK,YACL,EAAM,cAIlB,WAAW,GACN,IAAC,EAAM,OAAS,EAAM,SACzB,OAAO,EAKD,OAAA,EAFI,KAAK,YACL,EAAM,cAIlB,QAAQ,GACA,OAAA,KAAK,SAAS,KACX,KAAA,aACR,OAKH,QAAQ,EAAqB,GACrB,OAAA,KAAK,SAAS,KACX,KAAA,aACR,IAEI,GACH,OAMJ,UAAU,EAAU,GACb,IAAA,EAAK,KAAK,SAAS,IAAM,KAAK,iBAAiB,EAAK,IACpD,EAAK,KAAK,GAAG,UAAW,CAAC,EAAK,IAAQ,EAAI,GAAG,IAAQ,EAAE,EAAK,IAC3D,MAAA,IAAM,CAAC,EAAI,GAAI,QAAQ,GAAO,MAGtC,UAAU,GACF,OAAA,KAAK,WAAW,IAGxB,UAAU,GACF,OAAA,KAAK,WAAW,IAGxB,YAAY,GACJ,OAAA,KAAK,aAAa,IAG1B,SAAS,GACD,OAAA,GAAc,KAAK,YAAa,IAIxC,QAAQ,GAt3CV,IAAA,EAw3CO,GAAA,IAAQ,MAKY,UAApB,OAAA,EAAA,EAAI,WAAJ,EAAA,EAAU,OACb,OAAO,KAGF,IAEA,EAAK,GAFA,KAAK,YACL,EAAI,aAGX,IAAC,EAAc,EAAI,EAAK,IAC3B,OAAO,KAGJ,IAAA,EAAO,KAAK,IACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,GACf,KAAK,IAAI,EAAG,GAAG,IAGV,EAAO,MACJ,OAAA,GACF,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,EAAM,GACrC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,GAAM,EAAM,GACtC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,EAAG,GAClC,KAAA,KAAK,IAAI,EAAG,GAAG,GAAW,OAAA,EAAK,GAAI,KAL7B,GASR,KAAA,IAAM,KAAK,IAAI,IAAI,IAKzB,aACC,GAAM,KAAK,UAIZ,iBAAiB,GAEhB,GAAM,EAAK,IAEG,OAAA,IAAQ,KAAK,UAAY,EAAU,EAAI,MAIhD,KAAK,YAAY,KACpB,KAAK,QAAQ,UAAW,EAAK,MAC7B,EAAU,EAAI,KAAO,KAKvB,IAAA,IAAW,KAAM,EAAW,CACrB,IAAA,EAAM,EAAU,GACZ,KAAA,YAAY,WACd,EAAU,KAQpB,YA77CF,IAAA,EAAA,EAAA,EAAA,EA+7CO,IAAA,EAAI,OAAA,EAAA,KAAK,KAAK,OAAV,EAAmB,KAAK,MAC5B,EAAI,OAAA,EAAA,KAAK,KAAK,QAAV,EAAoB,KAAK,OAE7B,GAAK,MAAL,GAAkB,MAAL,EAChB,MAAM,IAAI,MAAM,gCAGX,IAAA,EAAQ,EAAK,OAAA,EAAA,KAAK,OAAL,EAAc,GAAG,MAAM,KAAK,KAAK,OAEpD,GAAK,EAAM,EACX,GAAK,EAAM,EAEL,IAAA,EAAO,GAAS,KAAK,QAAU,GAC/B,GAAO,OAAA,EAAA,KAAK,KAAL,EAAY,EAAK,IAC5B,IAAI,KAAK,KAAK,QACd,IAAI,EAAK,IAAI,EAAG,GAAG,MAAM,IAAK,MAAM,EAAG,IAElC,MAAA,CACN,MAAO,OACP,GAAI,EACJ,GAAI,EAAK,EAAI,EAAI,EAAG,EAAI,EAAI,KAK9B,aACO,IAAA,EAAO,KAAK,YACd,OAAA,KAAK,MACD,EAEA,CACN,MAAO,OACP,GAAI,EAAK,UAAU,SAAS,EAAK,IACjC,GAAI,EAAK,UAAU,SAAS,EAAK,OAUtC,SAAA,GAAwB,GAChB,MAAA,CACN,IAAK,EAAI,IACT,MAAO,EAAI,MACX,MAAO,EAAI,MACX,QAAS,EAAI,QACb,MAAO,EAAI,MACX,OAAQ,EAAI,OACZ,QAAS,EAAI,QACb,OAAQ,EAAO,QAAQ,EAAI,QAC3B,QAAS,EAAI,SAcf,SAAA,GAAgB,EAAyB,EAAqB,IAlgD9D,IAAA,EAogDK,IAAA,EAAM,KACN,EAAgC,KAEpC,SAAA,EAAsB,EAAiB,EAAS,EAAY,GACrD,IAAA,EAAQ,EAAK,EAAG,GAClB,OAAA,GAAK,GACR,EAAM,EAAI,GAAK,EAAI,MAAQ,EAAE,GAC7B,EAAM,EAAI,GAAK,EAAI,OAAS,EAAE,IACxB,GACN,EAAM,EAAI,GAAK,EAAI,MAAQ,EAAE,GAC7B,EAAM,EAAI,EAAM,GACN,IACV,EAAM,EAAI,GAAK,EAAI,OAAS,EAAE,GAC9B,EAAM,EAAI,EAAM,GAEV,EAZC,OAAA,EAAA,EAAA,gBAeF,CAEN,GAAI,SAEJ,MAAO,EACP,OAAQ,EACR,MAAO,EAAI,OAAS,EACpB,KAAM,EAAI,MAAQ,EAAK,EAAG,EAAG,EAAG,GAChC,UAAW,OAAA,EAAA,EAAI,WAAJ,EAAiB,EAE5B,OAEC,KACC,EADiB,iBAAP,EACJ,EAAO,QAAQ,GAEf,GAIN,MAAM,IAAI,4BAA4B,MAGnC,IAAA,EAAI,EAAA,GAAK,EAAI,OAAO,IAExB,EAAQ,OACP,EAAI,EAAE,MAAM,EAAI,OAGX,IAAA,EAAQ,EAAa,EAAI,IAAK,EAAG,EAAI,MAAO,EAAI,QAEjD,KAAA,MAAQ,EAAI,IAAI,MAAQ,EAAE,EAAI,EAAM,EACzC,KAAK,OAAS,EAAI,IAAI,OAAS,EAAE,EAAI,EAAM,EAEvC,EAAI,MACP,KAAK,KAAK,EAAI,OAKhB,OACC,EAAW,EAAA,EAAA,GACP,GAAe,OADR,CAEV,OAAQ,EACR,MAAO,KAAK,MACZ,KAAM,KAAK,KACX,MAAO,EAAI,MACX,MAAO,EAAI,MACX,MAAO,EAAI,MACX,MAAO,EAAI,MACX,OAAQ,EAAI,WAId,SAEK,IAAC,EACJ,OAGK,IAAA,EAAO,EAAI,MAAM,EAAQ,MAE3B,GAAgB,iBAAT,EAAP,CAKA,GAAe,IAAf,EAAK,MACR,MAAM,IAAI,MAAM,iCAGjB,EAAQ,OAAS,IAAO,KAAK,UAEzB,EAAQ,OAAU,EAAI,EAAQ,QACjC,EAAQ,MAAQ,EAEhB,EAAS,KAAO,EAAK,IACpB,KAAK,QACD,KAAK,MAAQ,EAAK,KACjB,EAAQ,KACX,KAAK,MAAQ,EAAK,MAElB,KAAK,QACL,EAAQ,QACR,KAAK,WAIP,KAAK,QACD,KAAK,MAAQ,EAAK,KACjB,EAAQ,KACX,KAAK,MAAQ,EAAK,MAElB,KAAK,QACL,EAAQ,QACR,KAAK,gBAhCH,KAAA,MAAQ,GAyCf,KAAK,EAAc,EAAyB,IA7nD9C,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EA+nDO,IAAC,EAIJ,YAHA,GAAO,KACD,KAAA,KAAK,KAKN,IAAA,EAAO,EAAI,MAAM,GAEnB,GAAQ,MAAR,EACH,MAAM,IAAI,yBAAyB,KAGpC,GACC,KAAK,OAGN,EAAU,CACT,KAAM,EACN,MAAO,EACP,KAAM,OAAA,EAAA,OAAA,EAAA,EAAI,MAAJ,EAAY,EAAK,OAAjB,EACN,SAAU,OAAA,EAAA,OAAA,EAAA,EAAI,UAAJ,EAAgB,EAAK,WAArB,EACV,MAAO,OAAA,EAAA,OAAA,EAAA,EAAI,OAAJ,EAAa,EAAK,OAAlB,EAA2B,GAClC,MAAO,OAAA,EAAA,EAAI,OAAJ,EAAc,QAIrB,KAAK,MADc,iBAAT,EACG,EAEA,EAAK,KAInB,KAAK,QAAQ,WAAY,GACzB,KAAK,QAAQ,YAAa,IAI3B,OACK,IAAC,EACJ,OAEK,IAAA,EAAW,EAAQ,KACzB,EAAU,KACV,KAAK,QAAQ,UAAW,IAGzB,UAAA,IACM,EAGE,EAAI,OAAO,OAFV,EAKT,QAAA,IACQ,MAAA,OAAA,EAAA,EAAS,KAGjB,MAAM,GACL,EAAI,MAAQ,GAGb,MAAM,GACL,EAAI,MAAQ,GAGb,UAAU,EAAc,GAChB,OAAA,KAAK,GAAG,UAAW,IACzB,IAAa,GACZ,OAKH,YAAY,EAAc,GAClB,OAAA,KAAK,GAAG,YAAa,IAC3B,IAAa,GACZ,OAKH,UACK,IAAA,EAAM,GACN,OACH,GADiB,iBAAP,EACH,KAAK,UAAU,GAEf,WASX,SAAA,GAAc,EAAW,EAAmB,IAE3C,SAAA,IAjuDD,IAAA,EAAA,EAAA,EAAA,EAmuDQ,IAAA,EAAO,OAAA,EAAA,OAAA,EAAA,KAAK,MAAL,EAAa,EAAK,MAAlB,EAA0B,EACjC,EAAO,EAAO,MAAM,GAEtB,IAAC,EACJ,MAAM,IAAI,0BAA0B,MAG/B,IAAA,EAAQ,EAAI,QAAQ,EAAA,EAAA,GACtB,GAAe,OADO,CAEzB,KAAM,KAAK,KAAO,GAClB,KAAM,KAAK,SACX,KAAM,EACN,MAAO,EAAI,MACX,UAAW,EAAI,aAGhB,OAAA,KAAK,MAAQ,EAAM,QAAS,OAAA,EAAA,KAAK,YAAL,EAAA,EAAY,IAAK,GAC7C,KAAK,OAAS,EAAM,SAAU,OAAA,EAAA,KAAK,YAAL,EAAA,EAAY,IAAK,GAExC,EArBC,OAAA,EAAA,EAAA,UAyBF,CAEN,GAAI,OACJ,KAAM,EACN,SAAU,EAAI,KACd,KAAM,EAAI,KACV,MAAO,EACP,OAAQ,EAER,OACC,EAAO,KAAK,OAGb,OACC,EAAI,YAAY,EAAO,KAAK,SAO/B,SAAA,GAAc,EAAW,EAAW,EAAmB,IAC/C,MAAA,CACN,GAAI,OACJ,MAAO,EACP,OAAQ,EACR,OAAQ,EAAI,QAAU,EACtB,OACC,EAAI,SAAS,EAAA,EAAA,GACT,GAAe,OADN,CAEZ,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,OAAQ,KAAK,WAGf,UACQ,SAAG,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,KAAK,YAKtD,SAAA,GAAgB,EAAW,GACnB,MAAA,CACN,GAAI,OACJ,MAAO,EACP,OAAQ,EACR,OACC,EAAI,WAAW,EAAA,EAAA,GACX,GAAe,OADJ,CAEd,MAAO,KAAK,MACZ,OAAQ,KAAK,WAGf,UACQ,SAAG,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,KAAK,YAKtD,SAAA,GAAgB,GACR,MAAA,CACN,GAAI,SACJ,OAAQ,EACR,OACC,EAAI,WAAW,EAAA,EAAA,GACX,GAAe,OADJ,CAEd,OAAQ,KAAK,WAGf,UACQ,SAAG,KAAK,KAAK,KAAK,YAK5B,SAAA,GAAiB,EAAgB,EAAG,EAAe,EAAI,EAAG,EAAG,IACrD,MAAA,CACN,GAAI,UACJ,QAAS,CACR,MAAA,EACA,MAAA,IAKH,SAAA,GAAe,EAAY,GACpB,IAAA,EAAwB,IAAI,GAC9B,OAAA,GAAK,GACR,EAAO,MAAM,CACZ,KAAM,EACN,OAAQ,IAGH,CACN,GAAI,QACJ,KAAA,CAAK,EAAW,IACR,EAAO,MAAM,CACnB,KAAM,EACN,OAAQ,IAGV,SACC,EAAO,QAAQ,CAAC,EAAO,KACtB,EAAM,MAAQ,IACV,EAAM,MAAQ,IACjB,EAAM,OAAO,KAAK,MAClB,EAAO,OAAO,QAl8CV,EAAA,GAAA,QA6MA,EAAA,GAAA,OAQA,EAAA,GAAA,SAUA,EAAA,GAAA,MAYA,EAAA,GAAA,YAUA,EAAA,GAAA,UAUA,EAAA,GAAA,aAmBA,EAAA,GAAA,WAcA,EAAA,GAAA,WAcA,EAAA,GAAA,QAeA,EAAA,GAAA,QAmBA,EAAA,GAAA,aASA,EAAA,GAAA,cAWA,EAAA,GAAA,oBAWA,EAAA,GAAA,gBAWA,EAAA,GAAA,eAWA,EAAA,GAAA,gBAWA,EAAA,GAAA,kBAWA,EAAA,GAAA,eAIA,EAAA,GAAA,eAKT,EAAI,OAAO,iBAAiB,aAAc,IACxC,IAAG,EAAE,gBAAgB,QAAQ,IAC7B,EAAK,QAAQ,eAAgB,EAAE,WAAY,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,YAItF,EAAI,OAAO,iBAAiB,YAAa,IACvC,IAAG,EAAE,gBAAgB,QAAQ,IAC7B,EAAK,QAAQ,cAAe,EAAE,WAAY,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,YAIrF,EAAI,OAAO,iBAAiB,YAAa,IACvC,IAAG,EAAE,gBAAgB,QAAQ,IAC7B,EAAK,QAAQ,aAAc,EAAE,WAAY,EAAK,EAAE,QAAS,EAAE,SAAS,MAAM,EAAI,EAAI,YAI3E,EAAA,GAAA,gBAIA,EAAA,GAAA,eAIA,EAAA,GAAA,cAIA,EAAA,GAAA,kBAyCA,EAAA,GAAA,iBAMA,EAAA,GAAA,OAyBA,EAAA,GAAA,SASA,EAAA,GAAA,UASA,EAAA,GAAA,WAKA,EAAA,GAAA,cAKA,EAAA,GAAA,WAOA,EAAA,GAAA,aAIA,EAAA,GAAA,iBAYA,EAAA,GAAA,OAsKA,EAAA,GAAA,SAoBA,EAAA,GAAA,UAUA,EAAA,GAAA,SAUA,EAAA,GAAA,WAIA,EAAA,GAAA,WAUA,EAAA,GAAA,UAiBA,EAAA,GAAA,SAUA,EAAA,GAAA,KAUA,EAAA,GAAA,UAqBA,EAAA,GAAA,QAWA,EAAA,GAAA,WAsBA,EAAA,GAAA,QAoNA,EAAA,GAAA,kBAwBA,EAAA,GAAA,UA6NA,EAAA,GAAA,QAgDA,EAAA,GAAA,QAoBA,EAAA,GAAA,UAkBA,EAAA,GAAA,UAgBA,EAAA,GAAA,WAUA,EAAA,GAAA,SA6BH,IAAA,GAAiB,IACjB,GAAU,MAGhB,SAAA,GAAc,EAAmB,IAh3DjC,IAAA,EAAA,EAAA,EAk3DK,IAAA,EAAO,EACP,EAA8B,KAC9B,EAAkB,KAClB,GAAY,EAET,MAAA,CAEN,GAAI,OACJ,QAAS,CAAE,MAAO,QAClB,UAAW,OAAA,EAAA,EAAI,WAAJ,EAAiB,GAC5B,OAAQ,OAAA,EAAA,EAAI,QAAJ,EAAc,EACtB,MAAO,OAAA,EAAA,EAAI,QAAJ,EAEP,SA/3DF,IAAA,EAi4DO,IAAA,GAAW,EAGX,GAAA,EAAa,CAEV,IAAA,EAAK,KAAK,YACV,EAAK,EAAY,YACjB,EAAK,EAAG,GAAG,EACX,EAAK,EAAG,GAAG,EACX,EAAK,EAAG,GAAG,EACX,EAAK,EAAG,GAAG,EACX,EAAK,EAAG,GAAG,EACX,EAAK,EAAG,GAAG,GAGf,EAAY,UACV,IAAO,GACP,EAAK,GACL,EAAK,GAER,KAAK,QAAQ,OAAQ,GACrB,EAAc,KACd,EAAkB,KAClB,GAAW,GAEP,GAAmB,EAAY,MAGlC,KAAK,IAAM,KAAK,IAAI,IAAI,EAAY,IAAI,IAAI,IAC5C,EAAkB,EAAY,IAAI,SAKjC,IAAC,EAAa,CAEX,IAAA,EAAM,KAAK,KAAK,EAAG,GAGrB,GAAA,EACH,GAAI,EAAI,WAAY,CACnB,EAAc,EAAI,OAElB,EAAO,EACH,EAAY,MACf,EAAkB,EAAY,IAAI,SAE9B,IACJ,KAAK,QAAQ,SAAU,GACvB,GAAY,QAEP,EAAQ,UACd,EAAO,EACP,KAAK,QAAQ,WAAY,EAAI,SAI/B,GAAQ,KAAY,KAAK,OAAS,IAClC,EAAO,KAAK,IAAI,EAAM,OAAA,EAAA,EAAI,QAAJ,EAAc,MAMtC,YAAA,IACQ,EAGR,WAAA,IACwB,OAAhB,EAGR,WACQ,OAAA,KAAK,cAGb,UAAA,IACQ,EAAO,EAGf,UACQ,OAAA,KAAK,aAGb,KAAK,GACJ,EAAc,KACd,EAAkB,KAClB,GAAQ,IAAU,KAAK,WAGxB,WAAW,GACD,KAAA,aACR,KAAK,KAAK,GACA,IACV,GAAY,EACZ,KAAK,KAAK,GACV,KAAK,QAAQ,gBAIf,SAAS,GACD,OAAA,KAAK,GAAG,SAAU,IAG1B,OAAO,GACC,OAAA,KAAK,GAAG,OAAQ,IAGxB,WAAW,GACH,OAAA,KAAK,GAAG,WAAY,IAG5B,aAAa,GACL,OAAA,KAAK,GAAG,aAAc,KAOhC,SAAA,GAAgB,EAAY,EAAmB,IAC/B,EAAO,QAAQ,GACvB,MAAA,CACN,GAAI,SACJ,OAAQ,EACR,QAAS,GAIX,SAAA,KACQ,MAAA,CACN,GAAI,QACJ,QAAS,CAAE,QACX,OAAO,GAIT,SAAA,KACQ,MAAA,CACN,GAAI,QACJ,OAAO,GAIT,SAAA,KACQ,MAAA,CACN,GAAI,OACJ,MAAM,GAIR,SAAA,GAAgB,GACX,GAAM,MAAN,EACH,MAAM,IAAI,MAAM,8CAEV,MAAA,CACN,GAAI,SACJ,KAAK,EAAY,GACX,KAAA,MAAM,EAAK,GAChB,KAAK,QAAQ,SAEd,KAAK,EAAY,GACX,KAAA,MAAM,EAAK,GAChB,KAAK,QAAQ,SAEd,GAAA,IACQ,EAER,MAAM,IACL,EAAK,IACK,GACT,KAAK,QAAQ,UAGf,OAAO,GACC,OAAA,KAAK,GAAG,OAAQ,IAExB,OAAO,GACC,OAAA,KAAK,GAAG,OAAQ,IAExB,QAAQ,GACA,OAAA,KAAK,GAAG,QAAS,IAEzB,QAAA,OACW,KAKb,SAAA,GAAkB,EAAc,EAAuB,IA9jEvD,IAAA,EA+jEK,GAAQ,MAAR,EACH,MAAM,IAAI,MAAM,4BAEb,IAAA,EAAQ,EACN,EAAO,OAAA,EAAA,EAAI,MAAJ,EAAY,EACnB,EAAY,KAAK,IAAK,EAAO,EAAO,GACnC,MAAA,CACN,GAAI,WACJ,UACC,GAAS,MAEI,IACZ,KAAK,QAAU,EAAI,EAAO,EAAW,EAAM,EAAG,IAE3C,GAAS,GACZ,KAAK,YAMT,SAAA,GAAe,EAAmB,GAE7B,IAAC,EACJ,MAAM,IAAI,MAAM,qCAGX,IAAA,EAAS,GAEf,SAAA,EAAuB,GACtB,EAAY,KACX,EAAO,GAAS,CACf,MAAO,GACP,MAAO,GACP,OAAQ,GACR,KAAM,KAKT,SAAA,EAAY,EAAO,EAAO,GACzB,EAAc,GACd,EAAO,GAAO,GAAO,KAAK,GAG3B,SAAA,EAAiB,EAAO,KAAU,GACjC,EAAc,GACd,EAAO,GAAO,GAAO,QAAQ,GAAY,KAAU,IAF3C,OAhBA,EAAA,EAAA,iBAWA,EAAA,EAAA,MAKA,EAAA,EAAA,WAKF,CACN,GAAI,QACJ,MAAO,EACP,WAAW,KAAkB,GACxB,GAAA,IAAc,EAAU,SAAS,GACpC,MAAM,IAAI,0BAA0B,KAErC,EAAQ,QAAS,KAAK,SAAU,GAChC,KAAK,MAAQ,EACb,EAAQ,QAAS,KAAK,SAAU,IAEjC,aAAa,EAAe,GAC3B,EAAG,QAAS,EAAO,IAEpB,cAAc,EAAe,GAC5B,EAAG,SAAU,EAAO,IAErB,YAAY,EAAe,GAC1B,EAAG,OAAQ,EAAO,IAEnB,aAAa,EAAe,GAC3B,EAAG,QAAS,EAAO,IAEpB,SACC,EAAQ,SAAU,KAAK,QAExB,OACC,EAAQ,OAAQ,KAAK,SA5Rf,EAAA,GAAA,QAyIA,EAAA,GAAA,UASA,EAAA,GAAA,SAQA,EAAA,GAAA,SAOA,EAAA,GAAA,QAOA,EAAA,GAAA,UAsCA,EAAA,GAAA,YAsBA,EAAA,GAAA,SA8DH,IAAA,GAAe,CACpB,SAAS,EACT,UAAW,EACX,SAAS,EACT,IAAK,EAAI,IACT,SAAA,IACQ,EAAK,KAAK,KAElB,UAAW,GACX,UAAW,EAAI,UACf,SAAU,EAAO,MACjB,IAAK,GAAS,EAAO,SAAS,EAAI,OAAO,QAAQ,OAAO,KACxD,MAAO,GAAS,EAAO,UAAU,EAAI,OAAO,QAAQ,OAAO,KAC3D,aAAc,KACV,aACI,OAAA,EAAK,QAET,WAAO,GACV,EAAK,OAAS,EACd,EACC,EAAM,IAAI,UAEV,EAAM,IAAI,WAKb,SAAA,GAAgB,GACf,EAAS,OACR,IAEA,EAAK,GAAG,OAAQ,GAIlB,SAAA,GAAe,EAAa,GAC3B,EAAK,OAAO,GAAM,EAGnB,SAAA,GAAY,KAAgB,GAEvB,IAAC,EAAK,OAAO,GAChB,MAAM,IAAI,0BAA0B,KAG/B,IAAA,EAAS,EAAK,GAAG,cAAe,KAErC,EAAK,OAAS,GAEd,EAAK,UAAY,CAChB,IAAK,IAAI,GACT,OAAQ,IAAI,GACZ,KAAM,IAAI,GACV,QAAS,IAAI,IAGd,EAAK,KAAK,QAAQ,IACjB,EAAS,MACR,GAAQ,KAIV,EAAK,OAAS,IAAI,GAGlB,EAAK,IAAM,CACV,IAAK,KACL,MAAO,EAAK,EAAG,GACf,MAAO,EACP,MAAO,GAGR,EAAK,YAAc,EAAI,WACvB,EAAK,UAAY,IAEjB,EAAK,OAAS,GACd,EAAK,SAAW,KAChB,EAAK,QAAU,EAEf,EAAK,OAAO,MAAO,IAEA,IAAf,EAAK,OACR,KAGG,EAAK,MACR,KAGD,MAMF,SAAA,GAAoB,EAAa,GAC5B,IACI,OAAA,KAAK,MAAM,OAAO,aAAa,IAAA,MAC/B,GACH,OAAA,GACH,GAAQ,EAAK,GACN,GAEA,MAKV,SAAA,GAAiB,EAAa,GAC7B,OAAO,aAAa,GAAO,KAAK,UAAU,GAG3C,SAAA,GAAiB,GACV,IAAA,EAAQ,EAAO,IACrB,IAAA,IAAW,KAAK,EAEf,GAAI,GAAK,EAAM,IACK,IAAhB,EAAK,SAER,OAAO,GAAK,EAAM,IAGb,OAAA,GAGR,SAAA,KACQ,OAAA,EAAK,IAAU,EAAG,IAAW,GAGrC,SAAA,GAAc,EAAc,GAEpB,MAAA,CAEN,GAAI,OACJ,QAAS,EAAE,QAEX,cAAc,GACP,IAAA,EAAI,KAAQ,GACb,KAAA,QAAU,EAAE,QACjB,KAAK,IAAM,EACV,EAAM,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAM,YAC1C,EAAM,SAAS,EAAI,KAAK,QAAQ,EAAI,EAAM,eAI5C,WACM,KAAA,WAAW,KAAK,QAAQ,IAAI,GAAK,EAAI,MAG3C,YACM,KAAA,WAAW,KAAK,QAAQ,IAAI,EAAK,EAAG,MAG1C,SACM,KAAA,WAAW,KAAK,QAAQ,IAAI,EAAK,GAAG,MAG1C,WACM,KAAA,WAAW,KAAK,QAAQ,IAAI,EAAK,EAAG,OAO5C,SAAA,GAAkB,EAAe,GAE5B,IAAC,EAAI,QAAU,EAAI,OACtB,MAAM,IAAI,MAAM,2CAGX,IAAA,EAAkB,GAClB,EAAS,EAAK,EAAI,KAAO,EAAK,IAChC,EAAU,EAER,EAAQ,CAEb,OAAA,IACQ,EAAO,QAGf,UAAA,IACQ,EAAI,MAGZ,WAAA,IACQ,EAAI,OAGZ,UAAU,GACH,IAAA,EAAI,KAAQ,GACX,OAAA,EACN,EAAO,EAAI,EAAE,EAAI,EAAI,MACrB,EAAO,EAAI,EAAE,EAAI,EAAI,SAIvB,MAAM,KAAgB,GAEf,IAAA,EAAI,KAAQ,GAEZ,EAAS,MACV,GAAA,EAAI,GAAM,CACT,GAAoB,mBAAb,EAAI,GACd,MAAM,IAAI,MAAM,kEAEV,OAAA,EAAI,GAAK,GAAA,GACN,EAAI,IACd,OAAO,EAAI,IAAI,EAAK,IAPP,GAWX,IAAC,EACJ,OAGK,IAAA,EAAU,EACf,EAAO,EAAI,EAAE,EAAI,EAAI,MACrB,EAAO,EAAI,EAAE,EAAI,EAAI,QAGtB,IAAA,IAAW,KAAQ,EAClB,GAAgB,QAAZ,EAAK,GAAc,CACtB,EAAQ,GAAK,EAAK,IAAI,EACtB,EAAQ,GAAK,EAAK,IAAI,EACtB,MAIF,EAAM,KAAK,GAAI,IACf,EAAM,KAAK,GAAK,KAAM,IAEhB,IAAA,EAAM,GAAI,GAEhB,OAAA,EAAK,KAAK,GAEH,GAIR,MAAA,IACQ,EAAU,EAAI,MAGtB,OAAA,IACQ,EAAI,OAAS,EAAI,OAGzB,UACC,IAAA,IAAW,KAAO,EACjB,GAAQ,KAMX,OAAA,EAAI,QAAQ,CAAC,EAAK,KAEX,IAAA,EAAO,EAAI,MAAM,IAEvB,EAAU,KAAK,IAAI,EAAK,OAAQ,GAEhC,EAAK,QAAQ,CAAC,EAAK,KAClB,EAAM,MAAM,EAAK,EAAK,EAAG,QAKpB,EAIR,SAAA,GAAgB,GAET,IAAA,EAAS,EAAI,OAAO,cAAc,GAClC,EAAY,EAAM,IAAI,+BAE5B,EAAM,WAAW,QAAQ,GAEnB,IAAA,EAAc,EAAU,QACvB,GAAmB,EAAY,iBAKhC,EAAW,IAAI,cAAc,GAC7B,EAAS,GAEf,OAAA,EAAS,gBAAkB,CAAA,IAC1B,EAAM,KAAK,KAAO,GACjB,EAAO,KAAK,EAAE,QAIhB,EAAS,QAAU,CAAA,IAClB,EAAM,WAAW,WAAW,GAC5B,EAAO,YAAY,QAAQ,GAAK,EAAE,UAGnC,EAAS,QAEF,CAEN,SACC,EAAS,UAGV,QACC,EAAS,SAGV,SAAS,EAAW,cAEnB,EAAS,OAAS,MACjB,GAAa,IAAI,KAAK,EAAQ,CAC7B,KAAM,cACH,KAGL,EAAS,OAET,EAAM,WAAW,WAAW,GAC5B,EAAO,YAAY,QAAQ,GAAK,EAAE,UAvS5B,EAAA,GAAA,UAQA,EAAA,GAAA,SAIA,EAAA,GAAA,MAwDA,EAAA,GAAA,WAaA,EAAA,GAAA,WAIA,EAAA,GAAA,QAaA,EAAA,GAAA,UAIA,EAAA,GAAA,QAoCA,EAAA,GAAA,YA2GA,EAAA,GAAA,UAyDH,IAAA,GAAiB,CAEtB,SAAU,EAAO,SACjB,WAAY,EAAO,WACnB,gBAAiB,EAAO,gBACxB,UAAW,EAAO,UAClB,SAAU,EAAO,SACjB,WAAY,EAAO,WACnB,aAAc,EAAO,aACrB,UAAW,EAAO,UAClB,SAAU,EAAO,SACjB,KAAM,EAAO,KAEb,MAAA,EACA,OAAA,EACA,OAAA,GACA,GAAA,EACA,KAAM,EAAI,KACV,WAAY,EAAI,WAChB,OAAQ,GACR,QAAS,EAAI,UACb,UAAW,EAAI,UACf,MAAO,EAAI,MACX,OAAQ,EAAI,OACZ,UAAA,GACA,WAAY,EAAI,WAChB,aAAc,EAAI,aAClB,OAAA,GACA,MAAO,GACP,QAAS,IAAM,EAAI,QAEniBAAA,GACA,aAAA,GACA,YAAA,GACA,aAAA,GACA,eAAA,GACA,YAAA,GACA,YAAA,GACA,aAAA,GACA,YAAA,GACA,WAAA,GACA,QAAS,GACT,SAAU,GACV,YAAa,GACb,WAAY,GACZ,UAAW,GACX,WAAY,GACZ,aAAc,GACd,UAAW,GACX,UAAW,GACX,WAAY,GACZ,UAAW,GACX,SAAU,GACV,SAAA,EACA,cAAA,EACA,cAAe,EAAI,cACnB,UAAW,EAAI,UACf,aAAc,EAAI,aAClB,mBAAoB,EAAI,mBACxB,cAAe,EAAI,cACnB,YAAa,EAAI,YACjB,eAAgB,EAAI,eACpB,gBAAiB,EAAI,gBACrB,aAAc,EAAI,aAClB,UAAW,EAAI,UACf,aAAc,EAAI,aAClB,gBAAiB,EAAI,mBACrB,cAAe,EAAI,cACnB,YAAa,EAAI,YACjB,eAAgB,EAAI,eACpB,gBAAiB,EAAI,gBACrB,aAAc,EAAI,aAElB,KAAA,GACA,KAAA,GAEA,KAAA,EACA,OAAQ,EAAM,OACd,KAAM,EAAM,KACZ,SAAU,EAAM,IAEhB,IAAA,EACA,KAAA,EACA,MAAA,EACA,SAAA,EACA,KAAA,EACA,IAAA,EACA,IAAA,EACA,QAAA,EACA,KAAA,EACA,OAAA,EACA,OAAA,EACA,KAAA,EACA,IAAA,EACA,KAAA,EACA,KAAA,EACA,QAAA,EACA,QAAA,EACA,aAAA,GACA,aAAA,GACA,eAAA,GACA,gBAAA,GACA,cAAA,GACA,aAAA,GACA,aAAA,EACA,aAAA,EACA,aAAA,EACA,cAAA,EACA,iBAAA,GACA,gBAAA,EACA,mBAAA,GACA,iBAAA,EACA,gBAAA,EACA,gBAAA,EAEA,WAAA,EACA,SAAA,EAEA,SAAU,EAAI,SACd,SAAU,EAAI,SACd,UAAW,EAAI,UACf,aAAc,EAAI,aAClB,WAAY,EAAI,WAChB,YAAa,EAAI,YACjB,WAAY,EAAI,WAChB,YAAa,EAAI,YACjB,cAAe,EAAI,cACnB,aAAc,EAAI,aAClB,cAAe,EAAI,cACnB,WAAY,EAAI,YAChB,UAAW,EAAI,UAEf,MAAA,GAEA,MAAA,GACA,GAAA,GAEA,SAAA,GAEA,QAAA,GACA,QAAA,GAEA,KAAA,GAEA,YAAA,GACA,YAAA,GAEA,KAAM,GAAK,EAAI,GACf,MAAO,EAAK,EAAG,GACf,GAAI,EAAK,GAAG,GACZ,KAAM,EAAK,EAAG,GAEd,IAAK,EAAI,IAAK,EAAG,GACjB,MAAO,EAAI,EAAG,IAAK,GACnB,KAAM,EAAI,EAAG,EAAG,KAChB,OAAQ,EAAI,IAAK,IAAK,GACtB,QAAS,EAAI,IAAK,EAAG,KACrB,KAAM,EAAI,EAAG,IAAK,KAClB,MAAO,EAAI,IAAK,IAAK,KACrB,MAAO,EAAI,EAAG,EAAG,GAEjB,OAAQ,EAAI,QAGb,GAAA,GAAK,IAED,EAAK,SACR,EAAK,QAAQ,QAAQ,KAGF,IAAhB,EAAK,OACR,IAAA,IAAW,KAAK,GACf,OAAO,GAAK,GAAI,GAId,IAAA,GAAY,EAMhB,SAAA,KAEC,EAAK,QAAQ,eAGb,EAAK,OAAO,QAAQ,CAAC,EAAG,KACvB,EAAE,MAAQ,IACN,EAAE,MAAQ,IAEb,EAAE,SACF,EAAK,OAAO,OAAO,MAKrB,GAAO,IACN,EAAS,QACR,EAAI,QAAQ,SAAU,KAMzB,SAAA,KAGO,IAAA,EAAO,EAAK,IAAS,KACrB,EAAM,EAAK,IACX,EAAQ,EAAI,EAAK,EAAG,MAAM,MAAM,EAAI,OAE1C,EAAI,MAAQ,EAAK,EAAI,MAAO,EAAG,EAAI,KACnC,EAAK,UAAY,IACf,UAAU,EAAK,MAAM,KACrB,MAAM,EAAI,OACV,QAAQ,EAAI,OACZ,UAAU,EAAK,OAAM,KACrB,UAAU,EAAI,IAAI,OAAM,GAAI,IAAI,EAAK,MAAM,KAAM,IAAI,IAIvD,GAAM,IAEL,EAAS,SAER,EAAI,gBAEC,EAAI,OACR,EAAI,YAAY,EAAK,WAGtB,EAAI,QAAQ,QACZ,EAAI,kBAQP,SAAA,KAGO,IAAA,EAAW,EAAO,eAEpB,GAAa,IAAb,EACH,EAAK,QAAS,EACd,EAAK,QAAQ,YACP,CAEA,IAAA,EAAI,IAAU,EACd,EAAI,GAAK,EAAI,QACb,EAAM,EAAK,IAAU,EAAG,IAAW,GAAG,IAAI,EAAK,EAAI,EAAG,EAAI,IAEhE,EAAI,SAAS,CACZ,IAAK,EAAK,GACV,MAAO,IACP,OAAQ,IACR,MAAO,EAAI,EAAG,EAAG,KAGlB,EAAI,SAAS,CACZ,IAAK,EACL,MAAO,EACP,OAAQ,EACR,MAAM,EACN,QAAS,CACR,MAAO,EAAI,EAAI,WAIjB,EAAI,SAAS,CACZ,IAAK,EACL,MAAO,EAAI,EACX,OAAQ,KAOX,SAAA,KAhzFA,IAAA,EAkzFK,GAAA,GAAM,QAAS,CAMT,IAAA,EAAT,SAAwB,EAAK,GAEtB,IAAA,EAAI,EAAI,MACR,EAAM,EAAK,GAEjB,EAAI,gBACJ,EAAI,cAAc,GAClB,EAAI,UAAU,EAAI,GAEZ,IAAA,EAAO,EAAI,QAAQ,CACxB,KAAM,EACN,KAAM,EACN,KAAM,GACN,IAAK,EACL,MAAO,EAAI,IAAK,IAAK,OAGhB,EAAK,EAAK,MAAgB,EAAR,EAAI,EACtB,EAAK,EAAK,OAAiB,EAAR,EAAI,EAE7B,EAAQ,EAAI,EAAK,GAAK,KACrB,EAAI,cAAc,GAAM,EAAI,IAGzB,EAAI,EAAI,EAAK,GAAK,KACrB,EAAI,cAAc,EAAK,GAAI,IAG5B,EAAI,SAAS,CACZ,MAAO,EACP,OAAQ,EACR,MAAO,EAAI,EAAG,EAAG,GACjB,OAAQ,EACR,QAAS,KAGV,EAAI,YAAY,GAChB,EAAI,gBArCI,EAAA,EAAA,kBAJL,IAAA,EAAa,KACX,EAAO,EAAO,MAAM,GACpB,EAAS,EAAI,OAAA,EAAA,EAAK,cAAL,EAAqB,CAAC,EAAG,EAAG,MA4C/C,GAAA,GAAM,IAED,IAAC,EAAI,MAIL,EAAI,OACP,OAGK,IAAA,EAAQ,EAAI,SAAW,EAAI,MAAQ,GAAI,EAAK,IAAI,MAAM,EAAI,EAAK,IAAI,MAAM,GAAK,GAEpF,EAAS,QACR,EAAI,gBACJ,EAAI,YAAY,EAAK,YAGjB,GACA,EAAI,eACP,EAAa,GAIT,IAAA,GAAU,IAAe,EAAM,EAAI,GAAK,EACxC,EAAI,EAAI,YACR,EAAI,EAAE,GAAG,EAAI,EAAE,GAAG,EAClB,EAAI,EAAE,GAAG,EAAI,EAAE,GAAG,EAExB,EAAI,SAAS,CACZ,IAAK,EAAE,GACP,MAAO,EACP,OAAQ,EACR,QAAS,CACR,MAAO,EACP,MAAO,GAER,MAAM,IAGF,EAAI,OACR,EAAI,iBAKF,EAAY,CAET,IAAA,EAAQ,GACR,EAAO,EAAW,UAExB,IAAA,IAAW,KAAO,EACjB,EAAS,GACR,EAAM,QAAQ,MAAQ,EAAK,MAE3B,EAAM,QAAQ,KAIhB,EAAe,IAAY,EAAM,KAAK,OAIvC,EAAe,EAAK,EAAI,EAAI,eAAgB,EAAI,SAI7C,GAAA,GAAM,OAAQ,CAGjB,EAAI,gBACJ,EAAI,cAAc,IAAS,GAC3B,EAAI,UAAU,EAAI,EAAI,OACtB,EAAI,eAAc,EAAI,GAEhB,IAAA,EAAO,GAGb,EAAI,SAAS,CACZ,MAAO,EACP,OAAQ,EACR,OAAQ,WACR,MAAO,EAAI,EAAG,EAAG,GACjB,QAAS,GACT,OAAQ,IAIT,IAAA,IAAS,EAAI,EAAG,GAAK,EAAG,IACvB,EAAI,SAAS,CACZ,MAAO,EACP,OAAe,GAAP,EACR,OAAQ,SACR,IAAK,GAAM,EAAO,EAAI,EAAU,GAAP,GACzB,MAAO,EAAI,IAAK,IAAK,KACrB,OAAQ,IAIV,EAAI,eAID,GAAoB,IAApB,GAAM,UAAiB,CAG1B,EAAI,gBACJ,EAAI,cAAc,IAAS,KAC3B,EAAI,UAAU,EAAI,EAAI,OACtB,EAAI,eAAc,GAAI,GAEhB,IAAA,EAAM,EAGN,EAAO,EAAI,QAAQ,CACxB,KAAM,GAAM,UAAU,QAAQ,GAC9B,KAAM,EAAO,MAAM,GACnB,KAAM,GACN,MAAO,EAAI,IAAK,IAAK,KACrB,IAAK,GAAM,GACX,OAAQ,aAIT,EAAI,SAAS,CACZ,MAAO,EAAK,MAAc,EAAN,EAAgB,EAAN,EAC9B,OAAQ,EAAK,OAAe,EAAN,EACtB,OAAQ,WACR,MAAO,EAAI,EAAG,EAAG,GACjB,QAAS,GACT,OAAQ,IAIT,IAAA,IAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CACrB,IAAA,EAAU,GAAM,UAAY,EAClC,EAAI,aAAa,CAChB,GAAI,GAAM,EAAK,MAAQ,GAAO,EAAU,EAAI,MAAO,GACnD,GAAI,GAAM,EAAK,MAAQ,GAAO,EAAU,EAAI,MAAO,EAAM,EAAK,QAC9D,GAAI,GAAM,EAAK,MAAQ,GAAO,EAAU,IAAM,IAAK,EAAM,EAAK,OAAS,GACvE,IAAK,GAAM,EAAI,EAAM,GAAK,EAAiB,IAAN,EAAY,GAAI,GACrD,MAAO,EAAI,IAAK,IAAK,OAKvB,EAAI,YAAY,GAEhB,EAAI,eAIL,GAAU,eAET,EAAI,gBACJ,EAAI,cAAc,EAAG,KACrB,EAAI,UAAU,EAAI,EAAI,OACtB,EAAI,cAAc,IAAI,IAEtB,EAAI,WAAW,CACd,OAAQ,GACR,MAAO,EAAI,IAAK,EAAG,GACnB,QAAS,EAAK,EAAG,EAAgB,EAAb,EAAI,UAGzB,EAAI,gBAID,GAAM,SACT,EAAO,OA3NA,OAxGA,EAAT,WACQ,OAAA,IADC,UAIA,EAAA,GAAA,eAuBA,EAAA,GAAA,aAoCA,EAAA,GAAA,kBAyCA,EAAA,GAAA,aAgOT,EAAI,IAAI,KAEP,KAEA,EAAU,QAOT,EAAK,YAAc,EAAK,UAAU,SAAS,SAAS,EAAI,YACxD,EAAK,QAAQ,UAER,GAAM,SAAyB,IAAf,EAAK,OACzB,KAGD,EAAI,aACJ,MAEmB,IAAf,EAAK,OACR,KAGD,EAAI,aApBJ,EAAI,aACJ,KACA,EAAI,eAwBa,IAAf,EAAK,OACR,KAGG,EAAK,MACR,KAGD,OAAO,iBAAiB,QAAS,IAChC,EAAO,gBAAgB,EAAE,MAAM,WAC/B,EAAI,OACJ,EAAI,IAAI,KACuB,IAA9B,EAAW,iBACV,EAAI,aACJ,EAAO,OACP,EAAI,gBAKA,IAn7FQ,WAAf,QAAA,QAAA;;AS/IO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,IAAMA,EAAgB,CACzBC,QAAS,EACTC,SAAS,EACTC,SAAS,GAHN,QAAA,cAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,IAAMC,EAAkB,CAC3BC,YAAY,EACZC,MAAO,GAFJ,QAAA,gBAAA;;ACKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EANP,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,iBACA,EAAA,QAAA,mBAIO,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAMC,GAAI,EAAO,EAAA,SAAA,CACpBF,WAAYD,EAAgBC,gBAAAA,WAC5BC,MAAON,EAAcM,cAAAA,QAFlB,QAAA,EAAA;;;;ACqQN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EA3QD,IAAA,EAAA,QAAA,aA2QC,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA1QD,IAAME,EAAUC,QAAQ,oDAKjB,SAASC,IAAkB,IAAA,EAE5BC,EAAAA,EAAAA,gBAAgBH,GAqIF,EArIhB,EAAA,CACII,OAAQ,CACJC,EAAG,IACHC,EAAG,IACHC,MAAO,IACPC,OAAQ,GACRC,OAAQ,EACRC,MAAO,CACHC,KAAM,CAAEC,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,GAC3CC,IAAK,CAAEJ,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,IAC1CE,IAAK,IAGbC,OAAQ,CACJb,EAAG,IACHC,EAAG,GACHC,MAAO,IACPC,OAAQ,GACRC,OAAQ,EACRC,MAAO,CACHC,KAAM,CAAEC,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,GAC3CC,IAAK,CAAEJ,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,MAGlDI,OAAQ,CACJd,EAAG,IACHC,EAAG,IACHC,MAAO,IACPC,OAAQ,GACRC,OAAQ,EACRC,MAAO,CACHC,KAAM,CAAEC,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,GAC3CC,IAAK,CAAEJ,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,MAGlDK,WAAY,CACRf,EAAG,IACHC,EAAG,IACHC,MAAO,IACPC,OAAQ,GACRC,OAAQ,EACRC,MAAO,CACHC,KAAM,CAAEC,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,GAC3CC,IAAK,CAAEJ,KAAM,EAAGC,GAAI,EAAGC,MAAM,EAAMC,MAAO,MAGlDM,MAAO,CACHhB,EAAG,IACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,IAEZc,OAAQ,CACJjB,EAAG,IACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,IAEZe,cAAe,CACXlB,EAAG,GACHC,EAAG,EACHC,MAAO,GACPC,OAAQ,IAEZgB,aAAc,CACVnB,EAAG,GACHC,EAAG,EACHC,MAAO,GACPC,OAAQ,IAEZiB,eAAgB,CACZpB,EAAG,GACHC,EAAG,EACHC,MAAO,GACPC,OAAQ,IAGZkB,WAAY,CACRrB,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,IAIZmB,mBAAoB,CAChBtB,EAAG,EACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZoB,mBAAoB,CAChBvB,EAAG,EACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZqB,qBAAsB,CAClBxB,EAAG,EACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZsB,oBAAqB,CACjBzB,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZuB,oBAAqB,CACjB1B,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZwB,sBAAuB,CACnB3B,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,IAEZyB,SAAU,CACN5B,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,IAEZ0B,UAAW,CACP7B,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,KAEA,aAAA,CACRH,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,KAEH,EAAA,EAAA,UAAA,CACLH,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,KAEH,EAAA,EAAA,UAAA,CACLH,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,KAEH,EAAA,EAAA,UAAA,CACLH,EAAG,GACHC,EAAG,GACHC,MAAO,GACPC,OAAQ,KAGU,EAAA,EAAA,uBAAA,CAClBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEW,EAAA,EAAA,wBAAA,CACnBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEM,EAAA,EAAA,mBAAA,CACdH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEO,EAAA,EAAA,oBAAA,CACfH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEa,EAAA,EAAA,0BAAA,CACrBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEc,EAAA,EAAA,2BAAA,CACtBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEY,EAAA,EAAA,yBAAA,CACpBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEa,EAAA,EAAA,0BAAA,CACrBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAGkB,EAAA,EAAA,+BAAA,CAC1BH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEmB,EAAA,EAAA,gCAAA,CAC3BH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEgB,EAAA,EAAA,6BAAA,CACxBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEiB,EAAA,EAAA,8BAAA,CACzBH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEkB,EAAA,EAAA,+BAAA,CAC1BH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEmB,EAAA,EAAA,gCAAA,CAC3BH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEN,EAAA,EAAA,OAAA,CACFH,EAAG,GACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KAEC,EAAA,EAAA,cAAA,CACTH,EAAG,IACHC,EAAG,IACHC,MAAO,GACPC,OAAQ,KA7PhB;;AC6CH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,YAAA,QAAA,aAAA,EAhDM,IAAM2B,EAAU,CACnBC,MAAO,EACPC,OAAQ,KACRC,cAAe,KACfC,OAAQ,EACRC,MAAO,EACPC,sBAAuB,KACvBC,qBAAsB,KACtBC,kBAAmB,KACnBC,6BAA8B,MAK3B,SAASC,EAAaV,GACzBA,EAAQC,MAAQ,EAChBD,EAAQE,OAAS,KACjBF,EAAQG,cAAgB,KACxBH,EAAQK,MAAQ,EAChBL,EAAQI,OAAS,EA6BpB,QAAA,QAAA,EArBM,IAAMO,EAAc,CACvBR,cAAe,KACfE,MAAO,EACPD,OAAQ,GAGL,SAASQ,EAAiBD,GAC7BA,EAAYR,cAAgB,KAC5BQ,EAAYN,MAAQ,EACpBM,EAAYP,OAASJ,EAAQE,OAAOW,KASjC,SAASC,EAAoBC,EAAaf,GAC7CW,EAAYN,MAAQ,EACpBU,EAAYX,OAASJ,EAAQI,OAChC,QAAA,YAAA;;;;;;;;;;ACpDM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,IAAMY,EAAe,CACxBC,iBAAkB,GAClBC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,IAJX,QAAA,aAAA;;AC0FN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,UAAA,EAAA,QAAA,WAAA,EAAA,QAAA,UAAA,EA3FD,IAAA,EAAA,QAAA,aAMA,EAAA,QAAA,mBACA,EAAA,QAAA,aALMC,EAAUvD,QAAQ,+BAClBwD,EAAYxD,QAAQ,iCACpByD,EAAUzD,QAAQ,+BAClB0D,EAAS1D,QAAQ,8BAQhB,SAAS2D,IAENC,IAAAA,EAAW,CACb9D,EAAE+D,EAAAA,UAAU,UAAWN,GACvBzD,EAAE+D,EAAAA,UAAU,YAAaL,GACzB1D,EAAE+D,EAAAA,UAAU,UAAWJ,GACvB3D,EAAE+D,EAAAA,UAAU,SAAUH,IAGnBI,OAAAA,QAAQC,IAAIH,GAMhB,SAASI,IAER9B,GAAiC,MAAjCA,EAAQM,QAAAA,sBAA+B,CACjCyB,IAAAA,EAAQC,KAAK,UAAW,CAC1BC,OAAQjB,EAAaC,aAAAA,iBACrBtC,MAAM,IAIHqB,OAFP+B,EAAMG,QACE5B,EAAAA,QAAAA,sBAAwByB,EACzB/B,EAAQM,QAAAA,sBAGZN,OAAAA,EAAQM,QAAAA,sBAMZ,SAAS6B,IACRnC,GAAgC,MAAhCA,EAAQO,QAAAA,qBAA8B,CAChCwB,IAAAA,EAAQC,KAAK,YAAa,CAC5BC,OAAQjB,EAAaE,aAAAA,gBACrBvC,MAAM,IAEVoD,EAAMG,QACE3B,EAAAA,QAAAA,qBAAuBwB,EAE5B/B,OAAAA,EAAQO,QAAAA,qBAKZ,SAAS6B,IAERpC,GAAwC,MAAxCA,EAAQS,QAAAA,6BAAsC,CACxCsB,IAAAA,EAAQC,KAAK,UAAW,CAC1BC,OAAQjB,EAAaG,aAAAA,cACrBxC,MAAM,IAEVoD,EAAMG,QACEzB,EAAAA,QAAAA,6BAA+BsB,EAIpC/B,OAAAA,EAAQS,QAAAA,6BAMZ,SAAS4B,IAERrC,GAA6B,MAA7BA,EAAQQ,QAAAA,kBAA2B,CAC7BuB,IAAAA,EAAQC,KAAK,SAAU,CACzBC,OAAQjB,EAAaI,aAAAA,aACrBzC,MAAM,IAEVoD,EAAMG,QACE1B,EAAAA,QAAAA,kBAAoBuB,EAEzB/B,OAAAA,EAAQQ,QAAAA;;ACGlB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EA1FD,IAAA,EAAA,QAAA,sBACA,EAAA,QAAA,wBACA,EAAA,QAAA,gBAEO,SAAS8B,IACVC,EAAAA,EAAAA,MAAMC,IAAI,uBAOVC,EAAAA,EAAAA,GAAG,QAAS,QAAS,SAACC,GACpBA,EAAMC,UACMtC,EAAAA,YAAAA,OAASqC,EAAMrC,QAW7BoC,EAAAA,EAAAA,GAAG,OAAQ,QAAS,SAACC,GACfA,EAAME,gBACSZ,EAAAA,EAAAA,gBAAAA,OACfU,EAAMG,OAAQ,EACdH,EAAMI,QAAU,GAChBJ,EAAMK,eAAe,MAGzBL,EAAME,cAAe,IAKvBI,EAAAA,EAAAA,SAAS,QAAS,SAACN,GACjBA,EAAMO,OAAOjD,EAAQE,QAAAA,OAAOgD,IAAKR,EAAM9D,OACnC8D,EAAMQ,IAAIhF,EAAI8B,EAAQE,QAAAA,OAAOgD,IAAIhF,EACjCwE,EAAMS,QAAU,EAGhBT,EAAMS,OAAS,EAGfT,EAAME,eACNF,EAAMG,OAAQ,KAOpBG,EAAAA,EAAAA,SAAS,QAAS,SAACN,GAEXxC,IAAAA,EAASF,EAAQE,QAAAA,OAEnBwC,GAAAA,EAAMU,WAAWlD,IACbA,EAAO0C,aASF,IAAA,IAAIS,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAC1BnD,EAAOW,KAAO,GACdX,EAAOqD,KAAK,KAe9BC,EAAAA,EAAAA,UAAU,QAAS,QAAS,SAACd,GAC3BA,EAAMG,OAAQ;;ACvFf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,IAAMY,EAAW,CACpBC,KAAM,OACNC,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,IAAK,IACLC,OAAQ,SANL,QAAA,SAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAHP,IAAA,EAAA,QAAA,WAGaC,EAAa,CACtBC,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,GAGpCkH,QAAS,CACL,CACItG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,WA7BX,QAAA,WAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAFP,IAAA,EAAA,QAAA,WAEaC,EAAa,CACtBT,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,GAGpCqH,QAAS,CACL,CACIzG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,UAEV,CACIvG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,YArCX,QAAA,WAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAFP,IAAA,EAAA,QAAA,WAEaG,EAAa,CACtBX,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,GAGpCqH,QAAS,CACL,CACIzG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,UAEV,CACIvG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,UAEV,CACIvG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,WAKXD,QAAS,CACR,CACItG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,YAnDX,QAAA,WAAA;;ACCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAHP,IAAA,EAAA,QAAA,WAGaI,EAAa,CACtBZ,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,GAGpCqH,QAAS,CAEL,CACIzG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,UAEV,CACIvG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,UAEV,CACIvG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,YA3CX,QAAA,WAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAHP,IAAA,EAAA,QAAA,WAGaK,EAAa,CACtBb,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAtBjC,QAAA,WAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAFP,IAAA,EAAA,QAAA,WAEayH,EAAa,CACtBd,IAAK,CACD,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBAGJC,WAAY,CACRC,KAAM,CACFjG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,GAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,IAEpC8G,MAAc,EACdC,GAAI,EACJC,OAAQ,UAGZC,WAAY,CACRrG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,GAGpCqH,QAAS,CACL,CACIzG,EAAG,GAAKb,EAAcC,cAAAA,QAAU,EAChCa,EAAG,GAAKd,EAAcC,cAAAA,QAAU,EAChCmH,KAAM,gBApCX,QAAA,WAAA;;ACKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAPP,IAAA,EAAA,QAAA,wBACA,EAAA,QAAA,wBACA,EAAA,QAAA,wBACA,EAAA,QAAA,wBACA,EAAA,QAAA,wBACA,EAAA,QAAA,wBAEaO,EAAa,CACtBhB,EADsB,WAEtBU,EAFsB,WAGtBE,EAHsB,WAItBC,EAJsB,WAKtBC,EALsB,WAMtBC,EANsB,YAAnB,QAAA,WAAA;;ACNA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,IAAME,EAAS,CAClBC,KAAM,aACNC,KAAM,aACNC,IAAK,aAHF,QAAA,OAAA;;ACyDN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAzDD,IAAA,EAAA,QAAA,4BACA,EAAA,QAAA,8BACA,EAAA,QAAA,0BACA,EAAA,QAAA,2BAEA,EAAA,QAAA,mBAYO,SAASC,IAEV9C,EAAAA,EAAAA,MAAMC,IAAI,8BAEVQ,EAAAA,EAAAA,SAAS,SAAU,SAAC9C,GAEd,IACMoF,IAAAA,EAAmB1H,EAAE2H,EAAAA,IAAI,cAE1B,IAAA,IAAIC,KAAeF,EAChBpF,GAAAA,EAAOkD,WAAWkC,EAAiBE,MACjCjD,EAAAA,EAAAA,MAAMC,IAAI,4BAERiD,UAAUhC,EAASK,SAAAA,MAAM,CAUrB9D,GARIK,EAAAA,QAAAA,OAASM,EAAYN,YAAAA,MACI,MAA7BM,EAAYR,YAAAA,gBACJA,EAAAA,QAAAA,cAAgBQ,EAAYR,YAAAA,eAEhCC,EAAAA,QAAAA,OAASO,EAAYP,YAAAA,QAEZO,EAAAA,EAAAA,kBAAAA,EAAjB,aAEIX,EAAQC,QAAAA,OAAS+E,EAAWU,WAAAA,OAAS,EAErC,YADEC,EAAAA,EAAAA,GAAGV,EAAOG,OAAAA,KAGdO,EAAAA,EAAAA,GAAGV,EAAOE,OAAAA,KAAMnF,EAAQC,QAAAA,OAAS,IAMjD,MAAO2F,GACHrD,EAAAA,EAAAA,MAAMC,IAAIoD;;ACOjB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,mBAAA,EA3DP,IA2DWC,EA3DX,EAAA,QAAA,gBAIO,SAASC,IAEVvD,EAAAA,EAAAA,MAAMC,IAAI,wBAEZqD,QAAAA,cAAAA,EAAgB,KAMdrC,EAAAA,EAAAA,UAAU,SAAU,SAAU,SAACuC,GAC7BF,QAAAA,cAAAA,EAAgBE,IAWlB/C,EAAAA,EAAAA,SAAS,gBAAiB,SAAC+C,GAEnBC,IAAAA,EAASpI,EAAE2H,EAAAA,IAAI,SAEjBS,GAAiB,GAAjBA,EAAON,OAEN,IAAA,IAAIO,KAAWD,EAAQ,CAClBtD,IAAAA,EAAQsD,EAAOC,GACjBF,GAAAA,EAAO3C,WAAWV,IAAUqD,EAAOG,aAE/BxD,EAAME,aAAc,CACpBF,EAAMa,KAAKwC,EAAOzC,QACZ6C,IAAAA,EAA+B,GAAnBJ,EAAOI,WAMJ,GAAjBzD,EAAMS,OACNT,EAAMQ,IAAIhF,GAAKiI,EAGfzD,EAAMQ,IAAIhF,GAAKiI,MAWhC,QAAA,cAAA;;AC1DA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,IAAMC,EAAgB,CACzBC,SAAU,IACV/C,OAAQ,EACR6C,UAAW,GAHR,QAAA,cAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,IAAMG,EAAe,CACxBD,SAAU,IACV/C,OAAQ,EACR6C,UAAW,GAHR,QAAA,aAAA;;ACGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAJP,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,mBAGaI,EAAgB,CAChBD,MAAAA,EADgB,aAEfF,OAAAA,EAAAA,eAFP,QAAA,cAAA;;ACgHN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,2BAAA,EAAA,QAAA,UAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,eAAA,EApHD,IAAA,EAAA,QAAA,kBACA,EAAA,QAAA,aACA,EAAA,QAAA,qBAEaI,EAAwB,SACjCtG,EACA6F,EACAU,GAGMC,IAAAA,EAAkB9I,EAAE+I,EAAAA,IAAI,CAC1BC,OAAOb,EAAOc,MACd3D,IAAI6C,EAAO7C,IAAMhD,EAAOgD,IAAIyD,IAAI,GAAQ,IACxCrC,OAAO,UACPwC,OACAC,OAAO,IACPpJ,MAAMN,EAAcC,cAAAA,SACpB,gBACAyI,EAAOc,KACP,CACIA,KAAMd,EAAOc,KACbJ,QAASA,EACTnD,OAAQmD,EAAUA,EAAQnD,OAAS,EACnC6C,UAAWM,EAAUA,EAAQN,UAAY,EACzCa,IAAK,SACLd,aAAa,EACbe,WAAW,EACXC,eAAgB,WAKZR,EAAgBxD,IAAMhD,EAAOgD,IAAIyD,IAAI,GAAKzG,EAAOiD,OAAQ,IACnC,GAAlBjD,EAAOiD,QAAiBuD,EAAgBS,MAIlB,GAAjBjH,EAAOiD,QAAeuD,EAAgBS,QAC3CT,EAAgBS,OAAQ,EACxBT,EAAgBU,MAAQC,KAAKC,IAAIZ,EAAgBU,SALjDV,EAAgBS,OAAQ,EACxBT,EAAgBU,MAAQV,EAAgBU,MAAQlH,EAAOiD,SAS/DY,OAAQ,WAIAsD,KAAKC,IAAIZ,EAAgBU,QAAU,KACnCV,EAAgBU,MAAQ,GAAKlH,EAAOiD,OACpCuD,EAAgBO,WAAY,EAC5BM,EAAeb,EAAiBD,EAAUA,EAAQJ,SAAW,MAG7DK,EAAgBO,YAChBP,EAAgBU,OAAS,GAAKlH,EAAOiD,OACrCjD,EAAOgG,aAAc,EACrBQ,EAAgBR,aAAc,OAQvCQ,OAAAA,GAKJ,SAASa,EAAexB,EAAQyB,GACnCC,WAAW,WACP1B,EAAOkB,WAAY,GACpBO,GAIA,SAASE,EAAuBxJ,EAAGC,EAAGsG,EAAMnH,GAC7CqJ,EAAAA,EAAAA,IAAI,CACFC,OAAOnC,GACPvB,IAAIhF,EAAGC,GACPmG,OAAO,UACPwC,OACAnJ,MAAML,GAAoBD,EAAcC,cAAAA,SACxC,SACA,CACIuJ,KAAMpC,EACNgC,QAASF,EAAc9B,cAAAA,MAO5B,SAASkD,IAEL/J,OAAAA,EAAE2H,EAAAA,IAAI,iBAAiB,GAG3B,SAASqC,IACN7B,IAAAA,EAAS4B,IACV5B,GAELA,EAAOhC,SAKJ,SAAS8D,IACN9B,IAAAA,EAAS4B,IACX,GAAC5B,EAAD,CAEE+B,IAAAA,EAAO/B,EAAOoB,OAAS,EAAI,EACjCpB,EAAOqB,MAAQ,GAAKU,EAEpB/B,EAAOG,aAAc,GACxB,QAAA,sBAAA;;ACyDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,0BAAA,EA5KD,IAAA,EAAA,QAAA,mBACA,EAAA,QAAA,wBACA,EAAA,QAAA,2BACA,EAAA,QAAA,2BACA,EAAA,QAAA,0BACA,EAAA,QAAA,4BACA,EAAA,QAAA,yBAKO,SAAS6B,EAA0B7H,GAEpCqC,EAAAA,EAAAA,MAAMC,IAAI,gCAEVQ,EAAAA,EAAAA,SAAS,WAkCFgF,IACCjC,GA8CDkC,WACCvE,IAAAA,EAAOwE,UAAUzE,EAASC,SAAAA,MAC1BC,EAAQuE,UAAUzE,EAASE,SAAAA,OAC3BC,EAAKsE,UAAUzE,EAASG,SAAAA,IACxBC,EAAOqE,UAAUzE,EAASI,SAAAA,OAE5BH,GAAQC,GAASC,GAAMC,KACQ,OAA3B3D,EAAOiI,mBACPjI,EAAOiI,iBAAmB,MAC1BjI,EAAO8B,KAAK9B,EAAOiI,oBAGnBzE,GAAQC,KACRzD,EAAOiH,MAAMzD,GACbA,EAAOxD,EAAOkI,MAAMlI,EAAOtB,MAAO,GAAKsB,EAAOkI,KAAKlI,EAAOtB,MAAO,GAC1DsB,EAAOiD,OAAdO,GAAwB,EAAoB,IAG5CE,GAAMC,KACND,EAAK1D,EAAOkI,KAAK,GAAIlI,EAAOtB,OAASsB,EAAOkI,KAAK,EAAGlI,EAAOtB,SAK9D8E,GAASC,GAAUC,GAAOC,GACI,QAA3B3D,EAAOiI,mBACPjI,EAAOiI,iBAAmB,OAC1BjI,EAAO8B,KAAK9B,EAAOiI,mBA3G3BF,GAuHKI,WACCzC,IAAAA,EAAI0C,aAAa7E,EAASK,SAAAA,KAC5B,IAAC+B,EAAL,cACI,OAIA3F,GAAAA,EAAOkD,WAAWyC,EAAlB,iBACEtD,EAAAA,EAAAA,MAAMC,IAAI,kBACRoD,GAAG,CAEWjD,EAAAA,cAAAA,UACRoD,IAAAA,GAAS,EAAf,EAAA,aAGIA,KAEIA,EAAAA,EAAAA,wBAAAA,EAAO7C,IAAIhF,EACX6H,EAAO7C,IAAI/E,EACX4H,EAAOc,MACXd,EAAOpD,WAGL+D,IAAAA,GAAkB,EAAsBxG,EAAAA,uBAAAA,EAAQ2F,EAA9B,cAA6CA,EAAcY,cAAAA,SAOvEtG,EAAAA,YAAAA,cAAgBuG,EAE1BnE,EAAAA,EAAAA,MAAMC,IAAI,sBAAwBqD,EAAcgB,cAAAA,OAtJ1DwB,GAmCc,OAFRtC,GAAS,EAAf,EAAA,eAGIA,EAAOmB,iBAOXqB,OAAOrI,EAAOgD,KAQTa,WAECyE,IAAAA,EAAQN,UAAUzE,EAASM,SAAAA,QAE7BpD,GAA6B,MAA7BA,EAAYR,YAAAA,eAAkD,MAAzBH,EAAQG,QAAAA,cAAyB,OAEtEqI,GAEAtI,EAAOgG,aAAc,GACTlE,EAAAA,EAAAA,aAAAA,OACZyF,WAAW,YAEP,EAAA,EAAA,kBACD,EAAY1E,EAAAA,aAAAA,mBAGH0F,EAAAA,EAAAA,aAAAA,OACZvI,EAAOgG,aAAc,GACrB,EAAA,EAAA,qBAlEJnC,KASFtB,EAAAA,EAAAA,GAAG,OAAQ,SAAU,SAACvC,GAChBA,EAAO0C,gBACMZ,EAAAA,EAAAA,cAAAA,OACXO,EAAAA,EAAAA,MAAMC,IAAI,cAAgBtC,EAAOW,MACnCX,EAAO4C,QAAU,GACjB5C,EAAO6C,eAAe,MACV3C,EAAAA,YAAAA,QAAU,GAG1BF,EAAO0C,cAAe,IAKxBH,EAAAA,EAAAA,GAAG,QAAS,SAAU,WAClBkD,EAAAA,EAAAA,GAAGV,EAAOG,OAAAA;;ACjBb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,QAAA,aAAA,QAAA,wBAAA,EA5BA,IAAMsD,EAAe,CACxBC,oBAAqB,eACrBC,iBAAkB,qQAOlBC,qBAAsB,kBACtBC,aAAc,qGAMdC,gBAAiB,SAYd,QAAA,aAAA,EATA,IAAMC,EAAqB,CAC9BC,aAAc,wBACdC,WAAY,UACZC,YAAa,wBACbC,YAAa,qBACbC,kBAAmB,oBACnBC,kBAAmB,eAGhB,QAAA,mBAAA,EAAA,IAAMC,EAAa,CACtBC,KAAM,UACNnJ,MAAO,WAFJ,QAAA,WAAA;;ACoFN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EAAA,QAAA,sBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,eAAA,EAAA,QAAA,gBAAA,EAhHD,IAAA,EAAA,QAAA,0BACA,EAAA,QAAA,qBACA,EAAA,QAAA,aAIO,SAASoJ,IAGU,GAAlBzJ,EAAQI,QAAAA,SACAA,EAAAA,QAAAA,OAASJ,EAAQE,QAAAA,OAAOW,MAEV,GAAtBF,EAAYP,YAAAA,SACAA,EAAAA,YAAAA,OAASJ,EAAQE,QAAAA,OAAOW,MAInC,IAAA,IAAIwC,EAAI,EAAGA,EAAIrD,EAAQI,QAAAA,OAAQiD,IAC9BsD,EAAAA,EAAAA,IAAI,CACF/I,EAAE8L,EAAAA,MAAM,MACR9L,EAAEsF,EAAAA,IAAI,GAAKG,EAAG,GACdzF,EAAE0G,EAAAA,OAAO,UACT1G,EAAEgJ,EAAAA,OAAO,eACThJ,EAAEkF,EAAAA,QAAQ,GACV,qBAKWlF,EAAE+I,EAAAA,IAAI,CACrB/I,EAAE8L,EAAAA,MAAM,MACR9L,EAAEsF,EAAAA,IAAI,GAAKlD,EAAQI,QAAAA,OAAQ,GAC3BxC,EAAE0G,EAAAA,OAAO,UACTqF,KAAKJ,EAAWlJ,WAAAA,MAAQ,KACxB,CACIuJ,KAAM,EACNxL,MAAO,EACPyL,KAAM,QAEV,mBAIFlD,EAAAA,EAAAA,IAAI,CACF/I,EAAE8L,EAAAA,MAAM,MACR9L,EAAEsF,EAAAA,IAAI,GAAI,IACVtF,EAAE0G,EAAAA,OAAO,UACTqF,KAAKJ,EAAWC,WAAAA,KAAO,KACvB,CACII,KAAM,EACNxL,MAAO,EACPyL,KAAM,QAEV,kBAIFpH,EAAAA,EAAAA,GAAG,OAAQ,SAAU,SAACvC,GACpB4J,EAAsB5J,EAAOW,QAM9B,SAASkJ,IAENC,IAAAA,EAAapM,EAAE2H,EAAAA,IAAI,kBAAkB,GAC3CyE,EAAW9G,IAAIhF,EAAI,IAAM8B,EAAQE,QAAAA,OAAOW,KAAO,GAC/CmJ,EAAWL,KAAOJ,EAAWlJ,WAAAA,OAASL,EAAQK,QAAAA,MAAQM,EAAYN,YAAAA,OAI/D,SAAS4J,IAENC,IAAAA,EAAQtM,EAAE2H,EAAAA,IAAI,oBAAoB,GAElC4E,EAAYvM,EAAE2H,EAAAA,IAAI,iBAAiB,GACxB,MAAb4E,GAA8B,MAATD,IAEzBC,EAAUjH,IAAIhF,EAAIgM,EAAMhH,IAAIhF,EAAI,GAChCiM,EAAUjH,IAAI/E,EAAI+L,EAAMhH,IAAI/E,EAAI,GAEhCgM,EAAUR,KAAOJ,EAAWC,WAAAA,KAAOxJ,EAAQC,QAAAA,OAIxC,SAAS6J,EAAsB1J,GAC5BgK,IAAAA,EAAexM,EAAE2H,EAAAA,IAAI,oBAAoBnF,GAC3CgK,IACAA,EAAatH,QAAU,GAMxB,SAASoE,IAEP,IADC8C,IAAAA,EAAapM,EAAE2H,EAAAA,IAAI,kBAAkB,GAClClC,EAAI,EAAGA,EAAIrD,EAAQE,QAAAA,OAAOW,KAAMwC,IAAK,CACpC6G,IAAAA,EAAQtM,EAAE2H,EAAAA,IAAI,oBAAoBlC,GAEpC,IACqB,GAAjB6G,EAAMpH,UACNoH,EAAMhH,IAAIhF,EAAK,GAAKmF,EAAKrD,EAAQE,QAAAA,OAAOgD,IAAIhF,EAAI,IAGxD,MAAO0H,GACDrD,EAAAA,EAAAA,MAAMC,IAAI0H,IAKpBF,EAAW9G,IAAIhF,EAAI,IAAM8B,EAAQE,QAAAA,OAAOW,KAAO,GAAKb,EAAQE,QAAAA,OAAOgD,IAAIhF;;AC9F1E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAjBD,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,SAIO,SAASmM,IAEV9H,EAAAA,EAAAA,MAAMC,IAAI,2BAGVQ,EAAAA,EAAAA,SAAS,YACP,EAAA,EAAA,oBACA,EAAA,EAAA,mBACA,EAAA,EAAA;;ACSP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtBD,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,qBACA,EAAA,QAAA,8BACA,EAAA,QAAA,qCACA,EAAA,QAAA,+BACA,EAAA,QAAA,4BACA,EAAA,QAAA,+BAGO,SAASsH,IACV/H,EAAAA,EAAAA,MAAMC,IAAI,mBAEZ,EAAA,EAAA,uBAE0BxC,EAAAA,EAAAA,2BAAAA,EAAQE,QAAAA,SAElC,EAAA,EAAA,0BAEA,EAAA,EAAA,sBAEA,EAAA,EAAA;;ACPH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAbD,IAAA,EAAA,QAAA,aAGO,SAASqK,EAAcC,EAAetK,GACvCyG,EAAAA,EAAAA,IAAI,CACF/I,EAAEuG,EAAAA,KAAKqG,EAAcrG,KAAKjG,EACtBsM,EAAcrG,KAAKhG,GACvBP,EAAEsF,EAAAA,IAAI,EAAG,GACTtF,EAAEwG,EAAAA,MAAMoG,EAAcpG,OACtBxG,EAAE0G,EAAAA,OAAOkG,EAAclG,QACvB1G,EAAE6M,EAAAA,OAAOvK,GACTtC,EAAEyG,EAAAA,EAAEmG,EAAcnG;;ACRnB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHP,IAAA,EAAA,QAAA,UAGaqG,EAAU,CACnBC,IAAK,CACDvM,MAAO,GAAKf,EAAcC,cAAAA,QAC1Be,OAAQ,GAAKhB,EAAcC,cAAAA,QACtB,EAAA,WAAM,MAAA,CACPsJ,OAAO,iBACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAGL,EAAA,WAAM,MAAA,CACP9C,OAAO,8BACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAGL,EAAA,WAAM,MAAA,CACP9C,OAAO,gBACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAEL,EAAA,WAAM,MAAA,CACP9C,OAAO,kBACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAGL,EAAA,WAAM,MAAA,CACP9C,OAAO,YACPjJ,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAEL,EAAA,WAAM,MAAA,CACP9C,OAAO,WACPjJ,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAEL,EAAA,WAAM,MAAA,CACP9C,OAAO,+BACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,QAEL,IAAA,WAAM,MAAA,CACP9C,OAAO,gCACPE,OACAjE,QACAlF,MAAMN,EAAcC,cAAAA,SACpBwF,QAAQ,GACR4G,MAAM,QAEL,EAAA,WAAM,MAAA,CACP9C,OAAO,QACPE,OACAnJ,MAAMN,EAAcC,cAAAA,SACpBoM,MAAM,MACN,iBAjEL,QAAA,QAAA;;ACKN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EARD,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,aAGO,SAASkB,EAAQ3G,GAClB4G,EAAAA,EAAAA,SAAS,GACTC,EAAAA,EAAAA,SAAS7G,EAAKyG,EAAQC,QAAAA;;ACDrB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,2BAAA,EAJP,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,sBACA,EAAA,QAAA,gBAEaI,EAAwB,SACjC7M,EACAC,EACAsG,EACAgC,GACElE,EAAAA,EAAAA,MAAMC,IAAI,iBAAmBiC,GACzB/B,IAAAA,EAAQ9E,EAAE+I,EAAAA,IAAI,CAChB/I,EAAEgJ,EAAAA,OAAOnC,GACT7G,EAAEsF,EAAAA,IAAIhF,EAAGC,GACTP,EAAE0G,EAAAA,OAAO,UACT1G,EAAEkJ,EAAAA,OACF1G,OAAOqG,EAAQrG,OAASqG,EAAQrG,OAAS,GACzCxC,EAAEiF,EAAAA,QACF,CACIgE,KAAMpC,EACNgC,QAASA,EACTP,aAAa,EACbtD,cAAc,EACdhE,MAAO6H,EAAUA,EAAQ7H,MAAQ,GACjC0E,OAAQmD,EAAUA,EAAQnD,OAAS,EACnC6E,iBAAkB,OAClBpC,OAAQ,KACRiF,UAAU,EACV3K,MAAOoG,EAAUA,EAAQpG,MAAQ,EACjC8C,QAAS,EACTJ,eAAgB,SAACyE,GACbC,WAAW,WACP/E,EAAME,cAAe,EACrBF,EAAMI,QAAU,EAChBJ,EAAMG,OAAQ,GACC4F,EAAAA,EAAAA,gBAAAA,QAChBjB,KAIX,QACA5J,EAAED,EAAAA,MAAM8I,EAAQwE,OAAS5N,EAAcC,cAAAA,QAAU,EAAID,EAAcC,cAAAA,SACnEM,EAAEkJ,EAAAA,SAQCpE,OAJPA,EAAMV,KAAKU,EAAMyF,kBAIVzF,GA7CJ,QAAA,sBAAA;;ACJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,IAAMwI,EAAS,CAClB9K,OAAQ,GADL,QAAA,OAAA;;ACkDN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,4BAAA,EAAA,QAAA,QAAA,EAnDD,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,uBACA,EAAA,QAAA,sBACA,EAAA,QAAA,wBACA,EAAA,QAAA,gBAEa+K,EAAyB,SAACjN,EAAGC,GACpCoE,EAAAA,EAAAA,MAAMC,IAAI,iBACNtC,IAAAA,EAAStC,EAAE+I,EAAAA,IAAI,CACjB/I,EAAEgJ,EAAAA,OAAO,UACThJ,EAAEsF,EAAAA,IAAIhF,EAAGC,GACTP,EAAE0G,EAAAA,OAAO,UACT1G,EAAEkJ,EAAAA,OACF1G,OAEsB,GAAVA,EAAAA,QAAAA,OAAc8K,EAAO9K,OAAAA,OAASJ,EAAQI,QAAAA,QAElD,CACI8F,aAAa,EACbtD,cAAc,EACdhE,MAAO,IACPuJ,iBAAkB,OAClB/H,OAAQ,EACR2F,OAAQ,KACR5C,OAAQ,EAERJ,eAAgB,SAACyE,GACbC,WAAW,WACPvH,EAAO0C,cAAe,EACtB1C,EAAO4C,QAAU,GACJ2F,EAAAA,EAAAA,cAAAA,QACdjB,KAGX,SACA5J,EAAED,EAAAA,MAAMN,EAAcC,cAAAA,SACtBM,EAAEkJ,EAAAA,OACFlJ,EAAEiF,EAAAA,QACFwB,EAAE,KAKCnE,OAFPA,EAAO8B,KAAK9B,EAAOiI,kBAEZjI,GAKI,SAASkL,IAEbxN,OAAAA,EAAE2H,EAAAA,IAAI,UAAU,GAC1B,QAAA,uBAAA;;AClDM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,IAAM8F,EAAmB,CAC5B/H,OAAQ,EACR1E,MAAO,GACPyB,MAAO,EACPD,OAAQ,EACR6K,QAAQ,GALL,QAAA,iBAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,IAAMK,EAAgB,CACzBhI,OAAQ,EACR1E,MAAO,GACPyB,MAAO,EACPD,OAAQ,EACR6K,QAAQ,GALL,QAAA,cAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,IAAMM,EAAgB,CACzBjI,OAAQ,EACR1E,MAAO,GACPyB,MAAO,EACPD,OAAQ,EACR6K,QAAQ,GALL,QAAA,cAAA;;ACIA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EALP,IAAA,EAAA,QAAA,wBACA,EAAA,QAAA,oBACA,EAAA,QAAA,oBAGaO,EAAe,CACdF,OAAAA,EADc,cAEdC,OAAAA,EAFc,cAGVF,WAAAA,EAAAA,kBAHX,QAAA,aAAA;;ACkCN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,YAAA,EAAA,QAAA,aAAA,EAvCD,IAAA,EAAA,QAAA,oBACA,EAAA,QAAA,qBACA,EAAA,QAAA,qBACA,EAAA,QAAA,qBAGO,SAASI,EAAYC,GACjB,OAAA,EAAuBA,EAAAA,wBAAAA,EAAaxN,EAAGwN,EAAavN,GAIxD,SAASwN,EAAanH,GAErBA,GAAW,MAAXA,GAAqC,GAAlBA,EAAQkB,OAE1B,IAAA,IAAIK,KAAUvB,GAEXA,EAAAA,EAAAA,wBAAAA,EAAQuB,GAAQ7H,EAChBsG,EAAQuB,GAAQ5H,EAChBqG,EAAQuB,GAAQtB,MAMrB,SAASmH,EAAa5F,GAErBA,GAAU,MAAVA,GAAmC,GAAjBA,EAAON,OAExB,IAAA,IAAIhD,KAASsD,EAAQ,CAEhBS,IAAAA,EAAU+E,EAAaxF,aAAAA,EAAOtD,GAAO+B,OAGvCuB,EAAAA,EAAAA,uBAAAA,EAAOtD,GAAOxE,EACd8H,EAAOtD,GAAOvE,EACd6H,EAAOtD,GAAO+B,KACdgC,GAAoB;;ACvBzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAdP,IAAA,EAAA,QAAA,wBACA,EAAA,QAAA,gBACA,EAAA,QAAA,gBACA,EAAA,QAAA,aACA,EAAA,QAAA,aACA,EAAA,QAAA,aACA,EAAA,QAAA,qBAQaoF,EAAgB,SAAC5L,GACxBsC,EAAAA,EAAAA,MAAMC,IAAI,mBACJwC,EAAAA,EAAAA,SAAAA,EAAW/E,WAAAA,GAAOgE,IAAKe,EAAW/E,WAAAA,IAElCC,EAAAA,QAAAA,QAAS,EAAY8E,EAAAA,aAAAA,EAAW/E,WAAAA,GAAOsE,YAKvCpE,EAAAA,QAAAA,gBAAgB,EAAsBH,EAAAA,uBAAAA,EAAQE,QAAAA,OAClDF,EAAQG,QAAAA,cACRH,EAAQG,QAAAA,cAAcsG,UAEbzB,EAAAA,EAAAA,cAAAA,EAAW/E,WAAAA,GAAO0E,UAElBK,EAAAA,EAAAA,cAAAA,EAAW/E,WAAAA,GAAOuE,UAEjBQ,EAAAA,EAAAA,eAAAA,EAAW/E,WAAAA,GAAOiE,WAC5BlE,EAAQE,QAAAA,SAlBT,QAAA,cAAA;;ACGN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAjBD,IAAA,EAAA,QAAA,gCACA,EAAA,QAAA,oBACA,EAAA,QAAA,aACA,EAAA,QAAA,4BAGO,SAAS4L,EAAU7L,GAGpB8L,EAAAA,EAAAA,OAAO,CAAC,KAAM,MAAO,MAAO,OAEhB9L,EAAAA,EAAAA,eAAAA,IALe,EAAA,EAAA,WAS7B,EAAA,EAAA;;ACwHH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAvID,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,qBACA,EAAA,QAAA,0BACA,EAAA,QAAA,oBACA,EAAA,QAAA,mBAIO,SAAS+L,KACSvD,EAAAA,EAAAA,sBAAAA,OAGfrI,IAAAA,EAASJ,EAAQE,QAAAA,OAAOW,KAGxBR,EAAQL,EAAQK,QAAAA,MAAQM,EAAYN,YAAAA,MAEpC4L,EAAS5L,EAAQD,EAGrBuG,EAAAA,EAAAA,IAAI,CAACxC,KAAKvG,EAAEQ,EAAAA,QAASR,EAAES,EAAAA,UAAW6E,IAAI,EAAG,GAAIkB,MAAM,GAAI,GAAI,MAGzDhE,EAAS,GACPuG,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA4B,GAAbR,EAAES,EAAAA,UACzBT,EAAE+L,EAAAA,KAAKX,EAAmBC,mBAAAA,aAAc,GACxC7E,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAMfqC,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA4B,IAAbR,EAAES,EAAAA,UACzBT,EAAE+L,EAAAA,KAAKX,EAAmBE,mBAAAA,WAAa7I,EAAO,GAC9C+D,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAIXqC,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA4B,GAAbR,EAAES,EAAAA,UACzBT,EAAE+L,EAAAA,KAAKX,EAAmBG,mBAAAA,YAAc/I,EAAQ,GAChDgE,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAIXqC,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA4B,IAAbR,EAAES,EAAAA,UACzBT,EAAE+L,EAAAA,KAAKX,EAAmBI,mBAAAA,YAAc6C,EAAQ,GAChD7H,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAIPgF,IAAAA,EAAoB1L,EAAE+I,EAAAA,IAAI,CAC5BgD,KAAKX,EAAmBM,mBAAAA,kBAAmB,CACvCM,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,UACT1G,EAAEsF,EAAAA,IAAgB,IAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,UAC1B,CACID,MAAO,KAAKA,MACZC,OAAQ,KAAKA,QAEjBgG,EAAE,KAwBFjE,GApBkBxC,EAAE+I,EAAAA,IAAI,CACxB/I,EAAEsF,EAAAA,IAAIoG,EAAkBpG,IAAIhF,EAAGoL,EAAkBpG,IAAI/E,GACrDP,EAAEuG,EAAAA,KAA+B,IAA1BmF,EAAkBlL,MACM,IAA3BkL,EAAkBjL,QACtBT,EAAE0G,EAAAA,OAAO,UACT1G,EAAEwG,EAAAA,MAAM,EAAG,EAAG,GACd0C,OACAlJ,EAAEuO,EAAAA,QAAQ,EAAGC,UAIHC,QAAQ,YACLrM,EAAAA,EAAAA,cAAAA,EAAb,UACaW,EAAAA,EAAAA,cAAAA,EAAb,aACQL,EAAAA,QAAAA,sBAAsB0B,OAC5B2D,EAAAA,EAAAA,GAAGV,EAAOE,OAAAA,KAAMnF,EAAQC,QAAAA,SAKhB,GAAVG,EAAAA,CAIEiJ,IAAAA,EAAoBzL,EAAE+I,EAAAA,IAAI,CAC5BgD,KAAKX,EAAmBK,mBAAAA,kBAAmB,CACvCO,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,UACT1G,EAAEsF,EAAAA,IAAgB,IAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,UAC1B,CACID,MAAO,KAAKA,MACZC,OAAQ,KAAKA,QAEjBgG,EAAE,KAMgBzG,EAAE+I,EAAAA,IAAI,CACxB/I,EAAEsF,EAAAA,IAAImG,EAAkBnG,IAAIhF,EAAGmL,EAAkBnG,IAAI/E,GACrDP,EAAEuG,EAAAA,KAA+B,IAA1BkF,EAAkBjL,MACM,IAA3BiL,EAAkBhL,QACtBT,EAAE0G,EAAAA,OAAO,UACT1G,EAAEwG,EAAAA,MAAM,EAAG,EAAG,GACd0C,OACAlJ,EAAEuO,EAAAA,QAAQ,EAAGC,UAIHC,QAAQ,YACE1L,EAAAA,EAAAA,qBAAAA,EAApB,YAAiCX,EAAjC,SACQM,EAAAA,QAAAA,sBAAsB0B,OAC5B2D,EAAAA,EAAAA,GAAGV,EAAOE,OAAAA,KAAMnF,EAAQC,QAAAA;;ACnCjC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EA7FD,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,qBACA,EAAA,QAAA,0BACA,EAAA,QAAA,oBACA,EAAA,QAAA,mBAGO,SAASqM,IAGV3F,EAAAA,EAAAA,IAAI,CAACxC,KAAKvG,EAAEQ,EAAAA,QAASR,EAAES,EAAAA,UAAW6E,IAAI,EAAG,GAAIkB,MAAM,GAAI,GAAI,MAG3DuC,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,IAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,UAC1BT,EAAE+L,EAAAA,KAAKjB,EAAaC,aAAAA,oBAAqB,CACrCiB,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAKXqC,EAAAA,EAAAA,IAAI,CACFgD,KAAKjB,EAAaE,aAAAA,iBAAkB,CAChCgB,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,QACT1G,EAAEsF,EAAAA,IAAgB,IAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,YAS5BsI,EAAAA,EAAAA,IAAI,CACF/I,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,UAC1BT,EAAE+L,EAAAA,KAAKjB,EAAaG,aAAAA,qBAAsB,CACtCe,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,YAIXqC,EAAAA,EAAAA,IAAI,CACFgD,KAAKjB,EAAaI,aAAAA,aAAc,CAC5Bc,KAAM,KAEVxF,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,QACT1G,EAAEsF,EAAAA,IAAgB,IAAZtF,EAAEQ,EAAAA,QAA6B,GAAbR,EAAES,EAAAA,YAMxB0K,IAAAA,EAAkBnL,EAAE+I,EAAAA,IAAI,CAC1BgD,KAAKjB,EAAaK,aAAAA,gBAAiB,GACnC3E,MAAM8H,IAAI,IAAK,IAAK,MACpBtO,EAAE0G,EAAAA,OAAO,UACT1G,EAAEsF,EAAAA,IAAgB,GAAZtF,EAAEQ,EAAAA,QAA4B,IAAbR,EAAES,EAAAA,UACzB,CACID,MAAO,KAAKA,MACZC,OAAQ,KAAKA,QAEjBgG,EAAE,KAIczG,EAAE+I,EAAAA,IAAI,CACtB/I,EAAEsF,EAAAA,IAAI6F,EAAgB7F,IAAIhF,EAAG6K,EAAgB7F,IAAI/E,GACjDP,EAAEuG,EAAAA,KAA6B,IAAxB4E,EAAgB3K,MACM,IAAzB2K,EAAgB1K,QACpBT,EAAE0G,EAAAA,OAAO,UACT1G,EAAEwG,EAAAA,MAAM,EAAG,EAAG,GACd0C,OACAlJ,EAAEuO,EAAAA,QAAQ,EAAGC,UAMLC,QAAQ,YACHrM,EAAAA,EAAAA,cAAAA,EAAb,SACE2F,EAAAA,EAAAA,GAAGV,EAAOE,OAAAA,KAAMnF,EAAQC,QAAAA,QACL+B,EAAAA,EAAAA,sBAAAA;;ACjE7B,aAzBA,IAAA,EAAA,QAAA,YAEA,EAAA,QAAA,6BACA,EAAA,QAAA,iBACA,EAAA,QAAA,gBACA,EAAA,QAAA,iBACA,EAAA,QAAA,mBACA,EAAA,QAAA,kBACA,EAAA,QAAA,kBAIApE,EAAE2E,EAAAA,MAAMhF,QAAUF,EAAcE,cAAAA,QAChCK,EAAE2E,EAAAA,MAAM/E,QAAUH,EAAcG,cAAAA,SAGhC,EAEA,EAAA,mBACAI,EAAE2O,EAAAA,MAAMtH,EAAOC,OAAAA,KAAMoH,EAArB,aACA1O,EAAE2O,EAAAA,MAAMtH,EAAOE,OAAAA,KAAM2G,EAArB,WACAlO,EAAE2O,EAAAA,MAAMtH,EAAOG,OAAAA,IAAK4G,EAApB,YAIA,EAAYQ,EAAAA,aAAAA,KAAK,WACX7G,EAAAA,EAAAA,GAAGV,EAAOC,OAAAA","file":"src.9715d0fb.js","sourceRoot":"..\\src","sourcesContent":["import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tdeg2rad,\n\trad2deg,\n\tisVec2,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n} from \"./utils\";\n\nimport {\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tVec2,\n\tMat4,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tTimer,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteData,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tQuad,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tColor,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n} from \"./types\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst audio = audioInit();\n\nconst app = appInit({\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\tcrisp: gopt.crisp,\n\tcanvas: gopt.canvas,\n\troot: gopt.root,\n\tstretch: gopt.stretch,\n\ttouchToMouse: gopt.touchToMouse ?? true,\n\taudioCtx: audio.ctx,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tbackground: gopt.background ? rgb(gopt.background) : undefined,\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\ttexFilter: gopt.texFilter,\n\tstretch: gopt.stretch,\n\tletterbox: gopt.letterbox,\n});\n\nconst {\n\twidth,\n\theight,\n} = gfx;\n\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gopt.logMax,\n});\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\n// TODO: clean\nfunction play(id: string, opt: AudioPlayOpt = {}): AudioPlay {\n\tconst pb = audio.play({\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t});\n\tonLoad(() => {\n\t\tconst snd = assets.sounds[id];\n\t\tif (!snd) {\n\t\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t\t}\n\t\tconst pb2 = audio.play(snd, opt);\n\t\tfor (const k in pb2) {\n\t\t\tpb[k] = pb2[k];\n\t\t}\n\t});\n\treturn pb;\n}\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos();\n}\n\nfunction mouseWorldPos(): Vec2 {\n\treturn game.camMousePos;\n}\n\n// wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\nfunction drawSprite(opt: DrawSpriteOpt) {\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\tconst spr = (() => {\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\treturn assets.sprites[opt.sprite];\n\t\t} else {\n\t\t\treturn opt.sprite;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t}\n\tconst q = spr.frames[opt.frame ?? 0];\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\tgfx.drawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || quad(0, 0, 1, 1)),\n\t});\n}\n\n// wrapper around gfx.drawText to integrate with font assets mananger / default font\nfunction drawText(opt: DrawTextOpt) {\n\t// @ts-ignore\n\tconst fid = opt.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText({\n\t\t...opt,\n\t\tfont: font,\n\t});\n}\n\nconst DEF_GRAVITY = 1600;\nconst DEF_ORIGIN = \"topleft\";\n\ninterface Game {\n\tloaded: boolean,\n\tevents: Record<string, IDList<() => void>>,\n\tobjEvents: Record<string, IDList<TaggedEvent>>,\n\tobjs: IDList<GameObj>,\n\ttimers: IDList<Timer>,\n\tcam: Camera,\n\tcamMousePos: Vec2,\n\tcamMatrix: Mat4,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\ton<F>(ev: string, cb: F): EventCanceller,\n\ttrigger(ev: string, ...args),\n\tscenes: Record<SceneID, SceneDef>,\n\tpaused: boolean,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nconst game: Game = {\n\n\tloaded: false,\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// in game pool\n\tobjs: new IDList(),\n\ttimers: new IDList(),\n\n\t// cam\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t},\n\n\tcamMousePos: app.mousePos(),\n\tcamMatrix: mat4(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\n\tscenes: {},\n\tpaused: false,\n\n};\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.camMatrix.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.camMatrix.invert().multVec2(p);\n}\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tconst events = {};\n\n\tconst obj = {\n\n\t\t_id: null,\n\t\thidden: false,\n\t\tpaused: false,\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", () => {\n\t\t\t\t\t\tcheckDeps();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\texists(): boolean {\n\t\t\treturn this._id !== null;\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\n\t\t\tif (!this.exists()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.trigger(\"destroy\");\n\t\t\tgame.objs.delete(this._id);\n\t\t\tthis._id = null;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\tconst obj = make(comps);\n\tobj._id = game.objs.push(obj);\n\tobj.trigger(\"add\");\n\tonLoad(() => obj.trigger(\"load\"));\n\treturn obj;\n}\n\nfunction readd(obj: GameObj): GameObj {\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\tgame.objs.delete(obj._id);\n\tobj._id = game.objs.push(obj);\n\treturn obj;\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// TODO: detect if is currently in another action?\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tconst obj = add([{ update: tag }]);\n\t\treturn () => destroy(obj);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tconst obj = add([{ draw: tag }]);\n\t\treturn () => destroy(obj);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push({\n\t\t\ttime: t,\n\t\t\taction: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => app.isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.isMouseMoved() && f(mousePos(), app.mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n}\n\n// TODO: put this in app.ts's and handle in game loop\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(app.screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", audio.burp);\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: Tag | Tag[]): GameObj[] {\n\n\tconst objs = [...game.objs.values()].sort((o1, o2) => {\n\n\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\tif (l1 == l2) {\n\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t} else {\n\t\t\treturn l1 - l2;\n\t\t}\n\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in game with tag t\nfunction every<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// every but in reverse order\nfunction revery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().reverse().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).reverse().forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\tobj.destroy();\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, destroy);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tevery((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(direction: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction cleanup(time: number = 0): CleanupComp {\n\tlet timer = 0;\n\treturn {\n\t\tid: \"cleanup\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tupdate() {\n\t\t\tconst screenRect = {\n\t\t\t\tp1: vec2(0, 0),\n\t\t\t\tp2: vec2(width(), height()),\n\t\t\t}\n\t\t\tif (testAreaRect(this.screenArea(), screenRect)) {\n\t\t\t\ttimer = 0;\n\t\t\t} else {\n\t\t\t\ttimer += dt();\n\t\t\t\tif (timer >= time) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\tthis.hovers(() => {\n\t\t\t\t\tapp.cursor(this.area.cursor);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : mouseWorldPos();\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tevery(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tevery(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: game.camMatrix.multVec2(area.p1),\n\t\t\t\t\tp2: game.camMatrix.multVec2(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tpos: obj.pos,\n\t\tscale: obj.scale,\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\tangle: obj.angle,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = { ...spr.frames[0] };\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update() {\n\n\t\tconst name = this.font ?? gopt.font ?? DEF_FONT;\n\t\tconst font = assets.fonts[name];\n\n\t\tif (!font) {\n\t\t\tthrow new Error(`font not found: \"${name}\"`);\n\t\t}\n\n\t\tconst ftext = gfx.fmtText({\n\t\t\t...getRenderProps(this),\n\t\t\ttext: this.text + \"\",\n\t\t\tsize: this.textSize,\n\t\t\tfont: font,\n\t\t\twidth: opt.width,\n\t\t\ttransform: opt.transform,\n\t\t});\n\n\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tload() {\n\t\t\tupdate.call(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tgfx.drawFmtText(update.call(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tgfx.drawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tgfx.drawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tgfx.drawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(n?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (n && action) {\n\t\ttimers.pushd({\n\t\t\ttime: n,\n\t\t\taction: action,\n\t\t});\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(n: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd({\n\t\t\t\ttime: n,\n\t\t\t\taction: action,\n\t\t\t});\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\ttimer.time -= dt();\n\t\t\t\tif (timer.time <= 0) {\n\t\t\t\t\ttimer.action.call(this);\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(initState: string, stateList?: string[]): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\t\tid: \"state\",\n\t\tstate: initState,\n\t\tenterState(state: string, ...args) {\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\t\t\ttrigger(\"leave\", this.state, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", this.state, ...args);\n\t\t},\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\t};\n\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn game.objs.size;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: (msg) => logger.info(`[${app.time().toFixed(2)}] ${msg}`),\n\terror: (msg) => logger.error(`[${app.time().toFixed(2)}] ${msg}`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn game.paused;\n\t},\n\tset paused(v) {\n\t\tgame.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction onLoad(cb: () => void): void {\n\tif (game.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.objs.forEach((obj) => {\n\t\t\tif (!obj.stay) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t});\n\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t};\n\n\t\tgame.camMousePos = app.mousePos();\n\t\tgame.camMatrix = mat4();\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t}\n\t};\n\n}\n\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSpriteAtlas: assets.loadSpriteAtlas,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\tloadAseprite: assets.loadAseprite,\n\tloadPedit: assets.loadPedit,\n\tloadBean: assets.loadBean,\n\tload: assets.load,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\trecord: record,\n\tfocused: app.isFocused,\n\tisFocused: app.isFocused,\n\tfocus: app.focus,\n\tcursor: app.cursor,\n\tregCursor,\n\tfullscreen: app.fullscreen,\n\tisFullscreen: app.isFullscreen,\n\tonLoad,\n\tready: onLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\taction: onUpdate,\n\trender: onDraw,\n\tcollides: onCollide,\n\tclicks: onClick,\n\thovers: onHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tkeyDown: onKeyDown,\n\tkeyPress: onKeyPress,\n\tkeyPressRep: onKeyPressRepeat,\n\tkeyRelease: onKeyRelease,\n\tmouseDown: onMouseDown,\n\tmouseClick: onMousePress,\n\tmouseRelease: onMouseRelease,\n\tmouseMove: onMouseMove,\n\tcharInput: onCharInput,\n\ttouchStart: onTouchStart,\n\ttouchMove: onTouchMove,\n\ttouchEnd: onTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos: app.mouseDeltaPos,\n\tisKeyDown: app.isKeyDown,\n\tisKeyPressed: app.isKeyPressed,\n\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\tisKeyReleased: app.isKeyReleased,\n\tisMouseDown: app.isMouseDown,\n\tisMousePressed: app.isMousePressed,\n\tisMouseReleased: app.isMouseReleased,\n\tisMouseMoved: app.isMouseMoved,\n\tkeyIsDown: app.isKeyDown,\n\tkeyIsPressed: app.isKeyPressed,\n\tkeyIsPressedRep: app.isKeyPressedRepeat,\n\tkeyIsReleased: app.isKeyReleased,\n\tmouseIsDown: app.isMouseDown,\n\tmouseIsClicked: app.isMousePressed,\n\tmouseIsReleased: app.isMouseReleased,\n\tmouseIsMoved: app.isMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\tburp: audio.burp,\n\taudioCtx: audio.ctx,\n\t// math\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\tdir,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\t// TODO: wrap these to use assets lib for the \"shader\" prop\n\tdrawRect: gfx.drawRect,\n\tdrawLine: gfx.drawLine,\n\tdrawLines: gfx.drawLines,\n\tdrawTriangle: gfx.drawTriangle,\n\tdrawCircle: gfx.drawCircle,\n\tdrawEllipse: gfx.drawEllipse,\n\tdrawUVQuad: gfx.drawUVQuad,\n\tdrawPolygon: gfx.drawPolygon,\n\tpushTransform: gfx.pushTransform,\n\tpopTransform: gfx.popTransform,\n\tpushTranslate: gfx.pushTranslate,\n\tpushRotate: gfx.pushRotateZ,\n\tpushScale: gfx.pushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dirs\n\tLEFT: vec2(-1, 0),\n\tRIGHT: vec2(1, 0),\n\tUP: vec2(0, -1),\n\tDOWN: vec2(0, 1),\n\t// colors\n\tRED: rgb(255, 0, 0),\n\tGREEN: rgb(0, 255, 0),\n\tBLUE: rgb(0, 0, 255),\n\tYELLOW: rgb(255, 255, 0),\n\tMAGENTA: rgb(255, 0, 255),\n\tCYAN: rgb(0, 255, 255),\n\tWHITE: rgb(255, 255, 255),\n\tBLACK: rgb(0, 0, 0),\n\t// dom\n\tcanvas: app.canvas,\n};\n\nplug(kaboomPlugin);\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nlet numFrames = 0;\n\nfunction frames() {\n\treturn numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused) {\n\t\t\tobj.trigger(\"update\", obj);\n\t\t}\n\t});\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst size = vec2(width(), height());\n\tconst cam = game.cam;\n\tconst shake = dir(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tgame.camMatrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = assets.loadProgress();\n\n\tif (progress === 1) {\n\t\tgame.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / gfx.scale();\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tgfx.drawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / gfx.scale(),\n\t\t\t},\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst font = assets.fonts[DBG_FONT];\n\t\tconst lcolor = rgb(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\tfunction drawInspectTxt(pos, txt) {\n\n\t\t\tconst s = app.scale;\n\t\t\tconst pad = vec2(8);\n\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushTranslate(pos);\n\t\t\tgfx.pushScale(1 / s);\n\n\t\t\tconst ftxt = gfx.fmtText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: font,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\n\t\t\tconst bw = ftxt.width + pad.x * 2;\n\t\t\tconst bh = ftxt.height + pad.x * 2;\n\n\t\t\tif (pos.x + bw / s >= width()) {\n\t\t\t\tgfx.pushTranslate(vec2(-bw, 0));\n\t\t\t}\n\n\t\t\tif (pos.y + bh / s >= height()) {\n\t\t\t\tgfx.pushTranslate(vec2(0, -bh));\n\t\t\t}\n\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftxt);\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t\t// draw area outline\n\t\tevery((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst scale = gfx.scale() * (obj.fixed ? 1: (game.cam.scale.x + game.cam.scale.y) / 2);\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.pushTransform();\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4) / scale;\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t});\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.popTransform();\n\t\t\t}\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectTxt(vec2(8 / app.scale), `FPS: ${app.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), 0);\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t});\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = gfx.fmtText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t});\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tgfx.drawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tgfx.drawFmtText(ftxt);\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(0, height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(24, -24);\n\n\t\tgfx.drawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t});\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.showLog) {\n\t\tlogger.draw();\n\t}\n\n}\n\napp.run(() => {\n\n\tnumFrames++;\n\n\tif (!game.loaded) {\n\t\tgfx.frameStart();\n\t\tdrawLoadScreen();\n\t\tgfx.frameEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused && gopt.debug !== false) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tgfx.frameStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t}\n\n});\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tlogger.error(`Error: ${e.error.message}`);\n\tapp.quit();\n\tapp.run(() => {\n\t\tif (assets.loadProgress() === 1) {\n\t\t\tgfx.frameStart();\n\t\t\tlogger.draw();\n\t\t\tgfx.frameEnd();\n\t\t}\n\t});\n});\n\nreturn ctx;\n\n};\n","import {\n\tVec2,\n\tVec3,\n\tVec4,\n\tMat4,\n\tColor,\n\tQuad,\n\tPoint,\n\tRect,\n\tCircle,\n\tPolygon,\n\tLine,\n\tArea,\n\tRNG,\n} from \"./types\";\n\nfunction deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\tmult(other: Color): Color {\n\t\t\treturn rgb(\n\t\t\t\tthis.r * other.r / 255,\n\t\t\t\tthis.g * other.g / 255,\n\t\t\t\tthis.b * other.b / 255,\n\t\t\t);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.b\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction hsl2rgb(h: number, s: number, l: number): Color {\n\n\tif (s == 0){\n\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t}\n\n\tconst hue2rgb = (p, q, t) => {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\tconst p = 2 * l - q;\n\tconst r = hue2rgb(p, q, h + 1 / 3);\n\tconst g = hue2rgb(p, q, h);\n\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\treturn rgb(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\n// TODO\nfunction testRectCircle(r: Rect, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nfunction testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nfunction testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nfunction testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nfunction testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nfunction testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nfunction testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet has = false;\n\n\tfor (let i = 0; i < p.length; i++) {\n\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\n\t\tif (\n\t\t\t((p1.y > pt.y && p2.y < pt.y) || (p1.y < pt.y && p2.y > pt.y))\n\t\t\t&& (pt.x < (p2.x - p1.x) * (pt.y - p1.y) / (p2.y - p1.y) + p1.x)\n\t\t) {\n\t\t\thas = !has;\n\t\t}\n\n\t}\n\n\treturn has;\n\n}\n\nfunction testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nfunction testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n","class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nfunction downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nfunction downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n\tdownloadBlob,\n\tdownloadURL,\n};\n","import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tOrigin,\n\tGfxShader,\n\tGfxTexture,\n\tGfxTexData,\n\tGfxFont,\n\tUniform,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tTexWrap,\n\tFormattedText,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tDrawTextOpt,\n} from \"./types\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefShader: GfxShader,\n\tcurShader: GfxShader,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxOpt = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextOpt2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n\ttransform?: (idx: number, ch: string) => CharTransform,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, opt?: GfxTexOpt): GfxTexture,\n\tmakeShader(vert: string, frag: string): GfxShader,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(opt: DrawTextureOpt),\n\tdrawText(opt: DrawTextOpt2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(opt: DrawRectOpt),\n\tdrawLine(opt: DrawLineOpt),\n\tdrawLines(opt: DrawLinesOpt),\n\tdrawTriangle(opt: DrawTriangleOpt),\n\tdrawCircle(opt: DrawCircleOpt),\n\tdrawEllipse(opt: DrawEllipseOpt),\n\tdrawPolygon(opt: DrawPolygonOpt),\n\tdrawUVQuad(opt: DrawUVQuadOpt),\n\tfmtText(opt: DrawTextOpt2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gopt: GfxOpt): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, opt: GfxTexOpt = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (opt.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tshader: GfxShader = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tshader = shader ?? gfx.defShader;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curShader = shader;\n\t\tgfx.curUniform = uniform;\n\n\t\tindices.forEach((i) => {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE);\n\t\t});\n\n\t\tverts.forEach((v) => {\n\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t);\n\t\t});\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curShader.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curShader.bind();\n\t\tgfx.curShader.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curShader.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gopt.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = opt.quad || quad(0, 0, 1, 1);\n\t\tconst color = opt.color || rgb(255, 255, 255);\n\t\tconst opacity = opt.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushRotateZ(opt.angle);\n\t\tpushScale(opt.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.tex, opt.shader, opt.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\topt: DrawTextureOpt,\n\t) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = opt.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = opt.tex.width * q.w;\n\t\tconst h = opt.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...opt,\n\t\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...opt,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPolygon({ ...opt, offset, pts });\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = opt.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: opt.color ?? rgb(),\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPolygon({\n\t\t\t...opt,\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...opt,\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPolygon({\n\t\t\t...opt,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\topt.radiusX,\n\t\t\t\topt.radiusY,\n\t\t\t\topt.start ?? 0,\n\t\t\t\topt.end ?? 360,\n\t\t\t\topt.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = opt.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushScale(opt.scale);\n\t\tpushRotateZ(opt.angle);\n\t\tpushTranslate(opt.offset);\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? rgb();\n\n\t\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, gfx.defTex, opt.shader, opt.uniform);\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(opt: DrawTextOpt2): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = opt.font;\n\t\tconst chars = (opt.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = opt.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(opt.pos || 0);\n\t\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\t\tlet idx = 0;\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tidx += 1;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tconst fchar = {\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\t\torigin: opt.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.transform) {\n\t\t\t\t\t\tconst tr = opt.transform(idx, char) ?? {};\n\t\t\t\t\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\t\t\t\t\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\t\t\t\t\t\tif (tr.angle) fchar.angle += tr.angle;\n\t\t\t\t\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\t\t\t\t\t\tif (tr.opacity) fchar.opacity *= tr.opacity;\n\t\t\t\t\t}\n\t\t\t\t\tfchars.push(fchar);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt2) {\n\t\tdrawFmtText(fmtText(opt));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gopt.width && gopt.height && gopt.stretch) {\n\t\t\tif (gopt.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gopt.width / gopt.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gopt.height * r1;\n\t\t\t\t\tgfx.height = gopt.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gopt.width;\n\t\t\t\t\tgfx.height = gopt.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gopt.width;\n\t\t\t\tgfx.height = gopt.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gopt.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeShader,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPolygon,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n","import {\n\tvec2,\n} from \"./math\";\n\nimport {\n\tKey,\n\tMouseButton,\n\tVec2,\n\tCursor,\n} from \"./types\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppOpt = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseStates: Record<string, ButtonState>,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tisMouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tisKeyPressed: boolean,\n\tisKeyPressedRepeat: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tisKeyDown(k?: Key): boolean,\n\tisKeyPressed(k?: Key): boolean,\n\tisKeyPressedRepeat(k?: Key): boolean,\n\tisKeyReleased(k?: Key): boolean,\n\tisMouseDown(m?: MouseButton): boolean,\n\tisMousePressed(m?: MouseButton): boolean,\n\tisMouseReleased(m?: MouseButton): boolean,\n\tisMouseMoved(m?: MouseButton): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): void,\n\tisFullscreen(): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tisFocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\nfunction appInit(gopt: AppOpt = {}): App {\n\n    const root = gopt.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gopt.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tmouseStates: {},\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gopt.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gopt.width && gopt.height && !gopt.stretch) {\n\t\tapp.canvas.width = gopt.width * app.scale;\n\t\tapp.canvas.height = gopt.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tif (isFullscreen()) {\n\t\t\t// in fullscreen mode browser adds letter box to preserve original canvas aspect ratio, but won't give us the transformed mouse position\n\t\t\t// TODO\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t} else {\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t}\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\t// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\tconst mouseButtons = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t];\n\n\tapp.canvas.addEventListener(\"mousedown\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"pressed\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"released\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.isKeyPressedRepeat = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.isKeyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseStates[\"left\"] = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"contextmenu\", function (e) {\n\t\te.preventDefault();\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgopt.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgopt.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction isMousePressed(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\";\n\t}\n\n\tfunction isMouseDown(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n\t}\n\n\tfunction isMouseReleased(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"released\";\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn app.isMouseMoved;\n\t}\n\n\tfunction isKeyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction isKeyPressedRepeat(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressedRepeat;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction isKeyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction isKeyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(app.canvas);\n\t\t} else {\n\t\t\texitFullscreen();\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement());\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tfor (const m in app.mouseStates) {\n\t\t\t\tapp.mouseStates[m] = processBtnState(app.mouseStates[m]);\n\t\t\t}\n\n\t\t\tapp.charInputted = [];\n\t\t\tapp.isMouseMoved = false;\n\t\t\tapp.isKeyPressed = false;\n\t\t\tapp.isKeyPressedRepeat = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tisFocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t\tisFullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n","// TODO: onend event\n\nimport {\n\tclamp,\n} from \"./math\";\n\nimport {\n\tSoundData,\n\tAudioPlay,\n\tAudioPlayOpt,\n} from \"./types\";\n\ntype Audio = {\n\tctx: AudioContext,\n\tmasterNode: GainNode,\n\tvolume(v: number): number,\n\tplay(snd: SoundData, opt?: AudioPlayOpt): AudioPlay,\n\tburp(opt?: AudioPlayOpt): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n\t// TODO handle audio unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\n\tconst burpSnd = {\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t};\n\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"failed to make burp\")\n\t});\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\tmasterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn masterNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsnd: SoundData,\n\t\topt: AudioPlayOpt = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = ctx.createBufferSource();\n\n\t\tsrcNode.buffer = snd.buf;\n\t\tsrcNode.loop = opt.loop ? true : false;\n\n\t\tconst gainNode = ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(masterNode);\n\n\t\tconst pos = opt.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tisPaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn this.isPaused();\n\t\t\t},\n\n\t\t\tisStopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn this.isStopped();\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn snd.buf.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(opt.speed);\n\t\thandle.detune(opt.detune);\n\t\thandle.volume(opt.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(burpSnd, opt);\n\t}\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tvolume,\n\t\tplay,\n\t\tburp,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n","import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tQuad,\n\tGfxTexData,\n} from \"./types\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsOpt = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\t// TODO: just use a counter?\n\tloaders: Record<number, boolean>,\n\t// TODO: allow Promise<SoundData>?\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path?: string): string,\n\tloadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt?: SpriteLoadOpt,\n\t): Promise<SpriteData>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData,\n\t): Promise<Record<string, SpriteData>>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\turl: string,\n\t): Promise<Record<string, SpriteData>>,\n\tloadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData>,\n\tloadPedit(name: string | null, src: string): Promise<SpriteData>,\n\tloadBean(name?: string): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt?: FontLoadOpt,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\tload<T>(prom: Promise<T>),\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gopt: AssetsOpt = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction load<T>(prom: Promise<T>): Promise<T> {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\treturn prom\n\t\t\t.catch(gopt.errHandler ?? console.error)\n\t\t\t.finally(() => assets.loaders[id] = true) as Promise<T>;\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// TODO: support SpriteLoadSrc\n\tfunction loadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: FontLoadOpt = {},\n\t): Promise<FontData> {\n\t\treturn load(new Promise<FontData>((resolve, reject) => {\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img, opt), gw, gh, opt.chars ?? ASCII_CHARS);\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}));\n\t}\n\n\tfunction getSprite(name: string): SpriteData | null {\n\t\treturn assets.sprites[name] ?? null;\n\t}\n\n\tfunction getSound(name: string): SoundData | null {\n\t\treturn assets.sounds[name] ?? null;\n\t}\n\n\tfunction getFont(name: string): FontData | null {\n\t\treturn assets.fonts[name] ?? null;\n\t}\n\n\tfunction getShader(name: string): ShaderData | null {\n\t\treturn assets.shaders[name] ?? null;\n\t}\n\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = [];\n\t\tconst qw = w / x;\n\t\tconst qh = h / y;\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t\treturn frames;\n\t}\n\n\tfunction loadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData | string\n\t): Promise<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\t// TODO: this adds a new loader asyncly\n\t\t\treturn load(fetch(loadRoot() + data)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t\t}\n\t\treturn load(loadSprite(null, src).then((atlas) => {\n\t\t\tconst map = {};\n\t\t\tconst w = atlas.tex.width;\n\t\t\tconst h = atlas.tex.height;\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name];\n\t\t\t\tconst spr = {\n\t\t\t\t\ttex: atlas.tex,\n\t\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\t\tanims: info.anims,\n\t\t\t\t}\n\t\t\t\tassets.sprites[name] = spr;\n\t\t\t\tmap[name] = spr;\n\t\t\t}\n\t\t\treturn map;\n\t\t}));\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt: SpriteLoadOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string | null,\n\t\t\tsrc: GfxTexData,\n\t\t\topt: SpriteLoadOpt = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst tex = gfx.makeTex(src, opt);\n\t\t\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: opt.anims || {},\n\t\t\t};\n\n\t\t\tif (name) {\n\t\t\t\tassets.sprites[name] = sprite;\n\t\t\t}\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tfetch(loadRoot() + src)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (data) => {\n\n\t\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = data.width;\n\t\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\t\tanims: data.anims,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t;\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tconst jsonPath = loadRoot() + jsonSrc;\n\n\t\t\tloadSprite(name, imgSrc)\n\t\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\t\tfetch(jsonPath)\n\t\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\t\treturn quad(\n\t\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t}));\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string | null,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeShader(vert, frag);\n\t\t\tif (name) {\n\t\t\t\tassets.shaders[name] = shader;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\n\t\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept dataurl\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tconst snd = {\n\t\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(snd);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\t\treturn loadSprite(name, beanSrc);\n\t}\n\n\tloadFont(\n\t\t\"apl386\",\n\t\tapl386Src,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"apl386o\",\n\t\tapl386oSrc,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"sink\",\n\t\tsinkSrc,\n\t\t6,\n\t\t8,\n\t\t{\n\t\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t\t}\n\t);\n\n\tloadFont(\n\t\t\"sinko\",\n\t\tsinkoSrc,\n\t\t8,\n\t\t10,\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadPedit,\n\t\tloadAseprite,\n\t\tloadBean,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\tload,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsOpt,\n\tAssets,\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n};\n","import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerOpt = {\n\tmax?: number,\n\ttime?: () => number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, opt: LoggerOpt = {}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = opt.max ?? 1;\n\n\t// TODO: draw rects first to reduce draw calls\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n","// explosion\n\nimport {\n\tCompList,\n\tVec2,\n\tComp,\n\tKaboomCtx,\n} from \"../types\";\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, opt?: BoomOpt): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\t\tconst speed = (opt.speed || 1) * 5;\n\t\tconst scale = opt.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(opt.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(opt.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n","// contains settings around the base game\r\nexport const GAME_SETTINGS = {\r\n    scaling: 1,\r\n    inspect: false,\r\n    showLog: false,\r\n}","// kaboom specific settings\r\nexport const KABOOM_SETTINGS = {\r\n    fullscreen: false,\r\n    scale: 1,\r\n}","import kaboom from \"kaboom\";\r\nimport { GAME_SETTINGS } from \"./config/game\";\r\nimport { KABOOM_SETTINGS } from \"./config/kaboom\";\r\n\r\n\r\n\r\nexport const k = kaboom({\r\n    fullscreen: KABOOM_SETTINGS.fullscreen,\r\n    scale: GAME_SETTINGS.scale,\r\n\r\n})","import { k } from '../kaboom';\r\nconst tileset = require('../assets/sprites/0x72_DungeonTilesetII_v1.4.png');\r\n\r\n\r\n\r\n// loads the elements from the defiend sprite sheet\r\nexport function loadGameSprites() {\r\n\r\n    k.loadSpriteAtlas(tileset, {\r\n        knight: {\r\n            x: 128,\r\n            y: 100,\r\n            width: 144,\r\n            height: 28,\r\n            sliceX: 9,\r\n            anims: {\r\n                idle: { from: 0, to: 3, loop: true, speed: 3 },\r\n                run: { from: 4, to: 7, loop: true, speed: 10 },\r\n                hit: 8,\r\n            },\r\n        },\r\n        skelet: {\r\n            x: 368,\r\n            y: 80,\r\n            width: 128,\r\n            height: 16,\r\n            sliceX: 8,\r\n            anims: {\r\n                idle: { from: 0, to: 3, loop: true, speed: 3 },\r\n                run: { from: 4, to: 7, loop: true, speed: 10 },\r\n            },\r\n        },\r\n        zombie: {\r\n            x: 368,\r\n            y: 144,\r\n            width: 128,\r\n            height: 16,\r\n            sliceX: 8,\r\n            anims: {\r\n                idle: { from: 0, to: 3, loop: true, speed: 3 },\r\n                run: { from: 4, to: 7, loop: true, speed: 10 },\r\n            },\r\n        },\r\n        masked_orc: {\r\n            x: 368,\r\n            y: 172,\r\n            width: 128,\r\n            height: 20,\r\n            sliceX: 8,\r\n            anims: {\r\n                idle: { from: 0, to: 3, loop: true, speed: 3 },\r\n                run: { from: 4, to: 7, loop: true, speed: 10 },\r\n            },\r\n        },\r\n        sword: {\r\n            x: 307,\r\n            y: 26,\r\n            width: 10,\r\n            height: 21,\r\n        },\r\n        hammer: {\r\n            x: 307,\r\n            y: 55,\r\n            width: 10,\r\n            height: 24,\r\n        },\r\n        wall_top_left: {\r\n            x: 16,\r\n            y: 0,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_top_mid: {\r\n            x: 32,\r\n            y: 0,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_top_right: {\r\n            x: 48,\r\n            y: 0,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n\r\n        wall_right: {\r\n            x: 48,\r\n            y: 16,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n\r\n\r\n        wall_side_top_left: {\r\n            x: 0,\r\n            y: 112,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_side_mid_left: {\r\n            x: 0,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_side_front_left: {\r\n            x: 0,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_side_top_right: {\r\n            x: 16,\r\n            y: 112,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_side_mid_right: {\r\n            x: 16,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_side_front_right: {\r\n            x: 16,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_mid: {\r\n            x: 32,\r\n            y: 16,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_left: {\r\n            x: 16,\r\n            y: 16,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_right: {\r\n            x: 48,\r\n            y: 16,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        floor_1: {\r\n            x: 16,\r\n            y: 64,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        floor_2: {\r\n            x: 32,\r\n            y: 64,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        floor_3: {\r\n            x: 48,\r\n            y: 64,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n\r\n        wall_corner_top_left: {\r\n            x: 32,\r\n            y: 112,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_top_right: {\r\n            x: 48,\r\n            y: 112,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_left: {\r\n            x: 32,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_right: {\r\n            x: 48,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_bottom_left: {\r\n            x: 32,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_bottom_right: {\r\n            x: 48,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_front_left: {\r\n            x: 32,\r\n            y: 160,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_corner_front_right: {\r\n            x: 48,\r\n            y: 160,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n\r\n        wall_inner_corner_l_top_left: {\r\n            x: 80,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_inner_corner_l_top_right: {\r\n            x: 64,\r\n            y: 128,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_inner_corner_mid_left: {\r\n            x: 80,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_inner_corner_mid_right: {\r\n            x: 64,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_inner_corner_t_top_left: {\r\n            x: 80,\r\n            y: 160,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        wall_inner_corner_t_top_right: {\r\n            x: 64,\r\n            y: 160,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        hole: {\r\n            x: 96,\r\n            y: 144,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        hearth_full: {\r\n            x: 288,\r\n            y: 256,\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n\r\n\r\n    });\r\n\r\n}\r\n","/*\r\nstores general informations for a completed level.\r\ncan be used to reset the last completed level\r\n*/\r\n\r\nexport const storage = {\r\n    level: 0,\r\n    player: null,\r\n    player_weapon: null,\r\n    health: 0,\r\n    score: 0,\r\n    backgroundMusicPlayer: null,\r\n    hitmarkerMusicPlayer: null,\r\n    swooshMusicPlayer: null,\r\n    playerTakesDamageMusicPlayer: null,\r\n\r\n}\r\n\r\n// resets to a clean storage object\r\nexport function resetStorage(storage) {\r\n    storage.level = 0;\r\n    storage.player = null;\r\n    storage.player_weapon = null;\r\n    storage.score = 0;\r\n    storage.health = 0;\r\n}\r\n\r\n\r\n/*\r\nstores informations for the current level.\r\ntempStorage gets used to update storage after completing a level\r\n*/\r\nexport const tempStorage = {\r\n    player_weapon: null,\r\n    score: 0,\r\n    health: 0,\r\n}\r\n\r\nexport function resetTempStorage(tempStorage) {\r\n    tempStorage.player_weapon = null;\r\n    tempStorage.score = 0;\r\n    tempStorage.health = storage.player.hp();\r\n\r\n}\r\n\r\n/**\r\n * resets the temp score and sets the \r\n * health value of the tempstorage to the value \r\n * before the player entered the level\r\n */\r\nexport function restartLevelStorage(tempstorage, storage) {\r\n    tempStorage.score = 0;\r\n    tempstorage.health = storage.health;\r\n}","// contains options around the sound settings\r\nexport const soundOptions = {\r\n    backgroundVolume: 0.1,\r\n    hitmarkerVolume: 0.1,\r\n    takedmgVolume: 0.1,\r\n    swooshVolume: 0.1,\r\n\r\n}","import { k } from \"../kaboom\"\r\n\r\nconst ambient = require('../assets/music/ambient.mp3');\r\nconst hitmarker = require('../assets/music/hitmarker.aac');\r\nconst takedmg = require('../assets/music/takedmg.aac');\r\nconst swoosh = require('../assets/music/swoosh.aac');\r\nimport { soundOptions } from \"../config/sound\";\r\nimport { storage } from \"./storage\"\r\n\r\n/* \r\nloads the music.\r\nall the music needs to be loaded before starting the game\r\n*/\r\nexport function loadMusic() {\r\n\r\n    const promises = [\r\n        k.loadSound(\"ambient\", ambient),\r\n        k.loadSound(\"hitmarker\", hitmarker),\r\n        k.loadSound(\"takedmg\", takedmg),\r\n        k.loadSound(\"swoosh\", swoosh)\r\n    ];\r\n\r\n    return Promise.all(promises);\r\n\r\n}\r\n\r\n\r\n// returns the player for the background music\r\nexport function getBackgroundMusic() {\r\n\r\n    if (storage.backgroundMusicPlayer == null) {\r\n        const sound = play('ambient', {\r\n            volume: soundOptions.backgroundVolume,\r\n            loop: true\r\n        })\r\n        sound.pause();\r\n        storage.backgroundMusicPlayer = sound;\r\n        return storage.backgroundMusicPlayer;\r\n    }\r\n\r\n    return storage.backgroundMusicPlayer;\r\n\r\n\r\n}\r\n\r\n// returns the player for the hitmarker sound\r\nexport function getHitmarker() {\r\n    if (storage.hitmarkerMusicPlayer == null) {\r\n        const sound = play('hitmarker', {\r\n            volume: soundOptions.hitmarkerVolume,\r\n            loop: false\r\n        })\r\n        sound.pause();\r\n        storage.hitmarkerMusicPlayer = sound;\r\n    }\r\n    return storage.hitmarkerMusicPlayer;\r\n\r\n}\r\n\r\n// returns the player for the takeDmg sound\r\nexport function getTakeDmg() {\r\n\r\n    if (storage.playerTakesDamageMusicPlayer == null) {\r\n        const sound = play('takedmg', {\r\n            volume: soundOptions.takedmgVolume,\r\n            loop: false\r\n        })\r\n        sound.pause();\r\n        storage.playerTakesDamageMusicPlayer = sound;\r\n\r\n    }\r\n\r\n    return storage.playerTakesDamageMusicPlayer;\r\n\r\n\r\n}\r\n\r\n// returns the player for the swoosh sound\r\nexport function getSwoosh() {\r\n\r\n    if (storage.swooshMusicPlayer == null) {\r\n        const sound = play('swoosh', {\r\n            volume: soundOptions.swooshVolume,\r\n            loop: false\r\n        })\r\n        sound.pause();\r\n        storage.swooshMusicPlayer = sound;\r\n    }\r\n    return storage.swooshMusicPlayer;\r\n\r\n\r\n}\r\n","\r\nimport { getHitmarker } from \"../../helper/music\";\r\nimport { storage, tempStorage } from \"../../helper/storage\";\r\nimport { k } from \"../../kaboom\";\r\n\r\nexport function initEnemyListener() {\r\n    k.debug.log(\"init enemy listener\");\r\n\r\n\r\n    /**\r\n     * if an enemy dies, the enemy gets destroyed\r\n     * and the score of the enemy gets added to the tempstorage\r\n     */\r\n    k.on(\"death\", \"enemy\", (enemy) => {\r\n        enemy.destroy()\r\n        tempStorage.score += enemy.score;\r\n\r\n    })\r\n\r\n\r\n    /**\r\n     * if an enemy gets hurt, a sound gets played,\r\n     * the solid property gets removed (so the player can move through it)\r\n     * the opacity gets lowerd to indicate the damage.\r\n     * the enemy gets marked so it can't take damage in a given timespan\r\n     */\r\n    k.on(\"hurt\", \"enemy\", (enemy) => {\r\n        if (enemy.isAttackable) {\r\n            getHitmarker().play();\r\n            enemy.solid = false;\r\n            enemy.opacity = 0.5;\r\n            enemy.damageCooldown(1000);\r\n        }\r\n\r\n        enemy.isAttackable = false;\r\n    });\r\n\r\n\r\n    // setting facing value for knockback\r\n    k.onUpdate(\"enemy\", (enemy) => {\r\n        enemy.moveTo(storage.player.pos, enemy.speed);\r\n        if (enemy.pos.x > storage.player.pos.x) {\r\n            enemy.facing = -1; // left\r\n        }\r\n        else {\r\n            enemy.facing = 1; // right\r\n        }\r\n        // resets the solid variable\r\n        if (enemy.isAttackable) {\r\n            enemy.solid = true;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    // enemy deals damage to player\r\n    k.onUpdate(\"enemy\", (enemy) => {\r\n\r\n        const player = storage.player;\r\n\r\n        if (enemy.isTouching(player)) {\r\n            if (player.isAttackable) {\r\n                /**\r\n                 * if the enemy deals more than 1 damage, \r\n                 * the hurt function needs to be call multiple times. \r\n                 * its required to check if the player has still\r\n                 * remaining health left to prevent a negative health\r\n                 * amount\r\n                 * \r\n                 */\r\n                for (let i = 0; i < enemy.damage; i++) {\r\n                    if (player.hp() > 0) {\r\n                        player.hurt(1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n    /**\r\n     * if the enemies collide with each other, an enemy gets \r\n     * the solid property removed. with that missing solid property\r\n     * the enemies can move freely. the property gets set again\r\n     *  in an other function.\r\n     */\r\n    k.onCollide(\"enemy\", \"enemy\", (enemy) => {\r\n        enemy.solid = false;\r\n    });\r\n\r\n}","// contains the mapped possible keybinds\r\nexport const KEYBINDS = {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    up: \"up\",\r\n    down: \"down\",\r\n    use: \"e\",\r\n    attack: \"space\",\r\n}","import { GAME_SETTINGS } from \"../game\";\r\n\r\n\r\nexport const LEVEL1_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n    // list of weapons that are getting placed inside the map\r\n    weapons: [\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 2,\r\n            y: 16 * GAME_SETTINGS.scaling * 4,\r\n            type: \"sword\",\r\n        },\r\n\r\n    ],\r\n\r\n}\r\n","import { GAME_SETTINGS } from \"../game\";\r\n\r\nexport const LEVEL2_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n    // list of enemies that are getting placed inside the map\r\n    enemies: [\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 13,\r\n            y: 16 * GAME_SETTINGS.scaling * 6,\r\n            type: \"skelet\",\r\n        },\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 10,\r\n            y: 16 * GAME_SETTINGS.scaling * 5,\r\n            type: \"skelet\",\r\n        },\r\n\r\n    ],\r\n \r\n}","import { GAME_SETTINGS } from \"../game\";\r\n\r\nexport const LEVEL3_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n    // list of enemies that are getting placed inside the map\r\n    enemies: [\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 14,\r\n            y: 16 * GAME_SETTINGS.scaling * 4,\r\n            type: \"skelet\",\r\n        },\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 5,\r\n            y: 16 * GAME_SETTINGS.scaling * 3,\r\n            type: \"skelet\",\r\n        },\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 7,\r\n            y: 16 * GAME_SETTINGS.scaling * 2,\r\n            type: \"skelet\",\r\n        },\r\n\r\n    ],\r\n       // list of weapons that are getting placed inside the map\r\n       weapons: [\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 13,\r\n            y: 16 * GAME_SETTINGS.scaling * 7,\r\n            type: \"hammer\",\r\n        },\r\n    ]\r\n\r\n\r\n}","import { GAME_SETTINGS } from \"../game\";\r\n\r\n\r\nexport const LEVEL4_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n    // list of enemies that are getting placed inside the map\r\n    enemies: [\r\n\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 15,\r\n            y: 16 * GAME_SETTINGS.scaling * 5,\r\n            type: \"skelet\",\r\n        },\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 10,\r\n            y: 16 * GAME_SETTINGS.scaling * 4,\r\n            type: \"zombie\",\r\n        },\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 13,\r\n            y: 16 * GAME_SETTINGS.scaling * 5,\r\n            type: \"zombie\",\r\n        },\r\n\r\n    ],\r\n\r\n}\r\n","import { GAME_SETTINGS } from \"../game\";\r\n\r\n\r\nexport const LEVEL5_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n \r\n}\r\n","import { GAME_SETTINGS } from \"../game\";\r\n\r\nexport const LEVEL6_CFG = {\r\n    map: [\r\n        'acccccccccccccccd',\r\n        'beeeeeeeeeeeeeeeg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bfffffffffffffffg',\r\n        'bffffffffffffffog',\r\n        ' ~~~~~~~~~~~~~~~~',\r\n    ],\r\n    // backgroudn area\r\n    background: {\r\n        rect: {\r\n            x: 16 * GAME_SETTINGS.scaling * 25,\r\n            y: 16 * GAME_SETTINGS.scaling * 15,\r\n        },\r\n        color: (0, 0, 0),\r\n        z: -1,\r\n        origin: 'center',\r\n\r\n    },\r\n    player_pos: {\r\n        x: 16 * GAME_SETTINGS.scaling * 2,\r\n        y: 16 * GAME_SETTINGS.scaling * 2\r\n    },\r\n    // list of enemies that are getting placed inside the map\r\n    enemies: [\r\n        {\r\n            x: 16 * GAME_SETTINGS.scaling * 8,\r\n            y: 16 * GAME_SETTINGS.scaling * 8,\r\n            type: \"masked_orc\",\r\n        },\r\n\r\n    ],\r\n  \r\n\r\n\r\n}","import { LEVEL1_CFG } from \"./level/level-1-conf\";\r\nimport { LEVEL2_CFG } from \"./level/level-2-conf\";\r\nimport { LEVEL3_CFG } from \"./level/level-3-conf\";\r\nimport { LEVEL4_CFG } from \"./level/level-4-conf\";\r\nimport { LEVEL5_CFG } from \"./level/level-5-conf\";\r\nimport { LEVEL6_CFG } from \"./level/level-6-conf\";\r\n// contains all of current level configs\r\nexport const LEVEL_CFGS = [\r\n    LEVEL1_CFG,\r\n    LEVEL2_CFG,\r\n    LEVEL3_CFG,\r\n    LEVEL4_CFG,\r\n    LEVEL5_CFG,\r\n    LEVEL6_CFG\r\n]","// contains the mapped scenes\r\nexport const SCENES = {\r\n    menu: \"menu-scene\",\r\n    main: \"main-scene\",\r\n    end: \"end-scene\",\r\n}","\r\nimport { KEYBINDS } from '../../config/keybinds.js';\r\nimport { LEVEL_CFGS } from '../../config/level-cfgs.js';\r\nimport { SCENES } from '../../config/scenes.js';\r\nimport { resetTempStorage, storage, tempStorage } from '../../helper/storage.js';\r\n\r\nimport { k } from '../../kaboom.js';\r\n\r\n\r\n/**\r\n * the function gets used to change the map.\r\n * checks if the player is at a object to change the map\r\n * if the player pressed the use button, the score, \r\n * health and weapon gets saved from the tempstorage to the storage.\r\n * if it was the last map, the game ends.\r\n * otherwise the next map gets loaded\r\n * \r\n */\r\nexport function initMapChangeListener() {\r\n\r\n    k.debug.log(\"init level change listener\");\r\n\r\n    k.onUpdate(\"player\", (player) => {\r\n\r\n        try {\r\n            const nextLeveLObjects = k.get(\"next-level\");\r\n            // check if player is at the object to change map\r\n            for (let nextLevelId in nextLeveLObjects) {\r\n                if (player.isTouching(nextLeveLObjects[nextLevelId])) {\r\n                    k.debug.log(\"can switch to next level\");\r\n\r\n                    if (keyIsDown(KEYBINDS.use)) {\r\n\r\n                        storage.score += tempStorage.score;\r\n                        if (tempStorage.player_weapon != null) {\r\n                            storage.player_weapon = tempStorage.player_weapon;\r\n                        }\r\n                        storage.health = tempStorage.health;\r\n\r\n                        resetTempStorage(tempStorage);\r\n\r\n                        if (storage.level == LEVEL_CFGS.length - 1) {\r\n                            k.go(SCENES.end);\r\n                            return;\r\n                        }\r\n                        k.go(SCENES.main, storage.level += 1);\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            k.debug.log(e);\r\n        }\r\n\r\n    });\r\n\r\n\r\n}","import { k } from \"../../kaboom\";\r\n\r\n\r\n\r\nexport function initWeaponListener() {\r\n\r\n    k.debug.log(\"init weapon listener\");\r\n\r\n    touchedWeapon = null;\r\n\r\n    /**\r\n     * assign the collided weapon to a variable.\r\n     * this is needed to assign the weapon to a player\r\n     */\r\n    k.onCollide(\"weapon\", \"player\", (weapon) => {\r\n        touchedWeapon = weapon;\r\n\r\n    });\r\n\r\n\r\n    /**\r\n     * is needed to check if the weapon is hitting an enemy.\r\n     * if the weapon is hitting an enemy, \r\n     * the hurt function of the enemy gets triggered.\r\n     * \r\n     */\r\n    k.onUpdate('player-weapon', (weapon) => {\r\n\r\n        const enemys = k.get('enemy');\r\n\r\n        if (enemys.length == 0) { return; }\r\n\r\n        for (let enemyId in enemys) {\r\n            const enemy = enemys[enemyId];\r\n            if (weapon.isTouching(enemy) && weapon.isAttacking) {\r\n\r\n                if (enemy.isAttackable) {\r\n                    enemy.hurt(weapon.damage);\r\n                    const knockback = weapon.knockback * 16;\r\n\r\n                    /**\r\n                     * checks in which direction the enemy is facing\r\n                     * to knockback in the right direction\r\n                      */\r\n                    if (enemy.facing == -1) {\r\n                        enemy.pos.x += knockback;\r\n                    }\r\n                    else {\r\n                        enemy.pos.x -= knockback;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n}\r\n\r\nexport let touchedWeapon;","// weapon specific options\r\nexport const hammerOptions = {\r\n    cooldown: 300,\r\n    damage: 2,\r\n    knockback: 2,\r\n}","// weapon specific options\r\nexport const swordOptions = {\r\n    cooldown: 100,\r\n    damage: 1,\r\n    knockback: 0,\r\n}","import { hammerOptions } from \"./weapons/hammer\";\r\nimport { swordOptions } from \"./weapons/sword\";\r\n\r\n// contains all of the current weapons\r\nexport const weaponOptions = {\r\n    \"sword\": swordOptions,\r\n    \"hammer\": hammerOptions,\r\n}\r\n","import { GAME_SETTINGS } from '../config/game';\r\nimport { k } from '../kaboom';\r\nimport { weaponOptions } from '../config/weapons';\r\n\r\nexport const createWeaponForPlayer = (\r\n    player,\r\n    weapon,\r\n    options,\r\n) => {\r\n\r\n    const weaponForPlayer = k.add([\r\n        sprite(weapon.name),\r\n        pos(weapon.pos = player.pos.add(1 * 10, 2)),\r\n        origin('center'),\r\n        area(),\r\n        rotate(25),\r\n        scale(GAME_SETTINGS.scaling),\r\n        'player-weapon',\r\n        weapon.name,\r\n        {\r\n            name: weapon.name,\r\n            options: options,\r\n            damage: options ? options.damage : 1,\r\n            knockback: options ? options.knockback : 0,\r\n            tag: 'weapon',\r\n            isAttacking: false,\r\n            canAttack: true,\r\n            updatePosition: () => {\r\n\r\n                // -1 links\r\n                //  1 rechts\r\n\r\n                weaponForPlayer.pos = player.pos.add(10 * player.facing, 2);\r\n                if (player.facing == -1 && !weaponForPlayer.flipX) {\r\n                    weaponForPlayer.flipX = true;\r\n                    weaponForPlayer.angle = weaponForPlayer.angle * player.facing;\r\n                }\r\n                else if (player.facing == 1 && weaponForPlayer.flipX) {\r\n                    weaponForPlayer.flipX = false;\r\n                    weaponForPlayer.angle = Math.abs(weaponForPlayer.angle);\r\n\r\n                }\r\n\r\n            },\r\n            attack: () => {\r\n\r\n                // const flip = player.xFlipped ? -1 : 1\r\n\r\n                if (Math.abs(weaponForPlayer.angle) >= 90) {\r\n                    weaponForPlayer.angle = 25 * player.facing;\r\n                    weaponForPlayer.canAttack = false;\r\n                    weaponCooldown(weaponForPlayer, options ? options.cooldown : 100);\r\n                }\r\n\r\n                if (weaponForPlayer.canAttack) {\r\n                    weaponForPlayer.angle += 10 * player.facing;\r\n                    player.isAttacking = true;\r\n                    weaponForPlayer.isAttacking = true;\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n    ]);\r\n\r\n    return weaponForPlayer;\r\n};\r\n\r\n\r\n// resets the capability to attack again after given seconds\r\nexport function weaponCooldown(weapon, seconds) {\r\n    setTimeout(function () {\r\n        weapon.canAttack = true;\r\n    }, seconds);\r\n}\r\n\r\n\r\nexport function createWeaponAtPosition(x, y, type, scaling) {\r\n    k.add([\r\n        sprite(type),\r\n        pos(x, y),\r\n        origin('center'),\r\n        area(),\r\n        scale(scaling ? scaling : GAME_SETTINGS.scaling),\r\n        \"weapon\",\r\n        {\r\n            name: type,\r\n            options: weaponOptions[type],\r\n        },\r\n    ]);\r\n\r\n}\r\n\r\n// returns the current weapon of the player\r\nexport function getWeapon() {\r\n\r\n    return k.get('player-weapon')[0];\r\n}\r\n\r\nexport function attackWeapon() {\r\n    const weapon = getWeapon();\r\n    if (!weapon) { return };\r\n\r\n    weapon.attack();\r\n\r\n}\r\n\r\n// resets the displayed angle of the weapon to the default angle\r\nexport function resetWeaponAngle() {\r\n    const weapon = getWeapon();\r\n    if (!weapon) { return };\r\n\r\n    const flip = weapon.flipX ? -1 : 1\r\n    weapon.angle = 25 * flip;\r\n\r\n    weapon.isAttacking = false;\r\n}","\r\nimport { k } from '../../kaboom.js';\r\nimport { touchedWeapon } from './weapon-listener.js';\r\nimport { attackWeapon, createWeaponAtPosition, createWeaponForPlayer, getWeapon, resetWeaponAngle } from '../../objects/weapon.js';\r\nimport { storage, tempStorage } from '../../helper/storage.js';\r\nimport { SCENES } from '../../config/scenes.js';\r\nimport { KEYBINDS } from '../../config/keybinds.js';\r\nimport { getSwoosh, getTakeDmg } from '../../helper/music.js';\r\n\r\n\r\n\r\n\r\nexport function initPlayerControlListener(player) {\r\n\r\n    k.debug.log(\"init player control listener\");\r\n\r\n    k.onUpdate(() => {\r\n        movement();\r\n        weaponPickUp();\r\n        updateWeaponPosition();\r\n        updateCameraToPlayerPos();\r\n        attack();\r\n\r\n    });\r\n\r\n    /**\r\n     * if the player gets hurt by an enemy,\r\n     * a sound gets played and the players opacity gets reduced.\r\n     * the health gets updated in the tempstorage\r\n     */\r\n    k.on(\"hurt\", \"player\", (player) => {\r\n        if (player.isAttackable) {\r\n            getTakeDmg().play();\r\n            k.debug.log(\"player hp: \" + player.hp())\r\n            player.opacity = 0.5;\r\n            player.damageCooldown(1500);\r\n            tempStorage.health -= 1;\r\n        }\r\n\r\n        player.isAttackable = false;\r\n    })\r\n\r\n\r\n    // if the player dies, the screen switches to the end screen\r\n    k.on(\"death\", \"player\", () => {\r\n        k.go(SCENES.end);\r\n    })\r\n\r\n\r\n    // update weapon to follow player\r\n    function updateWeaponPosition() {\r\n        const weapon = getWeapon();\r\n\r\n        if (weapon != null) {\r\n            weapon.updatePosition();\r\n        }\r\n    }\r\n\r\n\r\n    // sets the camera to the player position\r\n    function updateCameraToPlayerPos() {\r\n        camPos(player.pos);\r\n    }\r\n\r\n\r\n    /**\r\n     * handles the attacking of the player.\r\n     * plays the sound, moves the weapon\r\n     */\r\n    function attack() {\r\n\r\n        const space = isKeyDown(KEYBINDS.attack);\r\n\r\n        if (tempStorage.player_weapon == null && storage.player_weapon == null) { return; }\r\n\r\n        if (space) {\r\n\r\n            player.isAttacking = true;\r\n            getSwoosh().play();\r\n            setTimeout(function () {\r\n\r\n                attackWeapon();\r\n            }, getWeapon().damageCooldown);\r\n        }\r\n        else {\r\n            getSwoosh().stop();\r\n            player.isAttacking = false;\r\n            resetWeaponAngle();\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles the movement of the player.\r\n     * flips the player sprite if the x-cord gets changed.\r\n     * plays the run and the idle animation if a key is pressed or not\r\n     */\r\n    function movement() {\r\n        const left = isKeyDown(KEYBINDS.left);\r\n        const right = isKeyDown(KEYBINDS.right);\r\n        const up = isKeyDown(KEYBINDS.up);\r\n        const down = isKeyDown(KEYBINDS.down);\r\n\r\n        if (left || right || up || down) {\r\n            if (player.currentAnimation != 'run') {\r\n                player.currentAnimation = 'run';\r\n                player.play(player.currentAnimation);\r\n            }\r\n\r\n            if (left || right) {\r\n                player.flipX(left);\r\n                left ? player.move(-player.speed, 0) : player.move(player.speed, 0);\r\n                left ? player.facing = -1 : player.facing = 1;\r\n            }\r\n\r\n            if (up || down) {\r\n                up ? player.move(0, -player.speed) : player.move(0, player.speed);\r\n            }\r\n        }\r\n\r\n\r\n        if (!left && !right && !up && !down) {\r\n            if (player.currentAnimation != 'idle') {\r\n                player.currentAnimation = 'idle';\r\n                player.play(player.currentAnimation);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * handles the assigning of a weapon to a player.\r\n     * destroys the weapon on the map if the player pressed the use key\r\n     * and spawns a new one for the player\r\n     * \r\n     */\r\n    function weaponPickUp() {\r\n        const e = isKeyPressed(KEYBINDS.use);\r\n        if (!touchedWeapon) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (player.isTouching(touchedWeapon)) {\r\n            k.debug.log(\"touches weapon\")\r\n            if (e) {\r\n\r\n                touchedWeapon.destroy();\r\n                const weapon = getWeapon();\r\n\r\n                // if the player had a weapon, the weapon gets played to the map\r\n                if (weapon) {\r\n                    createWeaponAtPosition(\r\n                        weapon.pos.x,\r\n                        weapon.pos.y,\r\n                        weapon.name)\r\n                    weapon.destroy();\r\n                }\r\n\r\n                const weaponForPlayer = createWeaponForPlayer(player, touchedWeapon, touchedWeapon.options);\r\n\r\n                /**\r\n                 * sets the weapon to the tempstorage, because\r\n                 * if the player dies, the weapon should not be loaded\r\n                 * if the player restarts the level\r\n                 */\r\n                tempStorage.player_weapon = weaponForPlayer;\r\n\r\n                k.debug.log(\"picked up weapon - \" + touchedWeapon.name);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","export const MENU_CONTENT = {\r\n    description_heading: \"2D-Adventure\",\r\n    description_text: \"In dem Adventure begibt sich\\n\" +\r\n        \"ein mutiger Ritter in die Tiefen\\n\" +\r\n        \"einer Hoehle. Erforsche 5 Ebenen,\\n\" +\r\n        \"kaempfe gegen die verschiedenen Gegner\\n\" +\r\n        \"mit den 2 unterschiedlichen Waffen.\\n\" +\r\n        \"Ob du gegen Gegner kaempfen moechtest\\n\" +\r\n        \"oder Pazifist bist, ist deine Entscheidung.\",\r\n    keybind_text_heading: \"Tastenbelegung:\",\r\n    keybind_text: \"^     = Hoch\\n\" +\r\n        \"<     = Links\\n\" +\r\n        \">     = Runter\\n\" +\r\n        \">     = Rechts\\n\" +\r\n        \"e     = Benutzen\\n\" +\r\n        \"space = Angreifen\\n\",\r\n    startButtonText: \"Start\"\r\n}\r\n\r\nexport const END_SCREEN_CONTENT = {\r\n    winning_text: \"Alle Ebenen geschafft\",\r\n    score_text: \"Score: \",\r\n    health_text: \"Verbleibende Herzen: \",\r\n    points_text: \"Erreichte Punkte: \",\r\n    restartButtonText: \"Ebene Wiederholen\",\r\n    newGameButtonText: \"Neues Spiel\"\r\n}\r\n\r\nexport const UI_CONTENT = {\r\n    room: \"Ebene: \",\r\n    score: \"Score: \",\r\n}","import { UI_CONTENT } from \"../config/text-content\";\r\nimport { storage, tempStorage } from \"../helper/storage\";\r\nimport { k } from \"../kaboom\"\r\n\r\n\r\n\r\nexport function initUi() {\r\n\r\n    //init hearts for storage objects\r\n    if (storage.health == 0) {\r\n        storage.health = storage.player.hp();\r\n    }\r\n    if (tempStorage.health == 0) {\r\n        tempStorage.health = storage.player.hp();\r\n    }\r\n\r\n    //creates heart container\r\n    for (let i = 0; i < storage.health; i++) {\r\n        k.add([\r\n            k.layer(\"ui\"),\r\n            k.pos(16 * i, 0),\r\n            k.origin(\"center\"),\r\n            k.sprite(\"hearth_full\"),\r\n            k.opacity(1),\r\n            \"player-healthbar\"\r\n        ]);\r\n    }\r\n\r\n    // creates score label\r\n    const scoreLabel = k.add([\r\n        k.layer(\"ui\"),\r\n        k.pos(16 * storage.health, 0),\r\n        k.origin(\"center\"),\r\n        text(UI_CONTENT.score + \"0\"),\r\n        {\r\n            size: 5,\r\n            width: 3,\r\n            font: \"sink\",\r\n        },\r\n        \"scoreLabelText\"\r\n    ]);\r\n\r\n    // creates room label\r\n    k.add([\r\n        k.layer(\"ui\"),\r\n        k.pos(0, -20),\r\n        k.origin(\"center\"),\r\n        text(UI_CONTENT.room + \"0\"),\r\n        {\r\n            size: 5,\r\n            width: 3,\r\n            font: \"sink\",\r\n        },\r\n        \"roomLabelText\"\r\n    ]);\r\n\r\n    // if the player gets hurt, call the update function\r\n    k.on(\"hurt\", \"player\", (player) => {\r\n        updatePlayerHealthbar(player.hp());\r\n    });\r\n\r\n}\r\n\r\n// updates text as well as position\r\nexport function updateScoreText() {\r\n\r\n    const scoreLabel = k.get('scoreLabelText')[0];\r\n    scoreLabel.pos.x = 16 * (storage.player.hp() + 3);\r\n    scoreLabel.text = UI_CONTENT.score + (storage.score + tempStorage.score);\r\n}\r\n\r\n// updates text as well as position\r\nexport function updateRoomText() {\r\n\r\n    const heart = k.get('player-healthbar')[0];\r\n\r\n    const roomLabel = k.get('roomLabelText')[0]\r\n    if (roomLabel == null || heart == null) { return; }\r\n\r\n    roomLabel.pos.x = heart.pos.x + 16;\r\n    roomLabel.pos.y = heart.pos.y - 20;\r\n\r\n    roomLabel.text = UI_CONTENT.room + storage.level;\r\n}\r\n\r\n// displays the current health of the player\r\nexport function updatePlayerHealthbar(health) {\r\n    const playerHearth = k.get('player-healthbar')[health];\r\n    if (playerHearth) {\r\n        playerHearth.opacity = 0;\r\n    }\r\n\r\n}\r\n\r\n// updates the position of the helathbar and the scorelabel\r\nexport function updatePosition() {\r\n    const scoreLabel = k.get('scoreLabelText')[0];\r\n    for (let i = 0; i < storage.player.hp(); i++) {\r\n        const heart = k.get('player-healthbar')[i];\r\n        // check if a heart is visible \r\n        try {\r\n            if (heart.opacity != 0) {\r\n                heart.pos.x = (16 * i) + storage.player.pos.x - 16;\r\n            }\r\n        }\r\n        catch (e) {\r\n            k.debug.log(heart);\r\n        }\r\n\r\n    }\r\n    // sets the position of the scorelabel\r\n    scoreLabel.pos.x = 16 * (storage.player.hp() + 1) + storage.player.pos.x;\r\n}\r\n","import { k } from \"../../kaboom\";\r\nimport { updatePosition, updateRoomText, updateScoreText } from \"../ui\";\r\n\r\n\r\n\r\nexport function initUpdateUiListener() {\r\n\r\n    k.debug.log(\"init update ui listener\");\r\n\r\n    // runs all of the tasks to update the ui\r\n    k.onUpdate(() => {\r\n        updateScoreText();\r\n        updatePosition();\r\n        updateRoomText();\r\n    });\r\n\r\n\r\n}\r\n\r\n","import { k } from \"../kaboom\"\r\nimport { storage } from \"../helper/storage\";\r\nimport { initEnemyListener } from \"./listeners/enemy-listener\";\r\nimport { initMapChangeListener } from \"./listeners/level-change-listener\";\r\nimport { initPlayerControlListener } from \"./listeners/player-listener\";\r\nimport { initUpdateUiListener } from \"./listeners/ui-listeners\";\r\nimport { initWeaponListener } from \"./listeners/weapon-listener\";\r\n\r\n// loads all of the needed listeners\r\nexport function initListener() {\r\n    k.debug.log(\"init listeners\");\r\n\r\n    initWeaponListener();\r\n\r\n    initPlayerControlListener(storage.player);\r\n\r\n    initMapChangeListener()\r\n\r\n    initEnemyListener();\r\n\r\n    initUpdateUiListener();\r\n\r\n}\r\n\r\n","import { k } from \"../kaboom\";\r\n\r\n// sets the background with given settings to hide the area around the map\r\nexport function setBackground(backgroundCfg, player) {\r\n    k.add([\r\n        k.rect(backgroundCfg.rect.x,\r\n            backgroundCfg.rect.y),\r\n        k.pos(0, 0),\r\n        k.color(backgroundCfg.color),\r\n        k.origin(backgroundCfg.origin),\r\n        k.follow(player),\r\n        k.z(backgroundCfg.z)\r\n    ]);\r\n}","import { GAME_SETTINGS } from \"./game\";\r\n\r\n// contains all of the mapped sprites for map creation\r\nexport const SPRITES = {\r\n    Cfg: {\r\n        width: 16 * GAME_SETTINGS.scaling,\r\n        height: 16 * GAME_SETTINGS.scaling,\r\n        'a': () => [\r\n            sprite('wall_top_left'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n\r\n        ],\r\n        'b': () => [\r\n            sprite('wall_inner_corner_mid_left'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n\r\n        ],\r\n        'c': () => [\r\n            sprite('wall_top_mid'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n        ],\r\n        'd': () => [\r\n            sprite('wall_top_right'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n        ],\r\n\r\n        'e': () => [\r\n            sprite('wall_mid'),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n        ],\r\n        'f': () => [\r\n            sprite('floor_1'),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n        ],\r\n        'g': () => [\r\n            sprite('wall_inner_corner_mid_right'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n        ],\r\n        '~': () => [\r\n            sprite('wall_inner_corner_t_top_left'),\r\n            area(),\r\n            solid(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            opacity(0),\r\n            layer(\"bg\"),\r\n        ],\r\n        'o': () => [\r\n            sprite('hole'),\r\n            area(),\r\n            scale(GAME_SETTINGS.scaling),\r\n            layer(\"bg\"),\r\n            \"next-level\",\r\n        ]\r\n    }\r\n}","import { SPRITES } from '../config/sprites';\r\nimport { k } from '../kaboom';\r\n\r\n// loads the map and sets the scale of the cam\r\nexport function loadMap(map) {\r\n    k.camScale(5);\r\n    k.addLevel(map, SPRITES.Cfg);\r\n\r\n}","\r\nimport { GAME_SETTINGS } from \"../config/game.js\";\r\nimport { getHitmarker } from \"../helper/music.js\";\r\nimport { k } from \"../kaboom.js\";\r\n\r\nexport const createEnemyAtPosition = (\r\n    x,\r\n    y,\r\n    type,\r\n    options) => {\r\n    k.debug.log(\"create enemy: \" + type);\r\n    const enemy = k.add([\r\n        k.sprite(type),\r\n        k.pos(x, y),\r\n        k.origin('center'),\r\n        k.area(),\r\n        health(options.health ? options.health : 3),\r\n        k.solid(),\r\n        {\r\n            name: type,\r\n            options: options,\r\n            isAttacking: false,\r\n            isAttackable: true,\r\n            speed: options ? options.speed : 20,\r\n            damage: options ? options.damage : 1,\r\n            currentAnimation: \"idle\",\r\n            weapon: null,\r\n            XFlipped: false,\r\n            score: options ? options.score : 1,\r\n            facing: -1,\r\n            damageCooldown: (seconds) => {\r\n                setTimeout(function () {\r\n                    enemy.isAttackable = true;\r\n                    enemy.opacity = 1\r\n                    enemy.solid = true;\r\n                    getHitmarker().stop()\r\n                }, seconds);\r\n            },\r\n\r\n        },\r\n        \"enemy\",\r\n        k.scale(options.isBoss ? GAME_SETTINGS.scaling + 1 : GAME_SETTINGS.scaling),\r\n        k.area(),\r\n\r\n\r\n    ]);\r\n    enemy.play(enemy.currentAnimation);\r\n\r\n\r\n\r\n    return enemy;\r\n}\r\n","// contains settings for the player\r\nexport const PLAYER = {\r\n    health: 3\r\n}","import { GAME_SETTINGS } from \"../config/game.js\";\r\nimport { PLAYER } from \"../config/player.js\";\r\nimport { getTakeDmg } from \"../helper/music.js\";\r\nimport { storage } from \"../helper/storage.js\";\r\nimport { k } from \"../kaboom.js\";\r\n\r\nexport const createPlayerAtPosition = (x, y) => {\r\n    k.debug.log(\"create player\")\r\n    const player = k.add([\r\n        k.sprite(\"knight\"),\r\n        k.pos(x, y),\r\n        k.origin('center'),\r\n        k.area(),\r\n        health(\r\n            // check if health is inside storage to update from another screen\r\n            storage.health == 0 ? PLAYER.health : storage.health\r\n        ),\r\n        {\r\n            isAttacking: false,\r\n            isAttackable: true,\r\n            speed: 100,\r\n            currentAnimation: \"idle\",\r\n            health: 3,\r\n            weapon: null,\r\n            facing: 1,\r\n\r\n            damageCooldown: (seconds) => {\r\n                setTimeout(function () {\r\n                    player.isAttackable = true;\r\n                    player.opacity = 1\r\n                    getTakeDmg().stop();\r\n                }, seconds);\r\n            }\r\n        },\r\n        \"player\",\r\n        k.scale(GAME_SETTINGS.scaling),\r\n        k.area(),\r\n        k.solid(),\r\n        z(9),\r\n\r\n    ]);\r\n    player.play(player.currentAnimation);\r\n\r\n    return player;\r\n}\r\n\r\n\r\n// returns current player object\r\nexport default function getPlayer() {\r\n\r\n    return k.get('player')[0];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// enemy specific options\r\nexport const maskedOrcOptions = {\r\n    damage: 1,\r\n    speed: 20,\r\n    score: 5,\r\n    health: 5,\r\n    isBoss: true,\r\n}","// enemy specific options\r\nexport const skeletOptions = {\r\n    damage: 1,\r\n    speed: 10,\r\n    score: 1,\r\n    health: 3,\r\n    isBoss: false,\r\n}","// enemy specific options\r\nexport const zombieOptions = {\r\n    damage: 2,\r\n    speed: 15,\r\n    score: 2,\r\n    health: 2,\r\n    isBoss: false,\r\n}","import { maskedOrcOptions } from \"./enemies/masked-orc\";\r\nimport { skeletOptions } from \"./enemies/skelet\";\r\nimport { zombieOptions } from \"./enemies/zombie\";\r\n\r\n// contains all of the current mapped enemy options\r\nexport const enemyOptions = {\r\n    \"skelet\": skeletOptions,\r\n    \"zombie\": zombieOptions,\r\n    \"masked_orc\": maskedOrcOptions\r\n}\r\n","import { createEnemyAtPosition } from \"../objects/enemy\";\r\nimport { createPlayerAtPosition } from \"../objects/player\";\r\nimport { createWeaponAtPosition } from \"../objects/weapon\";\r\nimport { enemyOptions } from \"../config/enemies\"\r\n\r\n// spawns a player at a given position from the player config\r\nexport function spawnPlayer(playerPosCfg) {\r\n    return createPlayerAtPosition(playerPosCfg.x, playerPosCfg.y);\r\n}\r\n\r\n// spawns weapon at a given position and type\r\nexport function spawnWeapons(weapons) {\r\n    // if there are no weapons, return\r\n    if (weapons == null || weapons.length == 0) { return; }\r\n\r\n    for (let weapon in weapons) {\r\n        createWeaponAtPosition(\r\n            weapons[weapon].x,\r\n            weapons[weapon].y,\r\n            weapons[weapon].type);\r\n    }\r\n\r\n}\r\n\r\n// spawns enemies at a given position and type\r\nexport function spawnEnemies(enemys) {\r\n\r\n    if (enemys == null || enemys.length == 0) { return; }\r\n\r\n    for (let enemy in enemys) {\r\n\r\n        const options = enemyOptions[enemys[enemy].type];\r\n\r\n        createEnemyAtPosition(\r\n            enemys[enemy].x,\r\n            enemys[enemy].y,\r\n            enemys[enemy].type,\r\n            options ? options : null);\r\n    }\r\n}","import { LEVEL_CFGS } from \"../config/level-cfgs\"\r\nimport { setBackground } from \"./background\";\r\nimport { loadMap } from \"./map-loader\"\r\nimport { spawnEnemies, spawnPlayer, spawnWeapons } from \"./spawner\";\r\nimport { storage } from \"./storage\";\r\nimport { k } from \"../kaboom\"\r\nimport { createWeaponForPlayer } from \"../objects/weapon\";\r\n\r\n/**\r\n * generates the whole level.\r\n * loads the map, spawns all of the objects that are in the level config\r\n * and sets the background ( current a black background )\r\n */\r\n\r\nexport const generateLevel = (level) => {\r\n    k.debug.log(\"generate level\");\r\n    loadMap(LEVEL_CFGS[level].map, LEVEL_CFGS[level]);\r\n\r\n    storage.player = spawnPlayer(LEVEL_CFGS[level].player_pos);\r\n\r\n    /* checks if the player had a weapon. \r\n     * if so, the player gets the old weapon from the storage object\r\n    */\r\n    storage.player_weapon ? createWeaponForPlayer(storage.player,\r\n        storage.player_weapon,\r\n        storage.player_weapon.options) : null;\r\n\r\n    spawnEnemies(LEVEL_CFGS[level].enemies);\r\n\r\n    spawnWeapons(LEVEL_CFGS[level].weapons);\r\n\r\n    setBackground(LEVEL_CFGS[level].background,\r\n        storage.player);\r\n\r\n\r\n}","import { initListener } from \"../components/init-listeners\";\r\nimport { initUi } from \"../components/ui\";\r\nimport { k } from \"../kaboom\";\r\nimport { generateLevel } from \"../helper/generate-level\";\r\n\r\n\r\nexport function mainScene(level) {\r\n\r\n    // sets layers\r\n    k.layers(['bg', 'obj', 'ui'], 'bg');\r\n    // loads the level and spawns objects\r\n    generateLevel(level);\r\n    // loads the ui\r\n    initUi();\r\n    // loads all listerns\r\n    initListener();\r\n\r\n}\r\n","import { k } from '../kaboom';\r\nimport { resetStorage, restartLevelStorage, storage, tempStorage } from '../helper/storage';\r\nimport { END_SCREEN_CONTENT } from '../config/text-content';\r\nimport { SCENES } from '../config/scenes';\r\nimport { getBackgroundMusic } from '../helper/music';\r\n\r\n\r\n\r\nexport function endScreen() {\r\n    getBackgroundMusic().stop();\r\n\r\n    // get remaining hearts\r\n    const health = storage.player.hp();\r\n\r\n    // get current score\r\n    const score = storage.score + tempStorage.score;\r\n\r\n    const result = score + health;\r\n\r\n    // Background\r\n    k.add([rect(k.width(), k.height()), pos(0, 0), color(34, 34, 34)]);\r\n\r\n\r\n    if (health > 0) {\r\n        k.add([\r\n            k.pos(k.width() * 0.5, k.height() * 0.1),\r\n            k.text(END_SCREEN_CONTENT.winning_text, 2),\r\n            color(rgb(255, 255, 255)),\r\n            k.origin('center'),\r\n        ]);\r\n    }\r\n\r\n\r\n    // Score text\r\n    k.add([\r\n        k.pos(k.width() * 0.5, k.height() * 0.25),\r\n        k.text(END_SCREEN_CONTENT.score_text + score, 2),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n    ]);\r\n\r\n    // Remaining health text\r\n    k.add([\r\n        k.pos(k.width() * 0.5, k.height() * 0.4),\r\n        k.text(END_SCREEN_CONTENT.health_text + health, 2),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n    ]);\r\n\r\n    // Points text\r\n    k.add([\r\n        k.pos(k.width() * 0.5, k.height() * 0.55),\r\n        k.text(END_SCREEN_CONTENT.points_text + result, 2),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n    ]);\r\n\r\n\r\n    const newGameButtonText = k.add([\r\n        text(END_SCREEN_CONTENT.newGameButtonText, {\r\n            size: 50\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n        k.pos(k.width() * 0.25, k.height() * 0.8),\r\n        {\r\n            width: this.width,\r\n            height: this.height,\r\n        },\r\n        z(2)\r\n\r\n    ]);\r\n\r\n    const newGameButton = k.add([\r\n        k.pos(newGameButtonText.pos.x, newGameButtonText.pos.y),\r\n        k.rect(newGameButtonText.width * 1.2,\r\n            newGameButtonText.height * 1.2),\r\n        k.origin('center'),\r\n        k.color(1, 1, 1),\r\n        area(),\r\n        k.outline(2, YELLOW),\r\n\r\n    ]);\r\n\r\n    newGameButton.onClick(() => {\r\n        resetStorage(storage)\r\n        resetStorage(tempStorage)\r\n        storage.backgroundMusicPlayer.play();\r\n        k.go(SCENES.main, storage.level);\r\n    });\r\n\r\n\r\n    // if health is greater than 0, the player shouldn't be able to restart the level\r\n    if (health != 0) {\r\n        return;\r\n    }\r\n\r\n    const restartButtonText = k.add([\r\n        text(END_SCREEN_CONTENT.restartButtonText, {\r\n            size: 50\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n        k.pos(k.width() * 0.75, k.height() * 0.8),\r\n        {\r\n            width: this.width,\r\n            height: this.height,\r\n        },\r\n        z(2),\r\n\r\n    ]);\r\n\r\n\r\n\r\n    const restartButton = k.add([\r\n        k.pos(restartButtonText.pos.x, restartButtonText.pos.y),\r\n        k.rect(restartButtonText.width * 1.2,\r\n            restartButtonText.height * 1.2),\r\n        k.origin('center'),\r\n        k.color(1, 1, 1),\r\n        area(),\r\n        k.outline(2, YELLOW),\r\n\r\n    ]);\r\n\r\n    restartButton.onClick(() => {\r\n        restartLevelStorage(tempStorage, storage);\r\n        storage.backgroundMusicPlayer.play();\r\n        k.go(SCENES.main, storage.level);\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { k } from '../kaboom';\r\nimport { resetStorage, storage } from '../helper/storage';\r\nimport { MENU_CONTENT } from '../config/text-content';\r\nimport { SCENES } from '../config/scenes';\r\nimport { getBackgroundMusic } from '../helper/music';\r\n\r\n\r\nexport function startScreen() {\r\n\r\n    // Background\r\n    k.add([rect(k.width(), k.height()), pos(0, 0), color(34, 34, 34)]);\r\n\r\n\r\n    k.add([\r\n        k.pos(k.width() * 0.15, k.height() * 0.2),\r\n        k.text(MENU_CONTENT.description_heading, {\r\n            size: 55,\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n    ]);\r\n\r\n\r\n    // Keybinds text\r\n    k.add([\r\n        text(MENU_CONTENT.description_text, {\r\n            size: 40,\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('left'),\r\n        k.pos(k.width() * 0.03, k.height() * 0.4),\r\n\r\n    ]);\r\n\r\n\r\n\r\n\r\n\r\n    // Keybinds text heading\r\n    k.add([\r\n        k.pos(k.width() * 0.80, k.height() * 0.2),\r\n        k.text(MENU_CONTENT.keybind_text_heading, {\r\n            size: 55,\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n    ]);\r\n\r\n    // Keybinds text\r\n    k.add([\r\n        text(MENU_CONTENT.keybind_text, {\r\n            size: 55,\r\n        }),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('left'),\r\n        k.pos(k.width() * 0.68, k.height() * 0.5),\r\n\r\n    ]);\r\n\r\n\r\n\r\n    const startButtonText = k.add([\r\n        text(MENU_CONTENT.startButtonText, 3),\r\n        color(rgb(255, 255, 255)),\r\n        k.origin('center'),\r\n        k.pos(k.width() * 0.5, k.height() * 0.85),\r\n        {\r\n            width: this.width,\r\n            height: this.height,\r\n        },\r\n        z(2),\r\n\r\n    ]);\r\n\r\n    const startButton = k.add([\r\n        k.pos(startButtonText.pos.x, startButtonText.pos.y),\r\n        k.rect(startButtonText.width * 1.5,\r\n            startButtonText.height * 1.5),\r\n        k.origin('center'),\r\n        k.color(1, 1, 1),\r\n        area(),\r\n        k.outline(2, YELLOW),\r\n\r\n    ]);\r\n\r\n\r\n    // starts the game and the music\r\n    startButton.onClick(() => {\r\n        resetStorage(storage)\r\n        k.go(SCENES.main, storage.level);\r\n        getBackgroundMusic().play()\r\n\r\n    });\r\n}\r\n","import { k } from './kaboom';\r\n\r\nimport { loadGameSprites } from './helper/sprite-loader.js';\r\nimport { mainScene } from './scenes/main';\r\nimport { endScreen } from './scenes/end';\r\nimport { GAME_SETTINGS } from './config/game';\r\nimport { SCENES } from './config/scenes';\r\nimport { loadMusic } from './helper/music';\r\nimport { startScreen } from './scenes/intro';\r\n\r\n\r\n// sets the debug settings\r\nk.debug.inspect = GAME_SETTINGS.inspect;\r\nk.debug.showLog = GAME_SETTINGS.showLog;\r\n\r\n// loads all of the sprite from the tileset\r\nloadGameSprites();\r\n\r\n// defines all of the scenes\r\nk.scene(SCENES.menu, startScreen);\r\nk.scene(SCENES.main, mainScene);\r\nk.scene(SCENES.end, endScreen);\r\n\r\n\r\n// load the sound files and start the game\r\nloadMusic().then(() => {\r\n    k.go(SCENES.menu);\r\n});\r\n"]}